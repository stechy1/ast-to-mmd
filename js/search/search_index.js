var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/BlockIdGenerator.html",[0,1.195,1,1.018]],["body/interfaces/BlockIdGenerator.html",[0,1.869,1,1.593,2,2.099,3,0.921,4,0.921,5,0.773,6,0.509,7,2.202,8,1.971,9,3.175,10,1.765,11,0.773,12,3.225,13,3.225,14,1.765,15,1.765,16,0.519,17,1.593,18,2.987,19,1.087,20,3.225,21,3.175,22,1.355,23,0.062,24,2.037,25,4.021,26,0.921,27,0.049,28,0.049]],["title/classes/Convertor.html",[29,0.168,30,1.673]],["body/classes/Convertor.html",[1,1.609,3,0.528,4,1.201,5,0.786,6,0.46,8,0.733,11,0.659,14,2.225,15,1.795,16,0.298,17,1.089,19,1.307,21,2.17,22,0.624,23,0.063,26,0.528,27,0.034,28,0.034,29,0.215,30,2.363,31,1.105,32,1.461,33,2.17,34,2.749,35,4.064,36,2.366,37,1.278,38,1.987,39,2.525,40,3.413,41,3.279,42,3.63,43,1.461,44,1.851,45,3.413,46,3.63,47,2.749,48,2.17,49,2.303,50,2.866,51,1.013,52,1.013,53,0.785,54,1.013,55,3.279,56,2.749,57,2.749,58,1.795,59,2.17,60,1.851,61,2.749,62,2.749,63,2.749,64,1.987,65,2.123,66,2.17,67,2.749,68,1.205,69,1.205,70,1.461,71,2.589,72,1.461,73,1.461,74,1.851,75,1.205,76,1.687,77,1.79,78,1.461,79,1.851,80,1.851,81,3.487,82,2.749,83,1.851,84,1.79,85,1.851,86,1.851,87,2.749,88,1.851,89,2.749,90,1.851,91,2.749,92,2.749,93,2.749,94,2.749,95,1.851,96,1.851,97,1.851,98,0.86]],["title/classes/Exporter.html",[29,0.168,99,1.673]],["body/classes/Exporter.html",[3,1.052,4,1.052,5,0.883,6,0.467,11,0.883,23,0.059,26,1.052,27,0.054,28,0.054,29,0.286,31,1.242,33,2.91,36,2.017,99,2.839,100,2.91,101,3.685,102,2.017,103,3.685,104,3.685]],["title/interfaces/GraphResult.html",[0,1.195,64,1.407]],["body/interfaces/GraphResult.html",[0,2.024,2,2.071,3,0.908,4,0.908,5,0.762,6,0.403,11,0.762,14,2.5,16,0.512,23,0.062,26,0.908,27,0.049,28,0.049,36,2.665,37,1.853,45,3.887,53,1.138,64,2.183,65,2.183,68,2.071,69,2.071,73,2.511,75,2.595,105,1.072,106,2.511,107,3.987,108,3.987]],["title/classes/IncrementalBlockIdGenerator.html",[29,0.168,109,1.673]],["body/classes/IncrementalBlockIdGenerator.html",[1,1.774,3,0.778,4,0.778,5,0.653,6,0.512,7,2.215,8,1.911,10,1.491,11,0.653,15,1.491,16,0.439,17,1.429,18,2.804,19,1.216,22,0.918,23,0.063,24,1.677,26,0.778,27,0.044,28,0.044,29,0.178,31,0.918,37,1.677,38,2.215,53,0.778,58,2.358,59,2.849,65,1.491,76,1.266,98,1.266,102,2.358,109,2.349,110,3.194,111,2.849,112,3.608,113,3.608,114,3.608,115,4.696,116,2.849,117,2.151,118,1.266,119,1.266,120,2.849,121,2.151,122,2.724,123,2.724]],["title/classes/LineRenderer.html",[29,0.168,124,1.673]],["body/classes/LineRenderer.html",[3,0.25,4,0.25,5,0.21,6,0.539,8,0.93,11,0.939,16,0.141,17,0.596,19,1.449,22,1.1,23,0.064,24,1.979,26,0.671,27,0.019,28,0.019,29,0.13,31,0.295,37,0.7,38,2.306,39,0.98,43,0.692,48,1.189,49,0.825,50,1.189,51,1.693,52,1.693,53,1.267,54,1.999,75,2.441,76,1.437,77,2.125,78,0.692,81,0.692,98,1.82,105,1.435,117,2.089,118,1.343,119,2.033,124,2.638,125,2.771,126,0.48,127,1.189,128,1.189,129,3.695,130,1.506,131,1.506,132,1.506,133,1.98,134,1.98,135,1.98,136,1.98,137,1.98,138,1.98,139,2.889,140,2.35,141,2.281,142,1.506,143,1.506,144,1.506,145,1.506,146,1.506,147,1.506,148,1.506,149,1.98,150,1.98,151,1.506,152,1.98,153,0.877,154,2.35,155,1.506,156,1.98,157,2.889,158,1.855,159,2.889,160,0.877,161,3.148,162,2.35,163,0.877,164,2.961,165,3.264,166,2.35,167,2.889,168,2.794,169,1.506,170,0.877,171,2.441,172,2.794,173,1.506,174,0.877,175,2.441,176,0.877,177,0.877,178,0.877,179,0.98,180,1.506,181,0.877,182,3.75,183,2.35,184,1.506,185,0.877,186,1.506,187,0.877,188,1.506,189,0.877,190,1.506,191,0.877,192,1.506,193,0.877,194,0.877,195,0.877,196,0.877,197,0.877,198,0.877,199,0.877,200,0.877,201,0.877,202,1.563,203,0.692,204,0.692,205,0.692,206,0.692,207,1.855,208,1.189,209,1.189,210,2.35,211,1.506,212,0.877,213,1.506,214,1.506,215,2.646,216,0.877,217,0.877,218,2.646,219,2.35,220,1.506,221,1.506,222,0.877,223,0.877,224,1.506,225,0.877,226,0.877,227,0.877,228,1.98,229,0.877,230,0.877,231,0.571,232,0.877,233,0.692,234,0.877,235,0.877,236,0.877]],["title/classes/ShapeRenderer.html",[29,0.168,237,1.673]],["body/classes/ShapeRenderer.html",[3,0.513,4,0.513,5,0.431,6,0.408,11,0.645,16,0.289,17,1.065,19,1.206,22,0.606,23,0.064,24,1.937,26,0.768,27,0.033,28,0.033,29,0.211,31,0.606,37,1.25,38,1.764,39,2.098,51,0.984,52,0.984,53,1.021,54,0.984,76,2.194,77,1.751,98,0.835,105,1.086,118,1.25,119,0.835,126,0.984,127,2.123,128,2.123,141,2.825,158,3.459,202,1.419,237,1.751,238,2.098,239,2.689,240,3.577,241,2.689,242,4.72,243,2.689,244,3.223,245,3.223,246,3.897,247,1.797,248,2.689,249,3.821,250,1.797,251,4.381,252,1.797,253,1.797,254,1.419,255,1.419,256,1.797,257,1.797,258,1.419,259,2.123,260,1.797,261,1.419,262,1.797,263,2.123,264,1.797,265,1.419,266,2.123,267,2.123,268,2.689,269,1.419,270,2.689,271,1.419,272,2.689,273,1.419,274,1.419,275,1.797]],["title/classes/UuidBlockIdGenerator.html",[29,0.168,276,1.673]],["body/classes/UuidBlockIdGenerator.html",[1,1.814,3,0.834,4,0.834,5,0.7,6,0.478,7,2.067,8,1.891,10,1.599,11,0.7,15,1.599,16,0.47,17,1.495,18,2.88,19,0.984,22,0.984,23,0.063,24,1.755,26,0.834,27,0.046,28,0.046,29,0.191,31,0.984,58,2.291,65,2.067,76,1.755,98,1.358,102,2.067,111,2.982,116,2.982,121,2.306,276,2.458,277,2.982,278,3.776,279,4.185,280,2.982,281,4.185,282,2.982,283,2.921,284,2.921,285,2.921]],["title/coverage.html",[286,2.74]],["body/coverage.html",[0,1.12,1,0.616,5,0.373,6,0.636,7,1.615,8,1.505,9,1.229,10,1.615,14,0.852,23,0.062,27,0.03,28,0.03,29,0.32,30,1.013,32,1.229,40,1.229,49,0.852,53,0.444,58,1.819,64,0.852,70,1.229,71,1.229,72,1.229,99,1.013,100,1.229,105,1.656,106,1.229,109,1.013,110,1.229,120,3.32,124,1.013,125,1.013,126,1.32,179,1.013,231,1.013,237,1.013,238,1.013,276,1.013,277,1.229,280,2.329,286,1.229,287,1.556,288,1.556,289,1.556,290,3.593,291,1.556,292,2.41,293,2.41,294,1.556,295,1.556,296,1.556,297,2.41,298,1.556,299,4.499,300,4.735,301,1.556,302,3.801,303,3.801,304,1.556,305,1.556,306,1.556,307,3.964,308,3.964,309,1.556,310,1.556,311,2.95,312,2.95,313,1.556,314,1.556,315,3.322,316,1.556,317,1.556,318,1.556,319,1.556,320,2.41,321,1.556,322,1.556,323,1.556,324,1.556,325,1.556,326,1.556,327,1.556,328,1.556,329,1.556,330,1.556,331,1.556,332,1.556,333,1.556,334,1.556,335,1.556,336,1.556,337,1.556,338,1.556,339,1.556,340,1.556,341,1.556,342,1.556,343,1.556,344,2.41,345,1.556,346,1.556,347,1.556,348,1.556,349,1.967,350,1.967,351,1.229,352,1.229,353,4.205,354,1.229,355,3.964,356,1.229,357,1.229,358,1.556,359,1.556,360,1.556,361,1.556,362,2.837,363,1.229,364,1.229,365,1.229,366,1.229,367,1.556,368,1.556]],["title/dependencies.html",[282,1.709,369,2.432]],["body/dependencies.html",[23,0.063,27,0.053,28,0.053,68,2.325,69,2.325,369,2.82,370,3.572,371,3.572,372,3.572,373,3.572,374,3.572,375,3.572,376,3.572,377,3.572,378,3.572,379,3.572,380,3.572,381,3.572,382,3.572,383,3.572,384,3.572,385,3.572,386,3.572]],["title/miscellaneous/enumerations.html",[387,0.857,388,2.432]],["body/miscellaneous/enumerations.html",[6,0.496,16,0.411,23,0.062,27,0.042,28,0.042,105,1.32,118,1.186,119,2.303,125,1.661,126,2.474,129,3.091,161,2.727,164,2.015,168,2.727,171,2.727,172,2.727,175,2.015,203,2.727,204,2.015,205,2.727,206,2.727,207,3.312,208,2.727,209,2.727,231,1.661,233,2.015,238,1.661,246,3.912,249,2.727,254,2.015,255,2.015,258,2.015,259,2.015,261,2.015,263,2.015,265,2.015,266,2.015,267,2.015,269,2.015,271,2.015,273,2.015,274,2.015,349,1.397,350,2.143,387,1.011,388,2.015,389,2.727,390,2.248,391,2.727,392,3.915,393,2.552,394,2.015,395,2.727,396,2.552,397,2.552,398,2.552,399,2.015,400,2.015,401,2.015,402,2.552]],["title/miscellaneous/functions.html",[84,2.005,387,0.857]],["body/miscellaneous/functions.html",[6,0.397,11,0.752,16,0.505,19,1.058,22,1.332,23,0.061,27,0.049,28,0.049,29,0.259,36,1.718,51,2.369,52,2.369,53,1.129,54,2.369,66,3.587,84,2.043,102,1.718,105,1.058,349,1.718,350,2.487,351,3.121,352,3.121,354,3.121,387,1.243,389,2.477,390,2.817,391,2.477,403,3.138,404,3.138,405,3.953,406,3.138,407,2.477,408,3.953,409,3.138,410,3.138,411,3.953,412,3.138]],["title/index.html",[16,0.348,413,2.164,414,2.164]],["body/index.html",[23,0.056,27,0.056,28,0.056,407,3.133,415,3.968]],["title/modules.html",[416,2.74]],["body/modules.html",[23,0.056,27,0.056,28,0.056,416,3.147]],["title/overview.html",[417,2.74]],["body/overview.html",[2,2.551,23,0.056,27,0.056,28,0.056,31,1.321,417,3.094,418,3.918,419,3.918]],["title/miscellaneous/variables.html",[387,0.857,420,2.432]],["body/miscellaneous/variables.html",[6,0.466,16,0.452,23,0.063,27,0.045,28,0.045,49,1.536,53,1.172,105,0.946,118,2.199,119,2.199,179,2.395,349,1.536,350,2.247,356,2.905,357,2.905,362,2.216,363,2.905,364,2.905,365,2.905,366,3.241,387,1.111,390,2.395,394,2.216,395,2.905,399,2.216,400,2.216,401,2.216,420,2.216,421,4.524,422,2.806,423,2.806,424,2.806,425,2.806,426,2.806,427,2.806,428,2.806,429,2.806,430,2.806,431,2.806,432,3.679,433,2.806,434,2.806,435,2.806,436,2.806,437,2.806,438,2.806,439,2.806,440,2.806,441,2.806,442,2.806,443,2.806,444,2.806]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":120,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{},"coverage.html":{}}}],["0.1.0",{"_index":377,"title":{},"body":{"dependencies.html":{}}}],["0.12.7",{"_index":383,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":353,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":166,"title":{},"body":{"classes/LineRenderer.html":{}}}],["1.5.2",{"_index":381,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":297,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":295,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":361,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":290,"title":{},"body":{"coverage.html":{}}}],["13.0.3",{"_index":384,"title":{},"body":{"dependencies.html":{}}}],["15/16",{"_index":334,"title":{},"body":{"coverage.html":{}}}],["18/25",{"_index":312,"title":{},"body":{"coverage.html":{}}}],["18/26",{"_index":331,"title":{},"body":{"coverage.html":{}}}],["18/31",{"_index":303,"title":{},"body":{"coverage.html":{}}}],["19/23",{"_index":308,"title":{},"body":{"coverage.html":{}}}],["19/37",{"_index":343,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":419,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":386,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":291,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":293,"title":{},"body":{"coverage.html":{}}}],["21/21",{"_index":359,"title":{},"body":{"coverage.html":{}}}],["22/23",{"_index":322,"title":{},"body":{"coverage.html":{}}}],["26",{"_index":418,"title":{},"body":{"overview.html":{}}}],["33",{"_index":360,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":296,"title":{},"body":{"coverage.html":{}}}],["5.0.0",{"_index":375,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":294,"title":{},"body":{"coverage.html":{}}}],["51",{"_index":342,"title":{},"body":{"coverage.html":{}}}],["58",{"_index":302,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":292,"title":{},"body":{"coverage.html":{}}}],["69",{"_index":330,"title":{},"body":{"coverage.html":{}}}],["72",{"_index":311,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.13.10",{"_index":373,"title":{},"body":{"dependencies.html":{}}}],["82",{"_index":307,"title":{},"body":{"coverage.html":{}}}],["9.0.0",{"_index":379,"title":{},"body":{"dependencies.html":{}}}],["93",{"_index":333,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":321,"title":{},"body":{"coverage.html":{}}}],["_",{"_index":285,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{}}}],["_connectiondescription",{"_index":133,"title":{},"body":{"classes/LineRenderer.html":{}}}],["_lhshead",{"_index":134,"title":{},"body":{"classes/LineRenderer.html":{}}}],["_linelength",{"_index":135,"title":{},"body":{"classes/LineRenderer.html":{}}}],["_linestyle",{"_index":136,"title":{},"body":{"classes/LineRenderer.html":{}}}],["_linewidth",{"_index":137,"title":{},"body":{"classes/LineRenderer.html":{}}}],["_rhshead",{"_index":138,"title":{},"body":{"classes/LineRenderer.html":{}}}],["accessors",{"_index":148,"title":{},"body":{"classes/LineRenderer.html":{}}}],["alt",{"_index":270,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["analyzed",{"_index":405,"title":{},"body":{"miscellaneous/functions.html":{}}}],["analyzedclass",{"_index":408,"title":{},"body":{"miscellaneous/functions.html":{}}}],["array",{"_index":56,"title":{},"body":{"classes/Convertor.html":{}}}],["arror",{"_index":402,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["arrow",{"_index":204,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["ast",{"_index":415,"title":{},"body":{"index.html":{}}}],["asymetric_right",{"_index":265,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["asymmetric",{"_index":264,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["based",{"_index":404,"title":{},"body":{"miscellaneous/functions.html":{}}}],["basefordeclarationgraphblock",{"_index":301,"title":{},"body":{"coverage.html":{}}}],["between",{"_index":130,"title":{},"body":{"classes/LineRenderer.html":{}}}],["binaryexpressiondeclarationgraphblock",{"_index":306,"title":{},"body":{"coverage.html":{}}}],["block",{"_index":58,"title":{},"body":{"classes/Convertor.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{}}}],["block.ts",{"_index":300,"title":{},"body":{"coverage.html":{}}}],["blockdeclarationgraphblock",{"_index":310,"title":{},"body":{"coverage.html":{}}}],["blockidgenerator",{"_index":1,"title":{"interfaces/BlockIdGenerator.html":{}},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{}}}],["blocks",{"_index":73,"title":{},"body":{"classes/Convertor.html":{},"interfaces/GraphResult.html":{}}}],["blocks/base",{"_index":298,"title":{},"body":{"coverage.html":{}}}],["blocks/binary",{"_index":304,"title":{},"body":{"coverage.html":{}}}],["blocks/block",{"_index":309,"title":{},"body":{"coverage.html":{}}}],["blocks/empty.graph",{"_index":313,"title":{},"body":{"coverage.html":{}}}],["blocks/for",{"_index":315,"title":{},"body":{"coverage.html":{}}}],["blocks/graph",{"_index":320,"title":{},"body":{"coverage.html":{}}}],["blocks/if",{"_index":324,"title":{},"body":{"coverage.html":{}}}],["blocks/method",{"_index":326,"title":{},"body":{"coverage.html":{}}}],["blocks/named",{"_index":329,"title":{},"body":{"coverage.html":{}}}],["blocks/parallel",{"_index":332,"title":{},"body":{"coverage.html":{}}}],["blocks/renderer/line",{"_index":125,"title":{},"body":{"classes/LineRenderer.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["blocks/renderer/shape",{"_index":238,"title":{},"body":{"classes/ShapeRenderer.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["blocks/text.graph",{"_index":335,"title":{},"body":{"coverage.html":{}}}],["blocks/throw",{"_index":337,"title":{},"body":{"coverage.html":{}}}],["blocks/try",{"_index":339,"title":{},"body":{"coverage.html":{}}}],["blocks/variable",{"_index":344,"title":{},"body":{"coverage.html":{}}}],["boolean",{"_index":235,"title":{},"body":{"classes/LineRenderer.html":{}}}],["call.graph",{"_index":327,"title":{},"body":{"coverage.html":{}}}],["calling",{"_index":278,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{}}}],["case",{"_index":228,"title":{},"body":{"classes/LineRenderer.html":{}}}],["catch",{"_index":340,"title":{},"body":{"coverage.html":{}}}],["chalk",{"_index":374,"title":{},"body":{"dependencies.html":{}}}],["circle",{"_index":263,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["class",{"_index":29,"title":{"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"classes/UuidBlockIdGenerator.html":{}},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["classblocks",{"_index":89,"title":{},"body":{"classes/Convertor.html":{}}}],["classdeclaration",{"_index":66,"title":{},"body":{"classes/Convertor.html":{},"miscellaneous/functions.html":{}}}],["classes",{"_index":31,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"classes/UuidBlockIdGenerator.html":{},"overview.html":{}}}],["clear",{"_index":376,"title":{},"body":{"dependencies.html":{}}}],["cli",{"_index":372,"title":{},"body":{"dependencies.html":{}}}],["codeparser",{"_index":40,"title":{},"body":{"classes/Convertor.html":{},"coverage.html":{}}}],["codeparser(idgenerator",{"_index":80,"title":{},"body":{"classes/Convertor.html":{}}}],["command_handler",{"_index":396,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["commander",{"_index":378,"title":{},"body":{"dependencies.html":{}}}],["commandhandler",{"_index":435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connection",{"_index":183,"title":{},"body":{"classes/LineRenderer.html":{}}}],["const",{"_index":81,"title":{},"body":{"classes/Convertor.html":{},"classes/LineRenderer.html":{}}}],["constructor",{"_index":43,"title":{},"body":{"classes/Convertor.html":{},"classes/LineRenderer.html":{}}}],["constructor(lhsid",{"_index":153,"title":{},"body":{"classes/LineRenderer.html":{}}}],["constructor(private",{"_index":78,"title":{},"body":{"classes/Convertor.html":{},"classes/LineRenderer.html":{}}}],["constructor(sourcefiles",{"_index":44,"title":{},"body":{"classes/Convertor.html":{}}}],["controller",{"_index":395,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["convert",{"_index":42,"title":{},"body":{"classes/Convertor.html":{}}}],["converting",{"_index":34,"title":{},"body":{"classes/Convertor.html":{}}}],["convertor",{"_index":30,"title":{"classes/Convertor.html":{}},"body":{"classes/Convertor.html":{},"coverage.html":{}}}],["correct",{"_index":103,"title":{},"body":{"classes/Exporter.html":{}}}],["counter",{"_index":115,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{}}}],["coverage",{"_index":286,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creates",{"_index":48,"title":{},"body":{"classes/Convertor.html":{},"classes/LineRenderer.html":{}}}],["cross",{"_index":206,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["crypto",{"_index":281,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{}}}],["cwd",{"_index":363,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cylinder",{"_index":261,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["cylindrical",{"_index":260,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["declaration",{"_index":345,"title":{},"body":{"coverage.html":{}}}],["declaration.graph",{"_index":299,"title":{},"body":{"coverage.html":{}}}],["decorators",{"_index":410,"title":{},"body":{"miscellaneous/functions.html":{}}}],["decoratortype",{"_index":389,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["decoratortype.command_handler",{"_index":436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decoratortype.controller",{"_index":434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decoratortype.event_handler",{"_index":440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decoratortype.injectable",{"_index":433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decoratortype.query_handler",{"_index":438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decoratortypemap",{"_index":356,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["default",{"_index":118,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":19,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"classes/UuidBlockIdGenerator.html":{},"miscellaneous/functions.html":{}}}],["dependencies",{"_index":369,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["describing",{"_index":12,"title":{},"body":{"interfaces/BlockIdGenerator.html":{}}}],["description",{"_index":11,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"classes/UuidBlockIdGenerator.html":{},"miscellaneous/functions.html":{}}}],["documentation",{"_index":287,"title":{},"body":{"coverage.html":{}}}],["dot",{"_index":140,"title":{},"body":{"classes/LineRenderer.html":{}}}],["dotted",{"_index":208,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["each",{"_index":63,"title":{},"body":{"classes/Convertor.html":{}}}],["edges",{"_index":253,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["emptygraphblock",{"_index":314,"title":{},"body":{"coverage.html":{}}}],["encoding",{"_index":429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enum",{"_index":202,"title":{},"body":{"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{}}}],["enumerations",{"_index":388,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["event_handler",{"_index":398,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["eventhandler",{"_index":439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":26,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["exporter",{"_index":99,"title":{"classes/Exporter.html":{}},"body":{"classes/Exporter.html":{},"coverage.html":{}}}],["exporting",{"_index":101,"title":{},"body":{"classes/Exporter.html":{}}}],["expression",{"_index":305,"title":{},"body":{"coverage.html":{}}}],["facade",{"_index":399,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["figlet",{"_index":380,"title":{},"body":{"dependencies.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{}}}],["file.ts",{"_index":350,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["files",{"_index":35,"title":{},"body":{"classes/Convertor.html":{}}}],["filetype",{"_index":391,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["filetype.controller",{"_index":441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filetype.facade",{"_index":442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filetype.handler",{"_index":444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filetype.service",{"_index":443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filetypemap",{"_index":357,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["fordeclarationgraphblock",{"_index":316,"title":{},"body":{"coverage.html":{}}}],["forindeclarationgraphblock",{"_index":317,"title":{},"body":{"coverage.html":{}}}],["form",{"_index":262,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["forofdeclarationgraphblock",{"_index":318,"title":{},"body":{"coverage.html":{}}}],["forxdeclarationgraphblock",{"_index":319,"title":{},"body":{"coverage.html":{}}}],["function",{"_index":280,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{},"coverage.html":{}}}],["functionblocks",{"_index":87,"title":{},"body":{"classes/Convertor.html":{}}}],["functiondeclaration",{"_index":67,"title":{},"body":{"classes/Convertor.html":{}}}],["functions",{"_index":84,"title":{"miscellaneous/functions.html":{}},"body":{"classes/Convertor.html":{},"miscellaneous/functions.html":{}}}],["g",{"_index":284,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{}}}],["generate",{"_index":18,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["generated",{"_index":102,"title":{},"body":{"classes/Exporter.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{},"miscellaneous/functions.html":{}}}],["generates",{"_index":21,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{}}}],["generator",{"_index":15,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["generator.ts",{"_index":10,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{}}}],["generator.ts:10",{"_index":20,"title":{},"body":{"interfaces/BlockIdGenerator.html":{}}}],["generator.ts:13",{"_index":121,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["generator.ts:15",{"_index":122,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{}}}],["generator/block",{"_index":9,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"coverage.html":{}}}],["generator/incremental",{"_index":110,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{},"coverage.html":{}}}],["generator/uuid",{"_index":277,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{},"coverage.html":{}}}],["getisdotted",{"_index":200,"title":{},"body":{"classes/LineRenderer.html":{}}}],["getlhshead",{"_index":196,"title":{},"body":{"classes/LineRenderer.html":{}}}],["getlinepiece",{"_index":194,"title":{},"body":{"classes/LineRenderer.html":{}}}],["getrhshead",{"_index":198,"title":{},"body":{"classes/LineRenderer.html":{}}}],["getting",{"_index":413,"title":{"index.html":{}},"body":{}}],["graph",{"_index":36,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"miscellaneous/functions.html":{}}}],["graphblock",{"_index":14,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"interfaces/GraphResult.html":{},"coverage.html":{}}}],["graphparentgraphblock",{"_index":70,"title":{},"body":{"classes/Convertor.html":{},"coverage.html":{}}}],["graphparentgraphblock(this.idgenerator.generate",{"_index":97,"title":{},"body":{"classes/Convertor.html":{}}}],["graphresult",{"_index":64,"title":{"interfaces/GraphResult.html":{}},"body":{"classes/Convertor.html":{},"interfaces/GraphResult.html":{},"coverage.html":{}}}],["graphs",{"_index":82,"title":{},"body":{"classes/Convertor.html":{}}}],["graphs.push",{"_index":96,"title":{},"body":{"classes/Convertor.html":{}}}],["handler",{"_index":401,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["head",{"_index":164,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["hexagon",{"_index":267,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["https://mermaid",{"_index":242,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["id",{"_index":8,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{}}}],["identifier",{"_index":288,"title":{},"body":{"coverage.html":{}}}],["idgenerator",{"_index":46,"title":{},"body":{"classes/Convertor.html":{}}}],["ids",{"_index":59,"title":{},"body":{"classes/Convertor.html":{},"classes/IncrementalBlockIdGenerator.html":{}}}],["ifelsedeclarationgraphblock",{"_index":325,"title":{},"body":{"coverage.html":{}}}],["implementation",{"_index":111,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["implements",{"_index":116,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["import",{"_index":65,"title":{},"body":{"classes/Convertor.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["includefile",{"_index":351,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["includefile(analyzedclass",{"_index":403,"title":{},"body":{"miscellaneous/functions.html":{}}}],["incrementalblockidgenerator",{"_index":109,"title":{"classes/IncrementalBlockIdGenerator.html":{}},"body":{"classes/IncrementalBlockIdGenerator.html":{},"coverage.html":{}}}],["incrementation",{"_index":113,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"classes/UuidBlockIdGenerator.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["injectable",{"_index":394,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["instance",{"_index":50,"title":{},"body":{"classes/Convertor.html":{},"classes/LineRenderer.html":{}}}],["interface",{"_index":0,"title":{"interfaces/BlockIdGenerator.html":{},"interfaces/GraphResult.html":{}},"body":{"interfaces/BlockIdGenerator.html":{},"interfaces/GraphResult.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"interfaces/GraphResult.html":{},"overview.html":{}}}],["isdotted",{"_index":152,"title":{},"body":{"classes/LineRenderer.html":{}}}],["iterates",{"_index":61,"title":{},"body":{"classes/Convertor.html":{}}}],["js.github.io/mermaid/#/flowchart?id=a",{"_index":251,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["js.github.io/mermaid/#/flowchart?id=node",{"_index":243,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["js.github.io/mermaid/#/flowchart?id=parallelogram",{"_index":268,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["js.github.io/mermaid/#/flowchart?id=trapezoid",{"_index":272,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["js/mermaid",{"_index":371,"title":{},"body":{"dependencies.html":{}}}],["json.parse",{"_index":426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["left",{"_index":157,"title":{},"body":{"classes/LineRenderer.html":{}}}],["length",{"_index":167,"title":{},"body":{"classes/LineRenderer.html":{}}}],["lhshead",{"_index":150,"title":{},"body":{"classes/LineRenderer.html":{}}}],["lhsid",{"_index":156,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line",{"_index":129,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["line_head",{"_index":161,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["line_head.arrow",{"_index":229,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line_head.cross",{"_index":230,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line_head.none",{"_index":162,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line_head.point",{"_index":232,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line_style",{"_index":168,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["line_style.dotted",{"_index":236,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line_style.normal",{"_index":169,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line_width",{"_index":172,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["line_width.normal",{"_index":173,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line_width.thick",{"_index":225,"title":{},"body":{"classes/LineRenderer.html":{}}}],["linear",{"_index":112,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{}}}],["linepiece",{"_index":149,"title":{},"body":{"classes/LineRenderer.html":{}}}],["linerenderer",{"_index":124,"title":{"classes/LineRenderer.html":{}},"body":{"classes/LineRenderer.html":{},"coverage.html":{}}}],["link",{"_index":76,"title":{},"body":{"classes/Convertor.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["list.graph",{"_index":346,"title":{},"body":{"coverage.html":{}}}],["matching",{"_index":28,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["mermaid",{"_index":370,"title":{},"body":{"dependencies.html":{}}}],["mermaid.js",{"_index":241,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["method",{"_index":13,"title":{},"body":{"interfaces/BlockIdGenerator.html":{}}}],["methodcallgraphblock",{"_index":328,"title":{},"body":{"coverage.html":{}}}],["methods",{"_index":17,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["miscellaneous",{"_index":387,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mmd",{"_index":407,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["mmd/src/app/block",{"_index":7,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{}}}],["mmd/src/app/convertor.ts",{"_index":32,"title":{},"body":{"classes/Convertor.html":{},"coverage.html":{}}}],["mmd/src/app/convertor.ts:21",{"_index":47,"title":{},"body":{"classes/Convertor.html":{}}}],["mmd/src/app/convertor.ts:36",{"_index":60,"title":{},"body":{"classes/Convertor.html":{}}}],["mmd/src/app/exporter.ts",{"_index":100,"title":{},"body":{"classes/Exporter.html":{},"coverage.html":{}}}],["mmd/src/app/graph",{"_index":105,"title":{},"body":{"interfaces/GraphResult.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mmd/src/index.ts",{"_index":362,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":416,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["morph",{"_index":69,"title":{},"body":{"classes/Convertor.html":{},"interfaces/GraphResult.html":{},"dependencies.html":{}}}],["name",{"_index":52,"title":{},"body":{"classes/Convertor.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"miscellaneous/functions.html":{}}}],["namedblockdeclarationgraphblock",{"_index":71,"title":{},"body":{"classes/Convertor.html":{},"coverage.html":{}}}],["new",{"_index":49,"title":{},"body":{"classes/Convertor.html":{},"classes/LineRenderer.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["node",{"_index":158,"title":{},"body":{"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{}}}],["nodes",{"_index":132,"title":{},"body":{"classes/LineRenderer.html":{}}}],["none",{"_index":203,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["normal",{"_index":207,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["number",{"_index":117,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{}}}],["o",{"_index":233,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["one",{"_index":108,"title":{},"body":{"interfaces/GraphResult.html":{}}}],["optional",{"_index":54,"title":{},"body":{"classes/Convertor.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":179,"title":{},"body":{"classes/LineRenderer.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["output",{"_index":104,"title":{},"body":{"classes/Exporter.html":{}}}],["overview",{"_index":417,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":282,"title":{"dependencies.html":{}},"body":{"classes/UuidBlockIdGenerator.html":{}}}],["package.json",{"_index":428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../include",{"_index":390,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["packages/.../index.ts",{"_index":421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../line",{"_index":392,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["packages/.../shape",{"_index":393,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["packages/ast",{"_index":6,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["parallelblock",{"_index":94,"title":{},"body":{"classes/Convertor.html":{}}}],["parallelblockdeclarationgraphblock",{"_index":72,"title":{},"body":{"classes/Convertor.html":{},"coverage.html":{}}}],["parallelblockdeclarationgraphblock(this.idgenerator.generate",{"_index":95,"title":{},"body":{"classes/Convertor.html":{}}}],["paralleogram",{"_index":269,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["paralleogram_alt",{"_index":271,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["param",{"_index":77,"title":{},"body":{"classes/Convertor.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{}}}],["parameters",{"_index":51,"title":{},"body":{"classes/Convertor.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"miscellaneous/functions.html":{}}}],["parent.graph",{"_index":323,"title":{},"body":{"coverage.html":{}}}],["parentclassesblock",{"_index":93,"title":{},"body":{"classes/Convertor.html":{}}}],["parentfunctionsblock",{"_index":91,"title":{},"body":{"classes/Convertor.html":{}}}],["parser",{"_index":74,"title":{},"body":{"classes/Convertor.html":{}}}],["parser/include",{"_index":349,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["parser/parser.ts",{"_index":358,"title":{},"body":{"coverage.html":{}}}],["path",{"_index":382,"title":{},"body":{"dependencies.html":{}}}],["point",{"_index":205,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["private",{"_index":38,"title":{},"body":{"classes/Convertor.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{}}}],["process",{"_index":57,"title":{},"body":{"classes/Convertor.html":{}}}],["process.cwd",{"_index":422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["program.opts",{"_index":423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":364,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["project(tsmorphoptions",{"_index":424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projectoptions",{"_index":425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properties",{"_index":37,"title":{},"body":{"classes/Convertor.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{}}}],["protected",{"_index":139,"title":{},"body":{"classes/LineRenderer.html":{}}}],["public",{"_index":41,"title":{},"body":{"classes/Convertor.html":{}}}],["query_handler",{"_index":397,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["queryhandler",{"_index":437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["randomuuid",{"_index":279,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{}}}],["randomuuid().replace",{"_index":283,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{}}}],["readfilesync(path.resolve(__dirname",{"_index":427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["readonly",{"_index":39,"title":{},"body":{"classes/Convertor.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{}}}],["record",{"_index":432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["render",{"_index":141,"title":{},"body":{"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{}}}],["render(text",{"_index":248,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["renderer",{"_index":128,"title":{},"body":{"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{}}}],["renderer.ts",{"_index":126,"title":{},"body":{"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["renderer.ts:100",{"_index":193,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:110",{"_index":189,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:120",{"_index":191,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:130",{"_index":187,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:138",{"_index":178,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:167",{"_index":195,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:173",{"_index":197,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:186",{"_index":199,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:199",{"_index":177,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:203",{"_index":201,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:45",{"_index":160,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:49",{"_index":163,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:53",{"_index":176,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:57",{"_index":170,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:61",{"_index":174,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:63",{"_index":247,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["renderer.ts:65",{"_index":155,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:71",{"_index":250,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["renderer.ts:80",{"_index":181,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:90",{"_index":185,"title":{},"body":{"classes/LineRenderer.html":{}}}],["repeat",{"_index":224,"title":{},"body":{"classes/LineRenderer.html":{}}}],["repeat(repeat",{"_index":226,"title":{},"body":{"classes/LineRenderer.html":{}}}],["repeat(this._linelength",{"_index":234,"title":{},"body":{"classes/LineRenderer.html":{}}}],["representing",{"_index":107,"title":{},"body":{"interfaces/GraphResult.html":{}}}],["represents",{"_index":127,"title":{},"body":{"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{}}}],["resolvedecoratortype",{"_index":352,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["resolvedecoratortype(decorators",{"_index":409,"title":{},"body":{"miscellaneous/functions.html":{}}}],["resolvefiletype",{"_index":354,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["resolvefiletype(analyzedclass",{"_index":412,"title":{},"body":{"miscellaneous/functions.html":{}}}],["responsible",{"_index":33,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{}}}],["result",{"_index":75,"title":{},"body":{"classes/Convertor.html":{},"interfaces/GraphResult.html":{},"classes/LineRenderer.html":{}}}],["result.ts",{"_index":106,"title":{},"body":{"interfaces/GraphResult.html":{},"coverage.html":{}}}],["results",{"_index":27,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":98,"title":{},"body":{"classes/Convertor.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["returns",{"_index":22,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"classes/UuidBlockIdGenerator.html":{},"miscellaneous/functions.html":{}}}],["rhombus",{"_index":266,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["rhshead",{"_index":151,"title":{},"body":{"classes/LineRenderer.html":{}}}],["rhsid",{"_index":154,"title":{},"body":{"classes/LineRenderer.html":{}}}],["right",{"_index":159,"title":{},"body":{"classes/LineRenderer.html":{}}}],["round",{"_index":252,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["round_edges",{"_index":254,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["service",{"_index":400,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["set",{"_index":182,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setconnectiondescription",{"_index":142,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setconnectiondescription(value",{"_index":180,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlhshead",{"_index":143,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlhshead(value",{"_index":184,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlinelength",{"_index":144,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlinelength(value",{"_index":186,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlinestyle",{"_index":145,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlinestyle(value",{"_index":188,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlinewidth",{"_index":146,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlinewidth(value",{"_index":190,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setrhshead",{"_index":147,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setrhshead(value",{"_index":192,"title":{},"body":{"classes/LineRenderer.html":{}}}],["shape",{"_index":249,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["shape.valueof().replace(shaperenderer.text_placeholder",{"_index":275,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["shaped",{"_index":257,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["shaperenderer",{"_index":237,"title":{"classes/ShapeRenderer.html":{}},"body":{"classes/ShapeRenderer.html":{},"coverage.html":{}}}],["shapes",{"_index":240,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["shared",{"_index":114,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{}}}],["sharp_edges",{"_index":255,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["side",{"_index":165,"title":{},"body":{"classes/LineRenderer.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["sourcefile",{"_index":45,"title":{},"body":{"classes/Convertor.html":{},"interfaces/GraphResult.html":{}}}],["sourcefile.getclasses",{"_index":86,"title":{},"body":{"classes/Convertor.html":{}}}],["sourcefile.getfunctions",{"_index":85,"title":{},"body":{"classes/Convertor.html":{}}}],["sourcefiles",{"_index":55,"title":{},"body":{"classes/Convertor.html":{}}}],["stadium",{"_index":256,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["stadium_shaped",{"_index":258,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["started",{"_index":414,"title":{"index.html":{}},"body":{}}],["statements",{"_index":289,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":244,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["string",{"_index":24,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["style",{"_index":171,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["subroutine",{"_index":259,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["supported",{"_index":239,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["switch",{"_index":227,"title":{},"body":{"classes/LineRenderer.html":{}}}],["table",{"_index":368,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":367,"title":{},"body":{"coverage.html":{}}}],["text",{"_index":246,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["text_placeholder",{"_index":245,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["textgraphblock",{"_index":336,"title":{},"body":{"coverage.html":{}}}],["thick",{"_index":209,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["this._connectiondescription",{"_index":210,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this._lhshead",{"_index":211,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this._linelength",{"_index":215,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this._linestyle",{"_index":213,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this._linewidth",{"_index":214,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this._rhshead",{"_index":212,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.codeparser",{"_index":79,"title":{},"body":{"classes/Convertor.html":{}}}],["this.codeparser.processclasses(classes",{"_index":90,"title":{},"body":{"classes/Convertor.html":{}}}],["this.codeparser.processfunctions(functions",{"_index":88,"title":{},"body":{"classes/Convertor.html":{}}}],["this.counter",{"_index":123,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{}}}],["this.dot",{"_index":220,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.idgenerator.generate",{"_index":92,"title":{},"body":{"classes/Convertor.html":{}}}],["this.isdotted",{"_index":219,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.lhshead",{"_index":217,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.lhsid",{"_index":216,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.linepiece",{"_index":218,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.rhshead",{"_index":222,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.rhsid",{"_index":223,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.sourcefiles",{"_index":83,"title":{},"body":{"classes/Convertor.html":{}}}],["through",{"_index":62,"title":{},"body":{"classes/Convertor.html":{}}}],["throwdeclarationgraphblock",{"_index":338,"title":{},"body":{"coverage.html":{}}}],["tmplinelength",{"_index":221,"title":{},"body":{"classes/LineRenderer.html":{}}}],["trapezoid",{"_index":273,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["trapezoid_alt",{"_index":274,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["trycatchdeclarationgraphblock",{"_index":341,"title":{},"body":{"coverage.html":{}}}],["ts",{"_index":68,"title":{},"body":{"classes/Convertor.html":{},"interfaces/GraphResult.html":{},"dependencies.html":{}}}],["tslib",{"_index":385,"title":{},"body":{"dependencies.html":{}}}],["tsmorphoptions",{"_index":365,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["two",{"_index":131,"title":{},"body":{"classes/LineRenderer.html":{}}}],["type",{"_index":53,"title":{},"body":{"classes/Convertor.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":411,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unique",{"_index":25,"title":{},"body":{"interfaces/BlockIdGenerator.html":{}}}],["utf",{"_index":430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uuidblockidgenerator",{"_index":276,"title":{"classes/UuidBlockIdGenerator.html":{}},"body":{"classes/UuidBlockIdGenerator.html":{},"coverage.html":{}}}],["value",{"_index":119,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":355,"title":{},"body":{"coverage.html":{}}}],["variabledeclarationgraphblock",{"_index":348,"title":{},"body":{"coverage.html":{}}}],["variabledeclarationlistgraphblock",{"_index":347,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":420,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":366,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["whether",{"_index":406,"title":{},"body":{"miscellaneous/functions.html":{}}}],["width",{"_index":175,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["x",{"_index":231,"title":{},"body":{"classes/LineRenderer.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/BlockIdGenerator.html":{"url":"interfaces/BlockIdGenerator.html","title":"interface - BlockIdGenerator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BlockIdGenerator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/block-id-generator/block-id-generator.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface describing method for GraphBlock ID generator\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        generate\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generate\n                        \n                    \n                \n            \n            \n                \ngenerate()\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/block-id-generator/block-id-generator.ts:10\n                \n            \n\n\n            \n                \n                    Generates ID.\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Unique ID.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface BlockIdGenerator {\n  /**\n   * Generates ID.\n   *\n   * @returns {string} Unique ID.\n   */\n  generate(): string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Convertor.html":{"url":"classes/Convertor.html","title":"class - Convertor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Convertor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/convertor.ts\n        \n\n\n            \n                Description\n            \n            \n                Class responsible for converting defined source files to graph.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                codeParser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                convert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sourceFiles: SourceFile[], idGenerator: BlockIdGenerator)\n                    \n                \n                        \n                            \n                                Defined in packages/ast-to-mmd/src/app/convertor.ts:21\n                            \n                        \n\n                \n                    \n                            Creates new instance of Convertor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sourceFiles\n                                                  \n                                                        \n                                                                    SourceFile[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                []SourceFile Array of source files to process.\n\n                                                        \n                                                \n                                                \n                                                        idGenerator\n                                                  \n                                                        \n                                                                        BlockIdGenerator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                BlockIdGenerator Generator of block IDs.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        codeParser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CodeParser\n\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/convertor.ts:21\n                        \n                    \n\n            \n                \n                    Instance of CodeParser\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        convert\n                        \n                    \n                \n            \n            \n                \n                    \n                    convert()\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/convertor.ts:36\n                \n            \n\n\n            \n                \n                    Iterates through source files and generates graph for each file.\n\n\n                    \n                        Returns :         GraphResult[]\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ClassDeclaration, FunctionDeclaration, SourceFile } from 'ts-morph';\n\nimport { BlockIdGenerator } from './block-id-generator';\nimport {\n  GraphBlock,\n  GraphParentGraphBlock,\n  NamedBlockDeclarationGraphBlock,\n  ParallelBlockDeclarationGraphBlock,\n} from './graph-blocks';\nimport { CodeParser } from './graph-parser';\nimport { GraphResult } from './graph-result';\n\n/**\n * Class responsible for converting defined source files to graph.\n */\nexport class Convertor {\n\n  /**\n   * Instance of {@link CodeParser}\n   */\n  private readonly codeParser: CodeParser;\n\n  /**\n   * Creates new instance of {@link Convertor}.\n   *\n   * @param sourceFiles {@link SourceFile[]} Array of source files to process.\n   * @param idGenerator {@link BlockIdGenerator} Generator of block IDs.\n   */\n  constructor(private readonly sourceFiles: SourceFile[], private readonly idGenerator: BlockIdGenerator) {\n    this.codeParser = new CodeParser(idGenerator);\n  }\n\n  /**\n   * Iterates through source files and generates graph for each file.\n   */\n  public convert(): GraphResult[] {\n    const graphs: GraphResult[] = [];\n    for (const sourceFile of this.sourceFiles) {\n      const functions: FunctionDeclaration[] = sourceFile.getFunctions();\n      const classes: ClassDeclaration[] = sourceFile.getClasses();\n\n      const functionBlocks: GraphBlock = this.codeParser.processFunctions(functions);\n      const classBlocks: GraphBlock = this.codeParser.processClasses(classes);\n\n      const parentFunctionsBlock: GraphBlock = new NamedBlockDeclarationGraphBlock(\n        this.idGenerator.generate(),\n        [functionBlocks],\n        'Functions'\n      );\n      const parentClassesBlock: GraphBlock = new NamedBlockDeclarationGraphBlock(\n        this.idGenerator.generate(),\n        [classBlocks],\n        'Classes'\n      );\n      const parallelBlock: GraphBlock = new ParallelBlockDeclarationGraphBlock(this.idGenerator.generate(), [\n        parentFunctionsBlock,\n        parentClassesBlock,\n      ]);\n\n      graphs.push({\n        sourceFile,\n        graph: new GraphParentGraphBlock(this.idGenerator.generate(), parallelBlock),\n      });\n    }\n\n    return graphs;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Exporter.html":{"url":"classes/Exporter.html","title":"class - Exporter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Exporter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/exporter.ts\n        \n\n\n            \n                Description\n            \n            \n                Class responsible for exporting generated graph to correct output\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Exporter {\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphResult.html":{"url":"interfaces/GraphResult.html","title":"interface - GraphResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GraphResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/graph-result.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing one Graph result\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            graph\n                                        \n                                \n                                \n                                        \n                                            sourceFile\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        graph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        graph:         GraphBlock\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GraphBlock\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceFile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sourceFile:     SourceFile\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SourceFile\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SourceFile } from 'ts-morph';\n\nimport { GraphBlock } from './graph-blocks';\n\n/**\n * Interface representing one Graph result\n */\nexport interface GraphResult {\n  sourceFile: SourceFile;\n  graph: GraphBlock;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IncrementalBlockIdGenerator.html":{"url":"classes/IncrementalBlockIdGenerator.html","title":"class - IncrementalBlockIdGenerator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IncrementalBlockIdGenerator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/block-id-generator/incremental-block-id-generator.ts\n        \n\n\n            \n                Description\n            \n            \n                Implementation of BlockIdGenerator\nThe ID is generated by linear incrementation of shared counter.\n\n            \n\n\n            \n                Implements\n            \n            \n                            BlockIdGenerator\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                counter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        counter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/block-id-generator/incremental-block-id-generator.ts:13\n                        \n                    \n\n            \n                \n                    Counter of generated IDs\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generate\n                        \n                    \n                \n            \n            \n                \ngenerate()\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/block-id-generator/incremental-block-id-generator.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BlockIdGenerator } from './block-id-generator';\n\n/**\n * Implementation of {@link BlockIdGenerator}\n *\n *\n * The ID is generated by linear incrementation of shared counter.\n */\nexport class IncrementalBlockIdGenerator implements BlockIdGenerator {\n  /**\n   * Counter of generated IDs\n   */\n  private counter = 0;\n\n  generate(): string {\n    return `${this.counter++}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LineRenderer.html":{"url":"classes/LineRenderer.html","title":"class - LineRenderer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LineRenderer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts\n        \n\n\n            \n                Description\n            \n            \n                Class represents renderer of line between two nodes.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _connectionDescription\n                            \n                            \n                                    Private\n                                _lhsHead\n                            \n                            \n                                    Private\n                                _lineLength\n                            \n                            \n                                    Private\n                                _lineStyle\n                            \n                            \n                                    Private\n                                _lineWidth\n                            \n                            \n                                    Private\n                                _rhsHead\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                dot\n                            \n                            \n                                render\n                            \n                            \n                                setConnectionDescription\n                            \n                            \n                                setLhsHead\n                            \n                            \n                                setLineLength\n                            \n                            \n                                setLineStyle\n                            \n                            \n                                setLineWidth\n                            \n                            \n                                setRhsHead\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    linePiece\n                                \n                                \n                                    lhsHead\n                                \n                                \n                                    rhsHead\n                                \n                                \n                                    isDotted\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(lhsId: string, rhsId: string)\n                    \n                \n                        \n                            \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:65\n                            \n                        \n\n                \n                    \n                            Creates new instance of the LineRenderer.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        lhsId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ID of left node.\n\n                                                        \n                                                \n                                                \n                                                        rhsId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ID of right node.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _connectionDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:45\n                        \n                    \n\n            \n                \n                    Optional description on the line.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _lhsHead\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LINE_HEAD\n\n                    \n                \n                \n                    \n                        Default value : LINE_HEAD.NONE\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:49\n                        \n                    \n\n            \n                \n                    Type of head on left side of the line.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _lineLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:65\n                        \n                    \n\n            \n                \n                    Length of the line.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _lineStyle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LINE_STYLE\n\n                    \n                \n                \n                    \n                        Default value : LINE_STYLE.NORMAL\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:57\n                        \n                    \n\n            \n                \n                    LINE_STYLE Style of the line.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _lineWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LINE_WIDTH\n\n                    \n                \n                \n                    \n                        Default value : LINE_WIDTH.NORMAL\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:61\n                        \n                    \n\n            \n                \n                    LINE_WIDTH Width of the line.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _rhsHead\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LINE_HEAD\n\n                    \n                \n                \n                    \n                        Default value : LINE_HEAD.NONE\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:53\n                        \n                    \n\n            \n                \n                    Type of head on right side of the line.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        dot\n                        \n                    \n                \n            \n            \n                \n                    \n                    dot()\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:199\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        render\n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:138\n                \n            \n\n\n            \n                \n                    Render line with defined options.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setConnectionDescription\n                        \n                    \n                \n            \n            \n                \nsetConnectionDescription(value: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:80\n                \n            \n\n\n            \n                \n                    Set connection description on the line.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Connection description\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LineRenderer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLhsHead\n                        \n                    \n                \n            \n            \n                \nsetLhsHead(value: LINE_HEAD)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:90\n                \n            \n\n\n            \n                \n                    Set type of head on left side the line.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                LINE_HEAD\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        LINE_HEAD Type of head.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LineRenderer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLineLength\n                        \n                    \n                \n            \n            \n                \nsetLineLength(value: number)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:130\n                \n            \n\n\n            \n                \n                    Set length of the line.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Length of the line.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LineRenderer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLineStyle\n                        \n                    \n                \n            \n            \n                \nsetLineStyle(value: LINE_STYLE)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:110\n                \n            \n\n\n            \n                \n                    Set style of the line.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                LINE_STYLE\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        LINE_STYLE Style of the line.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LineRenderer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLineWidth\n                        \n                    \n                \n            \n            \n                \nsetLineWidth(value: LINE_WIDTH)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:120\n                \n            \n\n\n            \n                \n                    Set width of the line.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                LINE_WIDTH\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        LINE_WIDTH Width of the line.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LineRenderer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRhsHead\n                        \n                    \n                \n            \n            \n                \nsetRhsHead(value: LINE_HEAD)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:100\n                \n            \n\n\n            \n                \n                    Set type of head on right side the line.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                LINE_HEAD\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        LINE_HEAD Type of head.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LineRenderer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        linePiece\n                    \n                \n\n                \n                    \n                        getlinePiece()\n                    \n                \n                            \n                                \n                                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:167\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        lhsHead\n                    \n                \n\n                \n                    \n                        getlhsHead()\n                    \n                \n                            \n                                \n                                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:173\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        rhsHead\n                    \n                \n\n                \n                    \n                        getrhsHead()\n                    \n                \n                            \n                                \n                                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:186\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isDotted\n                    \n                \n\n                \n                    \n                        getisDotted()\n                    \n                \n                            \n                                \n                                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:203\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        export enum LINE_HEAD {\n  NONE,\n  ARROW,\n  POINT,\n  CROSS,\n}\n\n/**\n * Style of the line.\n *\n * - NORMAL: ---\n * - DOTTED: ...\n */\nexport enum LINE_STYLE {\n  NORMAL,\n  DOTTED,\n}\n\n/**\n * Width of the line.\n *\n * - NORMAL:  ---\n * - THICK: ===\n */\nexport enum LINE_WIDTH {\n  NORMAL,\n  THICK,\n}\n\n/**\n * Class represents renderer of line between two nodes.\n */\nexport class LineRenderer {\n  /**\n   * Optional description on the line.\n   */\n  private _connectionDescription?: string;\n  /**\n   * Type of head on left side of the line.\n   */\n  private _lhsHead: LINE_HEAD = LINE_HEAD.NONE;\n  /**\n   * Type of head on right side of the line.\n   */\n  private _rhsHead: LINE_HEAD = LINE_HEAD.NONE;\n  /**\n   * {@link LINE_STYLE} Style of the line.\n   */\n  private _lineStyle: LINE_STYLE = LINE_STYLE.NORMAL;\n  /**\n   * {@link LINE_WIDTH} Width of the line.\n   */\n  private _lineWidth: LINE_WIDTH = LINE_WIDTH.NORMAL;\n  /**\n   * Length of the line.\n   */\n  private _lineLength = 1;\n\n  /**\n   * Creates new instance of the {@link LineRenderer}.\n   *\n   * @param lhsId {string} ID of left node.\n   * @param rhsId {string} ID of right node.\n   */\n  constructor(private readonly lhsId: string, private readonly rhsId: string) {}\n\n  /**\n   * Set connection description on the line.\n   *\n   * @param value {string} Connection description\n   */\n  setConnectionDescription(value: string): LineRenderer {\n    this._connectionDescription = value;\n    return this;\n  }\n\n  /**\n   * Set type of head on left side the line.\n   *\n   * @param value {@link LINE_HEAD} Type of head.\n   */\n  setLhsHead(value: LINE_HEAD): LineRenderer {\n    this._lhsHead = value;\n    return this;\n  }\n\n  /**\n   * Set type of head on right side the line.\n   *\n   * @param value {@link LINE_HEAD} Type of head.\n   */\n  setRhsHead(value: LINE_HEAD): LineRenderer {\n    this._rhsHead = value;\n    return this;\n  }\n\n  /**\n   * Set style of the line.\n   *\n   * @param value {@link LINE_STYLE} Style of the line.\n   */\n  setLineStyle(value: LINE_STYLE): LineRenderer {\n    this._lineStyle = value;\n    return this;\n  }\n\n  /**\n   * Set width of the line.\n   *\n   * @param value {@link LINE_WIDTH} Width of the line.\n   */\n  setLineWidth(value: LINE_WIDTH): LineRenderer {\n    this._lineWidth = value;\n    return this;\n  }\n\n  /**\n   * Set length of the line.\n   *\n   * @param value {number} Length of the line.\n   */\n  setLineLength(value: number): LineRenderer {\n    this._lineLength = value;\n    return this;\n  }\n\n  /**\n   * Render line with defined options.\n   */\n  render(): string {\n    let result = `${this.lhsId} `;\n\n    result += this.lhsHead;\n    result += this.linePiece;\n    if (this.isDotted) result += this.dot();\n\n    if (this._connectionDescription) {\n      if (this.isDotted) {\n        result += ` ${this._connectionDescription} `;\n      } else {\n        result += `${this.linePiece} ${this._connectionDescription} ${this.linePiece}`;\n      }\n    } else {\n      const tmpLineLength = this._lineLength;\n      this._lineLength = 1;\n      result += this.linePiece;\n      this._lineLength = tmpLineLength;\n    }\n\n    if (this.isDotted) result += this.dot();\n    result += this.linePiece;\n    result += this.rhsHead;\n\n    result += ` ${this.rhsId}`;\n\n    return result;\n  }\n\n  protected get linePiece(): string {\n    let repeat = this._lineLength;\n    if (this.isDotted) repeat = 1;\n    return (this._lineWidth === LINE_WIDTH.THICK ? '=' : '-').repeat(repeat);\n  }\n\n  protected get lhsHead(): string {\n    switch (this._lhsHead) {\n      case LINE_HEAD.ARROW:\n        return '';\n      case LINE_HEAD.CROSS:\n        return 'x';\n      case LINE_HEAD.POINT:\n        return 'o';\n      default:\n        return '';\n    }\n  }\n\n  protected dot(): string {\n    return '.'.repeat(this._lineLength);\n  }\n\n  protected get isDotted(): boolean {\n    return this._lineStyle === LINE_STYLE.DOTTED;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShapeRenderer.html":{"url":"classes/ShapeRenderer.html","title":"class - ShapeRenderer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShapeRenderer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/graph-blocks/renderer/shape-renderer.ts\n        \n\n\n            \n                Description\n            \n            \n                Class represents renderer of supported shapes by Mermaid.js\nhttps://mermaid-js.github.io/mermaid/#/flowchart?id=node-shapes\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                TEXT_PLACEHOLDER\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        TEXT_PLACEHOLDER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '$TEXT$'\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/shape-renderer.ts:63\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        render\n                        \n                    \n                \n            \n            \n                \nrender(text: string, shape: Shape)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/shape-renderer.ts:71\n                \n            \n\n\n            \n                \n                    Render defined shape with text.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Text in the shape.\n\n                                    \n                                \n                                \n                                    shape\n                                    \n                                                Shape\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Shape Type of the shape.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export enum Shape {\n  DEFAULT = '$TEXT$',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-node-with-round-edges}\n   */\n  ROUND_EDGES = '($TEXT$)',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-node-with-text}\n   */\n  SHARP_EDGES = '[$TEXT$]',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-stadium-shaped-node}\n   */\n  STADIUM_SHAPED = '([$TEXT$])',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-node-in-a-subroutine-shape}\n   */\n  SUBROUTINE = '[[$TEXT$]]',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-node-in-a-cylindrical-shape}\n   */\n  CYLINDER = '[($TEXT$)]',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-node-in-the-form-of-a-circle}\n   */\n  CIRCLE = '(($TEXT$))',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-node-in-an-asymmetric-shape}\n   */\n  ASYMETRIC_RIGHT = '>$TEXT$]',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-node-rhombus}\n   */\n  RHOMBUS = '{$TEXT$}',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-hexagon-node}\n   */\n  HEXAGON = '{{$TEXT$}}',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=parallelogram}\n   */\n  PARALLEOGRAM = '[/$TEXT$/]',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=parallelogram-alt}\n   */\n  PARALLEOGRAM_ALT = '[\\\\$TEXT$\\\\]',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=trapezoid}\n   */\n  TRAPEZOID = '[/$TEXT$\\\\]',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=trapezoid-alt}\n   */\n  TRAPEZOID_ALT = '[\\\\$TEXT$/]',\n}\n\n/**\n * Class represents renderer of supported shapes by Mermaid.js\n *\n * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=node-shapes}\n */\nexport class ShapeRenderer {\n  private static readonly TEXT_PLACEHOLDER = '$TEXT$';\n\n  /**\n   * Render defined shape with text.\n   *\n   * @param text {string} Text in the shape.\n   * @param shape {@link Shape} Type of the shape.\n   */\n  render(text: string, shape: Shape): string {\n    return shape.valueOf().replace(ShapeRenderer.TEXT_PLACEHOLDER, `\"${text}\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UuidBlockIdGenerator.html":{"url":"classes/UuidBlockIdGenerator.html","title":"class - UuidBlockIdGenerator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UuidBlockIdGenerator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/block-id-generator/uuid-block-id-generator.ts\n        \n\n\n            \n                Description\n            \n            \n                Implementation of BlockIdGenerator\nThe ID is generated by calling randomUUID function from 'crypto'\npackage\n\n            \n\n\n            \n                Implements\n            \n            \n                            BlockIdGenerator\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generate\n                        \n                    \n                \n            \n            \n                \ngenerate()\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/block-id-generator/uuid-block-id-generator.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { randomUUID } from 'crypto';\n\nimport { BlockIdGenerator } from './block-id-generator';\n\n/**\n * Implementation of {@link BlockIdGenerator}\n *\n *\n * The ID is generated by calling {@link randomUUID} function from 'crypto'\n * package\n */\nexport class UuidBlockIdGenerator implements BlockIdGenerator {\n  generate(): string {\n    return randomUUID().replace(/-/g, '_');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                packages/ast-to-mmd/src/app/block-id-generator/block-id-generator.ts\n            \n            interface\n            BlockIdGenerator\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/block-id-generator/incremental-block-id-generator.ts\n            \n            class\n            IncrementalBlockIdGenerator\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/block-id-generator/uuid-block-id-generator.ts\n            \n            class\n            UuidBlockIdGenerator\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/convertor.ts\n            \n            class\n            Convertor\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/exporter.ts\n            \n            class\n            Exporter\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/base-for-declaration.graph-block.ts\n            \n            class\n            BaseForDeclarationGraphBlock\n            \n                58 %\n                (18/31)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/binary-expression-declaration.graph-block.ts\n            \n            class\n            BinaryExpressionDeclarationGraphBlock\n            \n                82 %\n                (19/23)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/block-declaration.graph-block.ts\n            \n            class\n            BlockDeclarationGraphBlock\n            \n                72 %\n                (18/25)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/empty.graph-block.ts\n            \n            class\n            EmptyGraphBlock\n            \n                82 %\n                (19/23)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/for-declaration.graph-block.ts\n            \n            class\n            ForDeclarationGraphBlock\n            \n                58 %\n                (18/31)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/for-in-declaration.graph-block.ts\n            \n            class\n            ForInDeclarationGraphBlock\n            \n                58 %\n                (18/31)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/for-of-declaration.graph-block.ts\n            \n            class\n            ForOfDeclarationGraphBlock\n            \n                58 %\n                (18/31)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/for-x-declaration.graph-block.ts\n            \n            class\n            ForXDeclarationGraphBlock\n            \n                58 %\n                (18/31)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/graph-block.ts\n            \n            class\n            GraphBlock\n            \n                95 %\n                (22/23)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/graph-parent.graph-block.ts\n            \n            class\n            GraphParentGraphBlock\n            \n                72 %\n                (18/25)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/if-else-declaration.graph-block.ts\n            \n            class\n            IfElseDeclarationGraphBlock\n            \n                58 %\n                (18/31)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/method-call.graph-block.ts\n            \n            class\n            MethodCallGraphBlock\n            \n                82 %\n                (19/23)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/named-block-declaration.graph-block.ts\n            \n            class\n            NamedBlockDeclarationGraphBlock\n            \n                69 %\n                (18/26)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/parallel-block-declaration.graph-block.ts\n            \n            class\n            ParallelBlockDeclarationGraphBlock\n            \n                72 %\n                (18/25)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts\n            \n            class\n            LineRenderer\n            \n                93 %\n                (15/16)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/renderer/shape-renderer.ts\n            \n            class\n            ShapeRenderer\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/text.graph-block.ts\n            \n            class\n            TextGraphBlock\n            \n                82 %\n                (19/23)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/throw-declaration.graph-block.ts\n            \n            class\n            ThrowDeclarationGraphBlock\n            \n                82 %\n                (19/23)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/try-catch-declaration.graph-block.ts\n            \n            class\n            TryCatchDeclarationGraphBlock\n            \n                51 %\n                (19/37)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/variable-declaration-list.graph-block.ts\n            \n            class\n            VariableDeclarationListGraphBlock\n            \n                82 %\n                (19/23)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/variable-declaration.graph-block.ts\n            \n            class\n            VariableDeclarationGraphBlock\n            \n                82 %\n                (19/23)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-parser/include-file.ts\n            \n            function\n            includeFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-parser/include-file.ts\n            \n            function\n            resolveDecoratorType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-parser/include-file.ts\n            \n            function\n            resolveFileType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-parser/include-file.ts\n            \n            variable\n            decoratorTypeMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-parser/include-file.ts\n            \n            variable\n            fileTypeMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-parser/parser.ts\n            \n            class\n            CodeParser\n            \n                100 %\n                (21/21)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-result.ts\n            \n            interface\n            GraphResult\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            cwd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            options\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            project\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            tsMorphOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            version\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @mermaid-js/mermaid-cli : ^8.13.10\n        \n            chalk : ^5.0.0\n        \n            clear : ^0.1.0\n        \n            commander : ^9.0.0\n        \n            figlet : ^1.5.2\n        \n            path : ^0.12.7\n        \n            ts-morph : ^13.0.3\n        \n            tslib : ^2.0.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DecoratorType   (packages/.../include-file.ts)\n                        \n                        \n                            FileType   (packages/.../include-file.ts)\n                        \n                        \n                            LINE_HEAD   (packages/.../line-renderer.ts)\n                        \n                        \n                            LINE_STYLE   (packages/.../line-renderer.ts)\n                        \n                        \n                            LINE_WIDTH   (packages/.../line-renderer.ts)\n                        \n                        \n                            Shape   (packages/.../shape-renderer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/ast-to-mmd/src/app/graph-parser/include-file.ts\n    \n        \n            \n                \n                    \n                        \n                        DecoratorType\n                    \n                \n                        \n                            \n                                 INJECTABLE\n                            \n                        \n                        \n                            \n                                 CONTROLLER\n                            \n                        \n                        \n                            \n                                 COMMAND_HANDLER\n                            \n                        \n                        \n                            \n                                 QUERY_HANDLER\n                            \n                        \n                        \n                            \n                                 EVENT_HANDLER\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        FileType\n                    \n                \n                        \n                            \n                                 CONTROLLER\n                            \n                        \n                        \n                            \n                                 FACADE\n                            \n                        \n                        \n                            \n                                 SERVICE\n                            \n                        \n                        \n                            \n                                 HANDLER\n                            \n                        \n            \n        \n\n    packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts\n    \n        \n            \n                \n                    \n                        \n                        LINE_HEAD\n                    \n                \n                    \n                        \n                            Style of head of the line.\n\nNONE: ---\nARROR: -->\nPOINT: --O\nCROSS: --X\n\n\n                        \n                    \n                        \n                            \n                                 NONE\n                            \n                        \n                        \n                            \n                                 ARROW\n                            \n                        \n                        \n                            \n                                 POINT\n                            \n                        \n                        \n                            \n                                 CROSS\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        LINE_STYLE\n                    \n                \n                    \n                        \n                            Style of the line.\n\nNORMAL: ---\nDOTTED: ...\n\n\n                        \n                    \n                        \n                            \n                                 NORMAL\n                            \n                        \n                        \n                            \n                                 DOTTED\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        LINE_WIDTH\n                    \n                \n                    \n                        \n                            Width of the line.\n\nNORMAL:  ---\nTHICK: ===\n\n\n                        \n                    \n                        \n                            \n                                 NORMAL\n                            \n                        \n                        \n                            \n                                 THICK\n                            \n                        \n            \n        \n\n    packages/ast-to-mmd/src/app/graph-blocks/renderer/shape-renderer.ts\n    \n        \n            \n                \n                    \n                        \n                        Shape\n                    \n                \n                        \n                            \n                                 DEFAULT\n                            \n                        \n                        \n                            \n                                Value : $TEXT$\n                            \n                        \n                        \n                            \n                                 ROUND_EDGES\n                            \n                        \n                        \n                            \n                                Value : ($TEXT$)\n                            \n                        \n                        \n                            \n                                 SHARP_EDGES\n                            \n                        \n                        \n                            \n                                Value : [$TEXT$]\n                            \n                        \n                        \n                            \n                                 STADIUM_SHAPED\n                            \n                        \n                        \n                            \n                                Value : ([$TEXT$])\n                            \n                        \n                        \n                            \n                                 SUBROUTINE\n                            \n                        \n                        \n                            \n                                Value : [[$TEXT$]]\n                            \n                        \n                        \n                            \n                                 CYLINDER\n                            \n                        \n                        \n                            \n                                Value : [($TEXT$)]\n                            \n                        \n                        \n                            \n                                 CIRCLE\n                            \n                        \n                        \n                            \n                                Value : (($TEXT$))\n                            \n                        \n                        \n                            \n                                 ASYMETRIC_RIGHT\n                            \n                        \n                        \n                            \n                                Value : >$TEXT$]\n                            \n                        \n                        \n                            \n                                 RHOMBUS\n                            \n                        \n                        \n                            \n                                Value : {$TEXT$}\n                            \n                        \n                        \n                            \n                                 HEXAGON\n                            \n                        \n                        \n                            \n                                Value : {{$TEXT$}}\n                            \n                        \n                        \n                            \n                                 PARALLEOGRAM\n                            \n                        \n                        \n                            \n                                Value : [/$TEXT$/]\n                            \n                        \n                        \n                            \n                                 PARALLEOGRAM_ALT\n                            \n                        \n                        \n                            \n                                Value : [\\$TEXT$\\]\n                            \n                        \n                        \n                            \n                                 TRAPEZOID\n                            \n                        \n                        \n                            \n                                Value : [/$TEXT$\\]\n                            \n                        \n                        \n                            \n                                 TRAPEZOID_ALT\n                            \n                        \n                        \n                            \n                                Value : [\\$TEXT$/]\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            includeFile   (packages/.../include-file.ts)\n                        \n                        \n                            resolveDecoratorType   (packages/.../include-file.ts)\n                        \n                        \n                            resolveFileType   (packages/.../include-file.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/ast-to-mmd/src/app/graph-parser/include-file.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        includeFile\n                        \n                    \n                \n            \n            \n                \nincludeFile(analyzedClass: ClassDeclaration)\n                \n            \n\n\n\n\n            \n                \n                    Based on the analyzed class is defined,\nwhether the MMD graph is generated or not.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    analyzedClass\n                                    \n                                            ClassDeclaration\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Analyzed class\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolveDecoratorType\n                        \n                    \n                \n            \n            \n                \nresolveDecoratorType(decorators)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    decorators\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DecoratorType | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolveFileType\n                        \n                    \n                \n            \n            \n                \nresolveFileType(analyzedClass: ClassDeclaration)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    analyzedClass\n                                    \n                                            ClassDeclaration\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FileType | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAST-to-MMD\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    26 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cwd   (packages/.../index.ts)\n                        \n                        \n                            decoratorTypeMap   (packages/.../include-file.ts)\n                        \n                        \n                            fileTypeMap   (packages/.../include-file.ts)\n                        \n                        \n                            options   (packages/.../index.ts)\n                        \n                        \n                            project   (packages/.../index.ts)\n                        \n                        \n                            tsMorphOptions   (packages/.../index.ts)\n                        \n                        \n                            version   (packages/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/ast-to-mmd/src/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cwd\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.cwd()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Default value : program.opts()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        project\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Project(tsMorphOptions)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tsMorphOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProjectOptions\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Default value : JSON.parse(\n  readFileSync(path.resolve(__dirname, '../../../../', 'package.json'), { encoding: 'utf-8' })\n).version\n                    \n                \n\n\n        \n    \n\n    packages/ast-to-mmd/src/app/graph-parser/include-file.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        decoratorTypeMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Record\n\n                    \n                \n                \n                    \n                        Default value : {\n  Injectable: DecoratorType.INJECTABLE,\n  Controller: DecoratorType.CONTROLLER,\n  CommandHandler: DecoratorType.COMMAND_HANDLER,\n  QueryHandler: DecoratorType.QUERY_HANDLER,\n  EventHandler: DecoratorType.EVENT_HANDLER,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileTypeMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Record\n\n                    \n                \n                \n                    \n                        Default value : {\n  Controller: FileType.CONTROLLER,\n  Facade: FileType.FACADE,\n  Service: FileType.SERVICE,\n  Handler: FileType.HANDLER,\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
