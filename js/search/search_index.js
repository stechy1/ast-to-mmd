var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AcceptAllFileFilter.html",[0,0.189,1,2.094]],["body/classes/AcceptAllFileFilter.html",[0,0.223,1,3.183,2,0.561,3,0.401,4,0.401,5,0.528,6,0.223,7,1.236,8,4.108,9,3.578,10,2.232,11,0.401,12,2.379,13,2.42,14,3.711,15,2.379,16,0.174,17,0.581,18,1.366,19,4.912,20,2.773,21,0.401,22,3.824,23,0.561,24,0.031,25,0.561,26,0.305,27,0.561,28,3.824,29,0.401,30,1.236,31,0.796,32,1.852,33,1.852,34,2.027,35,0.62,36,0.401,37,0.746,38,2.232,39,0.023,40,0.023]],["title/classes/AndConstraint.html",[0,0.189,41,2.094]],["body/classes/AndConstraint.html",[0,0.203,2,0.511,3,0.365,4,0.365,5,0.32,6,0.236,7,1.304,11,0.365,16,0.158,17,0.546,18,1.304,21,0.544,23,0.678,24,0.031,25,0.678,26,0.414,27,0.678,29,0.365,30,1.162,31,0.564,35,0.564,36,0.365,37,0.678,39,0.022,40,0.022,41,2.991,42,2.908,43,4.616,44,2.218,45,2.447,46,1.738,47,2.117,48,1.534,49,4.334,50,2.236,51,1.115,52,2.908,53,4.616,54,3.363,55,2.236,56,1.2,57,1.843,58,3.477,59,1.029,60,2.908,61,1.843,62,2.908,63,1.843,64,3.477,65,2.908]],["title/interfaces/BlockIdGenerator.html",[66,1.32,67,1.713]],["body/interfaces/BlockIdGenerator.html",[3,0.432,4,0.432,5,0.379,6,0.234,11,0.432,16,0.187,17,0.609,21,0.432,24,0.031,29,0.54,36,0.432,39,0.024,40,0.024,56,1.3,66,2.101,67,2.726,68,2.399,69,3.332,70,3.388,71,4.301,72,2.664,73,4.111,74,4.111,75,1.991,76,2.664,77,4.284,78,4.111,79,4.301,80,5.143]],["title/classes/ConfigConstraintFactory.html",[0,0.189,81,2.094]],["body/classes/ConfigConstraintFactory.html",[0,0.264,2,0.395,3,0.282,4,0.282,5,0.356,6,0.225,7,1.245,11,0.282,16,0.122,17,0.457,18,1.138,21,0.475,23,0.664,24,0.031,25,0.664,26,0.361,27,0.664,29,0.475,31,0.626,36,0.282,37,1.121,39,0.018,40,0.018,41,1.742,44,2.111,54,2.815,56,1.048,81,2.504,82,4.135,83,2.248,84,2.504,85,3.864,86,3.231,87,3.864,88,4.561,89,3.864,90,3.864,91,3.864,92,4.428,93,2.688,94,4.135,95,3.864,96,5.453,97,4.381,98,2.688,99,2.688,100,2.688,101,1.742,102,1.742,103,1.742,104,1.742,105,1.742,106,2.248,107,2.496,108,2.688,109,2.688,110,3.057,111,3.864,112,2.688,113,2.688,114,2.688,115,2.688,116,2.248,117,4.561,118,2.688,119,2.688,120,2.688,121,2.688,122,2.248,123,2.688,124,2.248,125,2.688,126,2.248,127,2.688]],["title/classes/Constraint.html",[0,0.189,44,1.122]],["body/classes/Constraint.html",[0,0.282,2,0.547,3,0.391,4,0.391,5,0.343,6,0.22,7,1.216,11,0.507,16,0.169,17,0.572,18,1.349,21,0.391,23,0.547,24,0.03,25,0.547,26,0.297,27,0.547,29,0.507,30,1.216,35,0.869,36,0.391,38,2.819,39,0.023,40,0.023,44,2.128,50,2.339,55,2.339,56,1.314,59,1.838,84,2.413,128,3.115,129,3.724,130,5.67,131,3.724,132,4.829,133,2.339,134,3.518,135,3.518,136,3.518,137,1.804]],["title/classes/ConstraintFileFilter.html",[0,0.189,138,2.094]],["body/classes/ConstraintFileFilter.html",[0,0.172,2,0.432,3,0.309,4,0.309,5,0.475,6,0.247,7,1.364,10,1.718,11,0.309,12,1.995,13,2.215,14,2.67,15,1.995,16,0.134,17,0.488,18,1.196,20,2.494,21,0.59,23,0.605,24,0.031,25,0.605,26,0.411,27,0.605,29,0.309,30,1.037,31,0.879,32,1.425,33,1.425,34,1.56,35,0.477,36,0.309,37,0.574,39,0.02,40,0.02,44,2.077,46,1.551,47,2.295,48,1.707,51,0.944,59,0.871,81,3.512,92,3.752,106,2.461,107,1.83,138,2.67,139,4.533,140,3.445,141,3.975,142,4.754,143,2.943,144,4.12,145,3.445,146,1.56,147,2.943,148,3.001,149,2.943,150,2.943,151,2.943,152,1.307,153,2.943,154,2.943,155,2.943]],["title/classes/ContainsConstraint.html",[0,0.189,101,2.094]],["body/classes/ContainsConstraint.html",[0,0.21,2,0.528,3,0.378,4,0.378,5,0.332,6,0.215,7,1.188,11,0.378,16,0.164,17,0.559,18,1.326,21,0.496,23,0.693,24,0.031,25,0.693,26,0.377,27,0.693,29,0.378,30,1.188,31,0.583,35,0.583,36,0.378,37,0.701,39,0.022,40,0.022,44,2.111,45,2.502,48,1.064,50,2.286,51,1.153,55,2.286,56,1.381,57,1.907,59,1.719,61,1.907,63,1.907,101,3.059,122,4.679,133,2.286,134,3.439,152,1.597,156,3.008,157,3.439,158,3.439,159,3.596,160,3.596,161,2.33,162,3.596]],["title/classes/Convertor.html",[0,0.189,163,2.094]],["body/classes/Convertor.html",[0,0.235,2,0.59,3,0.231,4,0.553,5,0.413,6,0.204,11,0.349,13,2.313,16,0.1,17,0.394,18,1.011,20,2.627,21,0.506,23,0.322,24,0.031,25,0.322,26,0.266,27,0.322,29,0.231,31,0.822,32,1.063,33,1.063,34,2.13,35,0.781,36,0.231,37,0.428,39,0.016,40,0.016,46,1.253,47,1.968,48,1.5,51,0.704,67,2.687,70,1.164,75,2.455,76,2.603,79,2.782,107,2.339,110,3.241,137,1.946,152,0.975,163,2.904,164,1.836,165,2.782,166,3.327,167,4.536,168,2.627,169,4.536,170,4.482,171,2.195,172,3.265,173,3.327,174,2.782,175,3.265,176,4.017,177,3.327,178,3.327,179,3.327,180,2.345,181,2.782,182,2.195,183,3.327,184,3.327,185,3.327,186,2.616,187,2.782,188,3.327,189,1.836,190,3.36,191,1.836,192,1.281,193,2.195,194,1.423,195,2.195,196,2.195,197,2.782,198,2.195,199,2.195,200,2.195,201,2.424,202,2.195,203,2.195,204,3.327,205,2.195,206,3.327,207,2.195,208,3.327,209,3.327,210,3.327,211,3.327,212,2.195,213,2.195,214,2.195]],["title/classes/EndsWithConstraint.html",[0,0.189,102,2.094]],["body/classes/EndsWithConstraint.html",[0,0.21,2,0.528,3,0.378,4,0.378,5,0.332,6,0.215,7,1.188,11,0.378,16,0.164,17,0.559,18,1.326,21,0.496,23,0.693,24,0.031,25,0.693,26,0.377,27,0.693,29,0.378,30,1.188,31,0.583,35,0.583,36,0.378,37,0.701,39,0.022,40,0.022,44,2.111,45,2.502,48,1.064,50,2.286,51,1.153,55,2.286,56,1.381,57,1.907,59,1.719,61,1.907,63,1.907,102,3.059,126,3.948,133,2.286,152,1.597,157,3.439,158,3.439,161,2.33,215,3.948,216,2.62,217,4.72,218,3.596,219,3.008,220,3.596]],["title/classes/Exporter.html",[0,0.189,221,2.094]],["body/classes/Exporter.html",[0,0.272,2,0.417,3,0.298,4,0.298,5,0.43,6,0.212,11,0.49,16,0.129,17,0.476,18,1.174,20,1.376,21,0.532,23,0.59,24,0.031,25,0.59,26,0.321,27,0.59,29,0.298,31,0.756,35,0.652,36,0.562,39,0.026,40,0.019,48,0.841,51,0.911,56,1.175,107,1.785,110,2.722,137,1.946,152,1.262,165,3.361,168,2.873,175,2.928,186,3.242,194,1.841,197,2.376,221,3.285,222,2.376,223,4.019,224,2.604,225,4.019,226,5.554,227,2.841,228,2.841,229,4.019,230,4.664,231,4.249,232,4.019,233,4.019,234,2.841,235,4.019,236,3.397,237,4.019,238,2.841,239,2.376,240,2.841,241,2.841,242,4.019,243,2.841,244,2.841,245,2.07,246,2.841,247,2.841,248,3.361,249,2.841,250,2.841,251,2.07,252,2.07,253,2.07,254,2.841,255,2.841]],["title/classes/ExternalFileFilter.html",[0,0.189,256,2.094]],["body/classes/ExternalFileFilter.html",[0,0.194,2,0.487,3,0.348,4,0.348,5,0.521,6,0.246,7,1.363,10,1.936,11,0.348,12,2.166,13,2.433,14,3.51,15,2.166,16,0.151,17,0.529,18,1.274,20,2.623,21,0.531,23,0.657,24,0.031,25,0.657,26,0.404,27,0.657,29,0.348,30,1.126,31,0.725,32,1.606,33,1.606,34,1.758,35,0.538,36,0.348,37,0.647,39,0.021,40,0.021,46,1.684,47,2.067,48,1.498,51,1.063,56,1.172,148,3.258,256,3.665,257,4.53,258,2.898,259,4.472,260,4.472,261,4.472,262,4.472,263,3.316,264,3.316,265,3.316,266,3.316,267,3.316]],["title/interfaces/FileFilter.html",[13,1.32,66,1.32]],["body/interfaces/FileFilter.html",[3,0.373,4,0.373,5,0.573,6,0.213,7,1.178,10,2.073,11,0.492,13,1.913,14,3.608,16,0.162,17,0.554,20,2.878,21,0.373,23,0.522,24,0.031,25,0.522,26,0.284,27,0.522,29,0.492,30,1.178,31,0.576,32,1.72,33,1.72,34,2.482,35,0.576,36,0.373,38,2.733,39,0.022,40,0.022,66,2.14,68,2.073,133,2.267,135,3.411,136,3.411,137,1.72,140,3.915,148,3.411,167,3.915,258,3.034,268,3.034,269,3.411,270,4.682,271,4.682,272,3.552,273,4.682,274,4.682,275,4.682]],["title/classes/FileFilterFactory.html",[0,0.189,276,2.094]],["body/classes/FileFilterFactory.html",[0,0.191,1,2.87,2,0.48,3,0.343,4,0.343,5,0.463,6,0.201,7,1.115,9,2.382,13,2.052,16,0.149,17,0.524,18,1.264,21,0.343,23,0.48,24,0.031,25,0.48,26,0.261,27,0.48,29,0.343,31,0.941,34,2.855,36,0.343,37,0.98,39,0.021,40,0.021,56,1.344,94,2.734,107,2.5,110,2.585,138,2.118,231,3.66,239,3.704,248,2.734,251,2.382,252,2.382,253,2.382,256,2.118,268,2.87,276,2.87,277,2.734,278,4.429,279,4.429,280,5.628,281,3.269,282,2.382,283,3.269,284,3.269,285,3.269,286,3.269,287,3.269,288,3.269,289,4.429,290,3.269,291,3.269,292,3.269,293,3.269,294,3.269,295,3.269,296,3.269,297,3.269]],["title/interfaces/GraphResult.html",[66,1.32,186,1.886]],["body/interfaces/GraphResult.html",[3,0.426,4,0.426,5,0.374,6,0.184,11,0.426,16,0.184,20,3.06,24,0.031,26,0.407,31,0.826,32,1.963,33,1.963,36,0.426,39,0.024,40,0.024,46,1.919,66,2.278,68,2.365,75,2.833,84,3.303,168,3.025,186,2.975,192,2.365,194,3.303,298,1.8,299,3.389,300,4.263]],["title/classes/IncrementalBlockIdGenerator.html",[0,0.189,301,2.354]],["body/classes/IncrementalBlockIdGenerator.html",[0,0.202,2,0.507,3,0.363,4,0.363,5,0.319,6,0.235,11,0.363,12,2.227,15,2.227,16,0.157,17,0.544,21,0.483,24,0.031,26,0.276,29,0.363,31,0.56,35,0.56,36,0.363,37,0.674,39,0.022,40,0.022,46,1.731,47,2.111,56,1.065,59,1.023,67,3.04,69,3.348,70,3.28,72,2.239,76,2.239,77,4.012,146,1.832,180,3.215,181,3.845,224,3.569,301,3.349,302,4.321,303,4.598,304,4.598,305,4.598,306,6.018,307,2.89,308,3.845,309,2.89,310,3.456,311,3.456]],["title/classes/LineRenderer.html",[0,0.189,312,2.094]],["body/classes/LineRenderer.html",[0,0.14,2,0.153,3,0.109,4,0.109,5,0.096,6,0.244,11,0.534,16,0.047,17,0.214,21,0.569,23,0.561,24,0.032,25,0.561,26,0.451,27,0.668,29,0.424,30,0.455,35,0.655,36,0.34,37,0.975,38,1.056,39,0.009,40,0.009,46,0.681,47,2.167,48,0.535,51,0.334,56,1.243,59,1.661,70,1.518,86,0.871,88,2.972,107,0.803,110,0.608,116,0.871,117,2.005,135,2.086,136,1.318,137,2.051,146,2.024,152,0.463,174,1.513,175,1.318,194,3.035,269,1.318,298,2.383,300,1.513,307,2.711,312,3.437,313,3.477,314,0.608,315,1.513,316,4.97,317,1.809,318,1.809,319,1.809,320,2.397,321,2.397,322,2.397,323,2.397,324,2.397,325,2.397,326,2.863,327,2.972,328,1.809,329,1.809,330,1.809,331,1.809,332,1.809,333,1.809,334,1.809,335,2.397,336,2.397,337,1.809,338,2.397,339,1.042,340,2.863,341,1.809,342,2.397,343,3.554,344,2.395,345,3.554,346,1.042,347,4.183,348,2.863,349,1.042,350,3.917,351,4.041,352,2.863,353,3.554,354,3.683,355,1.809,356,1.042,357,3.192,358,3.683,359,1.809,360,1.042,361,3.192,362,1.042,363,1.042,364,1.042,365,1.318,366,1.809,367,3.241,368,1.042,369,4.684,370,2.863,371,1.809,372,2.005,373,1.809,374,1.042,375,1.809,376,1.042,377,1.809,378,1.042,379,1.809,380,1.042,381,1.809,382,1.042,383,1.042,384,1.042,385,1.042,386,1.042,387,1.042,388,1.042,389,1.042,390,1.042,391,2.005,392,0.871,393,0.871,394,0.871,395,0.871,396,2.395,397,1.513,398,1.513,399,3.554,400,1.042,401,1.809,402,1.042,403,1.809,404,1.809,405,3.241,406,1.042,407,1.042,408,3.241,409,2.863,410,1.809,411,1.809,412,1.042,413,1.042,414,1.809,415,1.042,416,1.042,417,1.042,418,1.042,419,0.759,420,1.042,421,0.871,422,1.042,423,1.042,424,0.871,425,0.871]],["title/classes/NotConstraint.html",[0,0.189,103,2.094]],["body/classes/NotConstraint.html",[0,0.218,2,0.549,3,0.392,4,0.392,5,0.344,6,0.22,7,1.218,11,0.392,16,0.17,17,0.573,18,1.351,21,0.508,23,0.711,24,0.031,25,0.711,26,0.386,27,0.711,29,0.392,30,1.218,31,0.606,35,0.606,36,0.392,37,0.729,39,0.023,40,0.023,44,2.229,45,2.566,48,1.106,50,2.344,51,1.198,55,2.344,56,1.243,57,1.981,59,1.106,61,1.981,63,1.981,103,3.136,152,1.66,161,2.421,426,3.125,427,4.839,428,3.737,429,3.737,430,3.737]],["title/classes/OfKindSiblingCondition.html",[0,0.189,431,2.354]],["body/classes/OfKindSiblingCondition.html",[0,0.192,2,0.483,3,0.345,4,0.345,5,0.303,6,0.246,11,0.345,12,2.153,15,2.153,16,0.15,17,0.526,21,0.529,23,0.653,24,0.031,25,0.653,26,0.402,27,0.653,29,0.345,30,1.119,31,0.817,35,0.721,36,0.345,37,0.641,39,0.021,40,0.021,46,1.674,47,2.058,48,1.491,51,1.054,75,2.614,168,1.592,180,1.919,192,1.919,431,3.239,432,4.514,433,4.514,434,2.395,435,3.291,436,4.446,437,4.462,438,5.038,439,3.239,440,3.288,441,3.719,442,4.446,443,3.719,444,3.288,445,2.75,446,3.288,447,2.75,448,3.288,449,3.288,450,3.288,451,3.288,452,3.288]],["title/classes/OrConstraint.html",[0,0.189,104,2.094]],["body/classes/OrConstraint.html",[0,0.203,2,0.511,3,0.365,4,0.365,5,0.32,6,0.236,7,1.304,11,0.365,16,0.158,17,0.546,18,1.304,21,0.544,23,0.678,24,0.031,25,0.678,26,0.414,27,0.678,29,0.365,30,1.162,31,0.564,35,0.564,36,0.365,37,0.678,39,0.022,40,0.022,44,2.218,45,2.447,46,1.738,47,2.117,48,1.534,49,4.334,50,2.236,51,1.115,52,2.908,54,3.363,55,2.236,56,1.2,57,1.843,59,1.029,60,2.908,61,1.843,62,2.908,63,1.843,65,2.908,104,2.991,453,2.908,454,4.616,455,4.616,456,3.477,457,3.477]],["title/classes/PositiveSiblingCondition.html",[0,0.189,458,2.354]],["body/classes/PositiveSiblingCondition.html",[0,0.223,2,0.561,3,0.401,4,0.401,5,0.352,6,0.223,11,0.401,12,2.379,15,2.379,16,0.174,17,0.581,18,1.366,21,0.401,23,0.561,24,0.031,25,0.561,26,0.305,27,0.561,29,0.401,30,1.236,31,0.796,35,0.62,36,0.401,37,0.746,38,2.232,39,0.023,40,0.023,75,2.773,168,1.852,192,2.232,434,2.786,435,3.457,439,3.578,441,3.198,447,3.198,458,3.578,459,4.108,460,4.912,461,4.108,462,4.912,463,4.912,464,4.912,465,3.824]],["title/classes/ShapeRenderer.html",[0,0.189,466,2.354]],["body/classes/ShapeRenderer.html",[0,0.239,2,0.332,3,0.237,4,0.237,5,0.208,6,0.186,11,0.357,16,0.103,17,0.402,21,0.478,23,0.332,24,0.032,25,0.332,26,0.363,27,0.332,29,0.237,35,0.98,36,0.357,37,0.441,39,0.016,40,0.016,46,1.28,47,1.67,48,1.21,56,1.232,59,0.669,137,1.647,141,3.419,146,1.803,269,2.477,298,1.816,314,1.319,315,2.844,327,3.804,344,4.682,391,1.89,466,2.477,467,2.979,468,3.401,469,4.549,470,3.401,471,6.045,472,3.401,473,4.089,474,5.293,475,2.26,476,3.401,477,5.186,478,2.26,479,5.598,480,2.26,481,2.26,482,1.89,483,1.89,484,2.26,485,2.26,486,1.89,487,2.844,488,2.26,489,1.89,490,2.26,491,2.844,492,2.26,493,1.89,494,2.844,495,2.844,496,3.401,497,1.89,498,3.401,499,1.89,500,3.401,501,1.89,502,1.89,503,2.26]],["title/interfaces/SiblingCondition.html",[66,1.32,435,1.886]],["body/interfaces/SiblingCondition.html",[3,0.385,4,0.385,5,0.338,6,0.217,11,0.502,16,0.167,17,0.566,21,0.558,23,0.538,24,0.031,25,0.538,26,0.293,27,0.538,29,0.385,30,1.203,31,0.594,35,0.594,36,0.385,39,0.023,40,0.023,66,2.173,68,2.139,75,2.903,84,3.097,133,2.315,134,4.106,137,1.775,168,1.775,192,2.139,258,3.097,435,2.789,439,3.482,443,3.997,445,5.013,461,4.713,504,3.065,505,4.779,506,4.779,507,4.779,508,3.665,509,4.779,510,4.779,511,4.779]],["title/classes/StartsWithConstraint.html",[0,0.189,105,2.094]],["body/classes/StartsWithConstraint.html",[0,0.21,2,0.528,3,0.378,4,0.378,5,0.332,6,0.215,7,1.188,11,0.378,16,0.164,17,0.559,18,1.326,21,0.496,23,0.693,24,0.031,25,0.693,26,0.377,27,0.693,29,0.378,30,1.188,31,0.583,35,0.583,36,0.378,37,0.701,39,0.022,40,0.022,44,2.111,45,2.502,48,1.064,50,2.286,51,1.153,55,2.286,56,1.381,57,1.907,59,1.719,61,1.907,63,1.907,105,3.059,124,3.948,133,2.286,152,1.597,157,3.439,158,3.439,161,2.33,216,2.62,219,3.008,512,3.948,513,4.72,514,3.596,515,3.596]],["title/classes/UuidBlockIdGenerator.html",[0,0.189,516,2.094]],["body/classes/UuidBlockIdGenerator.html",[0,0.217,2,0.545,3,0.39,4,0.39,5,0.342,6,0.219,11,0.39,12,2.334,15,2.334,16,0.169,17,0.57,21,0.39,24,0.031,29,0.39,31,0.781,35,0.781,36,0.39,37,0.724,39,0.023,40,0.023,56,1.116,67,3.111,69,3.123,70,3.246,72,2.406,76,2.406,77,4.126,180,3.123,224,3.123,309,3.105,516,3.123,517,4.03,518,4.819,519,5.351,520,3.511,521,5.351,522,4.03,523,3.712,524,3.712,525,3.712]],["title/coverage.html",[526,3.675]],["body/coverage.html",[0,0.369,1,0.912,5,0.13,6,0.295,7,1.331,8,1.177,9,1.026,10,2.035,13,0.955,24,0.031,26,0.112,39,0.011,40,0.011,41,0.912,42,1.177,44,0.489,66,1.424,67,0.746,69,1.941,70,2.211,71,1.177,72,1.941,75,0.682,81,0.912,82,1.177,83,1.177,101,0.912,102,0.912,103,0.912,104,0.912,105,0.912,107,0.625,128,1.177,138,0.912,139,1.177,156,1.177,163,1.514,164,1.177,169,1.177,172,1.026,180,2.035,186,0.822,189,1.177,190,1.177,191,1.177,215,1.177,216,1.702,221,1.514,222,1.177,236,1.026,256,0.912,257,1.177,268,1.514,276,1.514,277,1.177,282,1.026,298,2.72,299,1.177,301,1.026,302,1.177,308,4.676,312,0.912,313,0.912,314,1.364,365,1.026,419,1.026,426,1.177,431,1.026,432,1.177,433,1.177,434,1.702,435,0.822,453,1.177,458,1.026,459,1.177,466,1.026,467,1.026,504,1.177,512,1.177,516,0.912,517,1.177,520,2.182,526,1.177,527,1.408,528,1.408,529,1.408,530,4.625,531,3.486,532,2.336,533,2.336,534,2.995,535,2.995,536,1.026,537,5.377,538,1.177,539,5.527,540,3.867,541,3.867,542,1.408,543,1.408,544,3.867,545,3.867,546,1.408,547,1.408,548,1.408,549,2.336,550,1.408,551,2.336,552,1.408,553,1.408,554,3.867,555,3.867,556,1.408,557,5.527,558,5.837,559,1.408,560,1.408,561,1.408,562,1.408,563,1.408,564,1.408,565,4.948,566,4.948,567,1.408,568,1.408,569,2.995,570,2.995,571,1.408,572,1.408,573,1.408,574,1.408,575,1.408,576,1.408,577,3.486,578,1.408,579,1.408,580,1.408,581,1.408,582,2.336,583,2.336,584,1.408,585,1.408,586,1.408,587,1.408,588,1.408,589,1.408,590,1.408,591,1.408,592,1.408,593,1.408,594,1.408,595,1.408,596,1.408,597,1.408,598,1.408,599,1.408,600,1.408,601,1.408,602,1.408,603,1.408,604,1.408,605,1.408,606,1.408,607,1.408,608,1.408,609,2.336,610,1.408,611,1.408,612,1.408,613,2.506,614,2.506,615,1.177,616,1.408,617,1.177,618,1.177,619,1.177,620,1.177,621,1.408,622,1.408,623,4.246,624,1.177,625,1.177,626,1.177,627,1.408,628,1.408]],["title/dependencies.html",[522,2.263,629,3.246]],["body/dependencies.html",[24,0.031,32,2.212,33,2.212,39,0.026,40,0.026,231,3.328,629,3.82,630,4.568,631,4.568,632,4.568,633,4.568,634,4.568,635,4.568,636,4.568,637,4.568,638,4.568,639,4.568,640,4.568,641,4.568,642,4.568,643,4.568,644,4.568,645,4.568]],["title/miscellaneous/enumerations.html",[646,1.202,647,3.246]],["body/miscellaneous/enumerations.html",[6,0.237,16,0.138,24,0.031,39,0.02,40,0.02,59,1.863,146,1.605,298,2.144,313,1.962,314,3.309,316,4.037,347,3.515,350,2.532,354,3.515,357,3.515,358,3.515,361,2.532,392,3.515,393,2.532,394,3.515,395,3.515,396,4.36,397,3.515,398,3.515,419,2.206,421,2.532,437,3.062,467,2.206,474,5.265,477,3.515,482,2.532,483,2.532,486,2.532,487,2.532,489,2.532,491,2.532,493,2.532,494,2.532,495,2.532,497,2.532,499,2.532,501,2.532,502,2.532,536,2.206,613,1.962,614,3.128,646,1.345,647,2.532,648,2.532,649,3.515,650,3.062,651,3.515,652,4.037,653,3.028,654,3.028,655,3.028,656,3.028,657,3.028,658,3.028,659,3.028,660,3.028,661,3.028,662,3.028,663,3.028,664,3.028,665,3.028,666,3.028,667,3.028,668,3.028,669,3.028,670,3.028,671,3.028,672,3.028,673,2.532,674,3.515,675,3.028,676,3.028,677,3.028,678,2.532,679,2.532,680,2.532,681,3.028]],["title/miscellaneous/functions.html",[201,2.828,646,1.202]],["body/miscellaneous/functions.html",[0,0.295,6,0.182,11,0.42,16,0.182,21,0.42,23,0.814,24,0.03,25,0.814,26,0.403,27,0.814,29,0.53,39,0.024,40,0.024,133,1.935,168,1.935,187,4.868,201,2.911,224,2.59,245,2.911,258,2.59,298,1.775,613,2.59,614,3.772,615,4.225,617,4.225,618,4.225,646,1.775,649,3.342,650,4.036,651,3.342,682,3.996,683,5.052,684,5.052,685,3.996,686,3.996,687,5.052,688,3.996]],["title/index.html",[16,0.123,689,2.706,690,2.706]],["body/index.html",[24,0.028,39,0.028,40,0.028,245,3.711,691,5.094]],["title/modules.html",[692,3.675]],["body/modules.html",[24,0.028,39,0.028,40,0.028,692,4.279]],["title/overview.html",[693,3.675]],["body/overview.html",[2,0.738,24,0.028,39,0.028,40,0.028,68,2.934,693,4.205,694,5.027,695,5.027]],["title/miscellaneous/typealiases.html",[646,1.202,696,3.882]],["body/miscellaneous/typealiases.html",[6,0.243,7,1.102,16,0.199,24,0.025,26,0.427,39,0.025,40,0.025,92,3.894,97,4.471,145,4.471,268,2.836,298,1.944,312,2.836,313,2.836,314,3.12,372,3.66,424,3.66,425,4.471,520,3.188,646,1.944,652,3.66,697,4.377,698,6.011,699,6.165,700,5.772,701,4.377]],["title/miscellaneous/variables.html",[646,1.202,702,3.246]],["body/miscellaneous/variables.html",[6,0.216,13,2.104,16,0.134,24,0.031,26,0.433,39,0.02,40,0.02,59,1.855,107,2.408,146,3.324,163,2.67,172,3.463,221,2.67,236,3.001,251,2.144,252,2.144,253,2.144,276,3.08,282,3.001,298,1.307,365,3.001,437,2.144,516,1.907,536,2.144,538,3.445,613,1.907,614,3.08,619,3.445,620,3.445,623,2.461,624,3.445,625,3.445,626,3.975,646,1.307,648,2.461,650,3.001,673,2.461,674,3.445,678,2.461,679,2.461,680,2.461,702,2.461,703,6.124,704,2.943,705,2.943,706,2.943,707,2.943,708,2.943,709,2.943,710,2.943,711,2.943,712,2.943,713,2.943,714,2.943,715,2.943,716,2.943,717,2.943,718,2.943,719,4.12,720,2.943,721,2.943,722,2.943,723,2.943,724,2.943,725,2.943,726,2.943,727,2.943,728,2.943,729,2.943,730,2.943,731,2.943]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"interfaces/BlockIdGenerator.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":308,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{},"coverage.html":{}}}],["0.1.0",{"_index":637,"title":{},"body":{"dependencies.html":{}}}],["0.12.7",{"_index":642,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":539,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":546,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":352,"title":{},"body":{"classes/LineRenderer.html":{}}}],["1.5.2",{"_index":641,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":616,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":535,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":545,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":541,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":548,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":530,"title":{},"body":{"coverage.html":{}}}],["13.0.3",{"_index":643,"title":{},"body":{"dependencies.html":{}}}],["15/16",{"_index":597,"title":{},"body":{"coverage.html":{}}}],["2.0.0",{"_index":645,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":531,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":533,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":547,"title":{},"body":{"coverage.html":{}}}],["23/31",{"_index":570,"title":{},"body":{"coverage.html":{}}}],["23/32",{"_index":595,"title":{},"body":{"coverage.html":{}}}],["23/37",{"_index":555,"title":{},"body":{"coverage.html":{}}}],["23/38",{"_index":589,"title":{},"body":{"coverage.html":{}}}],["24/29",{"_index":566,"title":{},"body":{"coverage.html":{}}}],["24/43",{"_index":608,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":540,"title":{},"body":{"coverage.html":{}}}],["25/29",{"_index":561,"title":{},"body":{"coverage.html":{}}}],["26/26",{"_index":622,"title":{},"body":{"coverage.html":{}}}],["27/29",{"_index":584,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":543,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":544,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":695,"title":{},"body":{"overview.html":{}}}],["4/4",{"_index":542,"title":{},"body":{"coverage.html":{}}}],["44",{"_index":694,"title":{},"body":{"overview.html":{}}}],["5.0.0",{"_index":635,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":534,"title":{},"body":{"coverage.html":{}}}],["55",{"_index":607,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":588,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":554,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":532,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":594,"title":{},"body":{"coverage.html":{}}}],["74",{"_index":569,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":253,"title":{},"body":{"classes/Exporter.html":{},"classes/FileFilterFactory.html":{},"miscellaneous/variables.html":{}}}],["8.13.10",{"_index":633,"title":{},"body":{"dependencies.html":{}}}],["82",{"_index":565,"title":{},"body":{"coverage.html":{}}}],["86",{"_index":560,"title":{},"body":{"coverage.html":{}}}],["9.0.0",{"_index":639,"title":{},"body":{"dependencies.html":{}}}],["93",{"_index":583,"title":{},"body":{"coverage.html":{}}}],["_",{"_index":525,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{}}}],["_blockkinds",{"_index":438,"title":{},"body":{"classes/OfKindSiblingCondition.html":{}}}],["_connectiondescription",{"_index":320,"title":{},"body":{"classes/LineRenderer.html":{}}}],["_constraints",{"_index":49,"title":{},"body":{"classes/AndConstraint.html":{},"classes/OrConstraint.html":{}}}],["_file",{"_index":28,"title":{},"body":{"classes/AcceptAllFileFilter.html":{}}}],["_lhshead",{"_index":321,"title":{},"body":{"classes/LineRenderer.html":{}}}],["_linelength",{"_index":322,"title":{},"body":{"classes/LineRenderer.html":{}}}],["_linestyle",{"_index":323,"title":{},"body":{"classes/LineRenderer.html":{}}}],["_linewidth",{"_index":324,"title":{},"body":{"classes/LineRenderer.html":{}}}],["_rhshead",{"_index":325,"title":{},"body":{"classes/LineRenderer.html":{}}}],["_sibling",{"_index":465,"title":{},"body":{"classes/PositiveSiblingCondition.html":{}}}],["absoluteconfigpath",{"_index":286,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["absoluteconfigpath.endswith('.js",{"_index":295,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["absoluteconfigpath.endswith('.json",{"_index":292,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["abstract",{"_index":130,"title":{},"body":{"classes/Constraint.html":{}}}],["accept",{"_index":14,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/ConstraintFileFilter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{}}}],["accept(_file",{"_index":19,"title":{},"body":{"classes/AcceptAllFileFilter.html":{}}}],["accept(file",{"_index":148,"title":{},"body":{"classes/ConstraintFileFilter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{}}}],["acceptallfilefilter",{"_index":1,"title":{"classes/AcceptAllFileFilter.html":{}},"body":{"classes/AcceptAllFileFilter.html":{},"classes/FileFilterFactory.html":{},"coverage.html":{}}}],["accepted",{"_index":275,"title":{},"body":{"interfaces/FileFilter.html":{}}}],["accessors",{"_index":334,"title":{},"body":{"classes/LineRenderer.html":{}}}],["aliases",{"_index":697,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["all.file",{"_index":9,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/FileFilterFactory.html":{},"coverage.html":{}}}],["alt",{"_index":498,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["always",{"_index":462,"title":{},"body":{"classes/PositiveSiblingCondition.html":{}}}],["analyzed",{"_index":683,"title":{},"body":{"miscellaneous/functions.html":{}}}],["analyzedclass",{"_index":684,"title":{},"body":{"miscellaneous/functions.html":{}}}],["andconstraint",{"_index":41,"title":{"classes/AndConstraint.html":{}},"body":{"classes/AndConstraint.html":{},"classes/ConfigConstraintFactory.html":{},"coverage.html":{}}}],["andconstraint(...this.recursivebuild(...configelement",{"_index":118,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["andconstraint(...this.recursivebuild(config",{"_index":108,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["append",{"_index":367,"title":{},"body":{"classes/LineRenderer.html":{}}}],["appended",{"_index":371,"title":{},"body":{"classes/LineRenderer.html":{}}}],["array",{"_index":177,"title":{},"body":{"classes/Convertor.html":{}}}],["arror",{"_index":681,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["arrow",{"_index":393,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["ast",{"_index":691,"title":{},"body":{"index.html":{}}}],["asymetric_right",{"_index":493,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["asymmetric",{"_index":492,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["base",{"_index":129,"title":{},"body":{"classes/Constraint.html":{}}}],["basecycledeclarationgraphblock",{"_index":553,"title":{},"body":{"coverage.html":{}}}],["based",{"_index":258,"title":{},"body":{"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"interfaces/SiblingCondition.html":{},"miscellaneous/functions.html":{}}}],["baseexitdeclarationgraphblock",{"_index":559,"title":{},"body":{"coverage.html":{}}}],["between",{"_index":317,"title":{},"body":{"classes/LineRenderer.html":{}}}],["binary_expression_declaration",{"_index":654,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["binaryexpressiondeclarationgraphblock",{"_index":564,"title":{},"body":{"coverage.html":{}}}],["block",{"_index":180,"title":{},"body":{"classes/Convertor.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/OfKindSiblingCondition.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{}}}],["block.kind",{"_index":446,"title":{},"body":{"classes/OfKindSiblingCondition.html":{}}}],["block.ts",{"_index":558,"title":{},"body":{"coverage.html":{}}}],["block_declaration",{"_index":655,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["blockdeclarationgraphblock",{"_index":568,"title":{},"body":{"coverage.html":{}}}],["blockidgenerator",{"_index":67,"title":{"interfaces/BlockIdGenerator.html":{}},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{}}}],["blockkind",{"_index":437,"title":{},"body":{"classes/OfKindSiblingCondition.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["blockkind.for_declaration",{"_index":716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blockkind.for_in_declaration",{"_index":717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blockkind.for_of_declaration",{"_index":718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blockkinds",{"_index":442,"title":{},"body":{"classes/OfKindSiblingCondition.html":{}}}],["blocks",{"_index":192,"title":{},"body":{"classes/Convertor.html":{},"interfaces/GraphResult.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"interfaces/SiblingCondition.html":{}}}],["blocks/base",{"_index":549,"title":{},"body":{"coverage.html":{}}}],["blocks/binary",{"_index":562,"title":{},"body":{"coverage.html":{}}}],["blocks/block",{"_index":567,"title":{},"body":{"coverage.html":{}}}],["blocks/break",{"_index":571,"title":{},"body":{"coverage.html":{}}}],["blocks/continue",{"_index":573,"title":{},"body":{"coverage.html":{}}}],["blocks/empty.graph",{"_index":575,"title":{},"body":{"coverage.html":{}}}],["blocks/for",{"_index":577,"title":{},"body":{"coverage.html":{}}}],["blocks/graph",{"_index":582,"title":{},"body":{"coverage.html":{}}}],["blocks/if",{"_index":586,"title":{},"body":{"coverage.html":{}}}],["blocks/method",{"_index":590,"title":{},"body":{"coverage.html":{}}}],["blocks/named",{"_index":593,"title":{},"body":{"coverage.html":{}}}],["blocks/parallel",{"_index":596,"title":{},"body":{"coverage.html":{}}}],["blocks/renderer/line",{"_index":313,"title":{},"body":{"classes/LineRenderer.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["blocks/renderer/shape",{"_index":467,"title":{},"body":{"classes/ShapeRenderer.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["blocks/return",{"_index":598,"title":{},"body":{"coverage.html":{}}}],["blocks/text.graph",{"_index":600,"title":{},"body":{"coverage.html":{}}}],["blocks/throw",{"_index":602,"title":{},"body":{"coverage.html":{}}}],["blocks/try",{"_index":604,"title":{},"body":{"coverage.html":{}}}],["blocks/variable",{"_index":609,"title":{},"body":{"coverage.html":{}}}],["boolean",{"_index":30,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/EndsWithConstraint.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{}}}],["break_declaration",{"_index":656,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["breakdeclarationgraphblock",{"_index":572,"title":{},"body":{"coverage.html":{}}}],["build",{"_index":87,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["build(config",{"_index":91,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["buildconstraint",{"_index":89,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["buildconstraint(config",{"_index":95,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["builder",{"_index":86,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"classes/LineRenderer.html":{}}}],["builder/config",{"_index":150,"title":{},"body":{"classes/ConstraintFileFilter.html":{}}}],["call.graph",{"_index":591,"title":{},"body":{"coverage.html":{}}}],["calling",{"_index":518,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{}}}],["case",{"_index":117,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"classes/LineRenderer.html":{}}}],["catch",{"_index":605,"title":{},"body":{"coverage.html":{}}}],["chalk",{"_index":634,"title":{},"body":{"dependencies.html":{}}}],["check",{"_index":157,"title":{},"body":{"classes/ContainsConstraint.html":{},"classes/EndsWithConstraint.html":{},"classes/StartsWithConstraint.html":{}}}],["checked",{"_index":510,"title":{},"body":{"interfaces/SiblingCondition.html":{}}}],["checks",{"_index":436,"title":{},"body":{"classes/OfKindSiblingCondition.html":{}}}],["child",{"_index":507,"title":{},"body":{"interfaces/SiblingCondition.html":{}}}],["circle",{"_index":491,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["class",{"_index":0,"title":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"classes/FileFilterFactory.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{}},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"classes/FileFilterFactory.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["classblocks",{"_index":206,"title":{},"body":{"classes/Convertor.html":{}}}],["classdeclaration",{"_index":187,"title":{},"body":{"classes/Convertor.html":{},"miscellaneous/functions.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"classes/FileFilterFactory.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{},"overview.html":{}}}],["clear",{"_index":636,"title":{},"body":{"dependencies.html":{}}}],["cli",{"_index":632,"title":{},"body":{"dependencies.html":{}}}],["codeparser",{"_index":169,"title":{},"body":{"classes/Convertor.html":{},"coverage.html":{}}}],["codeparser(idgenerator",{"_index":196,"title":{},"body":{"classes/Convertor.html":{}}}],["command_handler",{"_index":675,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["commander",{"_index":638,"title":{},"body":{"dependencies.html":{}}}],["commandhandler",{"_index":722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["condition",{"_index":461,"title":{},"body":{"classes/PositiveSiblingCondition.html":{},"interfaces/SiblingCondition.html":{}}}],["condition.ts",{"_index":434,"title":{},"body":{"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"coverage.html":{}}}],["condition.ts:10",{"_index":441,"title":{},"body":{"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{}}}],["condition.ts:16",{"_index":444,"title":{},"body":{"classes/OfKindSiblingCondition.html":{}}}],["conditions",{"_index":140,"title":{},"body":{"classes/ConstraintFileFilter.html":{},"interfaces/FileFilter.html":{}}}],["config",{"_index":94,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"classes/FileFilterFactory.html":{}}}],["config[constraintname",{"_index":115,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["config_constraint_factory",{"_index":142,"title":{},"body":{"classes/ConstraintFileFilter.html":{}}}],["configconstraintfactory",{"_index":81,"title":{"classes/ConfigConstraintFactory.html":{}},"body":{"classes/ConfigConstraintFactory.html":{},"classes/ConstraintFileFilter.html":{},"coverage.html":{}}}],["configelement",{"_index":114,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["configpath",{"_index":280,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["configuration",{"_index":85,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["conjunction",{"_index":43,"title":{},"body":{"classes/AndConstraint.html":{}}}],["connection",{"_index":370,"title":{},"body":{"classes/LineRenderer.html":{}}}],["console.log('\\tgraph",{"_index":254,"title":{},"body":{"classes/Exporter.html":{}}}],["console.log(`found",{"_index":240,"title":{},"body":{"classes/Exporter.html":{}}}],["console.log(`writing",{"_index":246,"title":{},"body":{"classes/Exporter.html":{}}}],["const",{"_index":110,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/FileFilterFactory.html":{},"classes/LineRenderer.html":{}}}],["constraint",{"_index":44,"title":{"classes/Constraint.html":{}},"body":{"classes/AndConstraint.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/EndsWithConstraint.html":{},"classes/NotConstraint.html":{},"classes/OrConstraint.html":{},"classes/StartsWithConstraint.html":{},"coverage.html":{}}}],["constraint.factory",{"_index":151,"title":{},"body":{"classes/ConstraintFileFilter.html":{}}}],["constraint.factory.ts",{"_index":83,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"coverage.html":{}}}],["constraint.factory.ts:16",{"_index":93,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["constraint.factory.ts:20",{"_index":100,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["constraint.factory.ts:33",{"_index":98,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["constraint.inconstraint(value",{"_index":65,"title":{},"body":{"classes/AndConstraint.html":{},"classes/OrConstraint.html":{}}}],["constraint:11",{"_index":161,"title":{},"body":{"classes/ContainsConstraint.html":{},"classes/EndsWithConstraint.html":{},"classes/NotConstraint.html":{},"classes/StartsWithConstraint.html":{}}}],["constraint:15",{"_index":456,"title":{},"body":{"classes/OrConstraint.html":{}}}],["constraint:16",{"_index":58,"title":{},"body":{"classes/AndConstraint.html":{}}}],["constraintfilefilter",{"_index":138,"title":{"classes/ConstraintFileFilter.html":{}},"body":{"classes/ConstraintFileFilter.html":{},"classes/FileFilterFactory.html":{},"coverage.html":{}}}],["constraintfilefilter(json.parse(filecontent",{"_index":294,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["constraintfilefilter.config_constraint_factory.build(filefilterconfig",{"_index":154,"title":{},"body":{"classes/ConstraintFileFilter.html":{}}}],["constraintname",{"_index":96,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["constraintnames",{"_index":111,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["constraints",{"_index":54,"title":{},"body":{"classes/AndConstraint.html":{},"classes/ConfigConstraintFactory.html":{},"classes/OrConstraint.html":{}}}],["constraints.push(this.buildconstraint(constraint",{"_index":113,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["constructor",{"_index":51,"title":{},"body":{"classes/AndConstraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/StartsWithConstraint.html":{}}}],["constructor(...blockkinds",{"_index":448,"title":{},"body":{"classes/OfKindSiblingCondition.html":{}}}],["constructor(...constraints",{"_index":60,"title":{},"body":{"classes/AndConstraint.html":{},"classes/OrConstraint.html":{}}}],["constructor(blockkinds",{"_index":440,"title":{},"body":{"classes/OfKindSiblingCondition.html":{}}}],["constructor(constraint",{"_index":428,"title":{},"body":{"classes/NotConstraint.html":{}}}],["constructor(constraints",{"_index":52,"title":{},"body":{"classes/AndConstraint.html":{},"classes/OrConstraint.html":{}}}],["constructor(contains",{"_index":159,"title":{},"body":{"classes/ContainsConstraint.html":{}}}],["constructor(endswith",{"_index":218,"title":{},"body":{"classes/EndsWithConstraint.html":{}}}],["constructor(externalfilefilterpath",{"_index":261,"title":{},"body":{"classes/ExternalFileFilter.html":{}}}],["constructor(filefilterconfig",{"_index":143,"title":{},"body":{"classes/ConstraintFileFilter.html":{}}}],["constructor(lhsid",{"_index":339,"title":{},"body":{"classes/LineRenderer.html":{}}}],["constructor(outputrootpath",{"_index":227,"title":{},"body":{"classes/Exporter.html":{}}}],["constructor(private",{"_index":152,"title":{},"body":{"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/StartsWithConstraint.html":{}}}],["constructor(sourcefiles",{"_index":171,"title":{},"body":{"classes/Convertor.html":{}}}],["constructor(startswith",{"_index":514,"title":{},"body":{"classes/StartsWithConstraint.html":{}}}],["contains",{"_index":122,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"classes/ContainsConstraint.html":{}}}],["containsconstraint",{"_index":101,"title":{"classes/ContainsConstraint.html":{}},"body":{"classes/ConfigConstraintFactory.html":{},"classes/ContainsConstraint.html":{},"coverage.html":{}}}],["containsconstraint(configelement",{"_index":123,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["content",{"_index":247,"title":{},"body":{"classes/Exporter.html":{}}}],["continue",{"_index":200,"title":{},"body":{"classes/Convertor.html":{}}}],["continue_declaration",{"_index":657,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["continuedeclarationgraphblock",{"_index":574,"title":{},"body":{"coverage.html":{}}}],["controller",{"_index":674,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["convert",{"_index":170,"title":{},"body":{"classes/Convertor.html":{}}}],["converting",{"_index":166,"title":{},"body":{"classes/Convertor.html":{}}}],["convertor",{"_index":163,"title":{"classes/Convertor.html":{}},"body":{"classes/Convertor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["convertor(project.getsourcefiles",{"_index":704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["convertor.convert",{"_index":709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["correct",{"_index":225,"title":{},"body":{"classes/Exporter.html":{}}}],["counter",{"_index":306,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{}}}],["coverage",{"_index":526,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":278,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["create(cwd",{"_index":279,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["creates",{"_index":174,"title":{},"body":{"classes/Convertor.html":{},"classes/LineRenderer.html":{}}}],["cross",{"_index":395,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["crypto",{"_index":521,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{}}}],["cwd",{"_index":282,"title":{},"body":{"classes/FileFilterFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cycle",{"_index":550,"title":{},"body":{"coverage.html":{}}}],["cycle_block_kind",{"_index":538,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cylinder",{"_index":489,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["cylindrical",{"_index":488,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["decides",{"_index":273,"title":{},"body":{"interfaces/FileFilter.html":{}}}],["declaration",{"_index":551,"title":{},"body":{"coverage.html":{}}}],["declaration.graph",{"_index":557,"title":{},"body":{"coverage.html":{}}}],["decorators",{"_index":686,"title":{},"body":{"miscellaneous/functions.html":{}}}],["decoratortype",{"_index":649,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["decoratortype.command_handler",{"_index":723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decoratortype.controller",{"_index":721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decoratortype.event_handler",{"_index":727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decoratortype.injectable",{"_index":720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decoratortype.query_handler",{"_index":725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decoratortypemap",{"_index":619,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["default",{"_index":146,"title":{},"body":{"classes/ConstraintFileFilter.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":21,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"interfaces/BlockIdGenerator.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{},"miscellaneous/functions.html":{}}}],["dependencies",{"_index":629,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["describing",{"_index":73,"title":{},"body":{"interfaces/BlockIdGenerator.html":{}}}],["description",{"_index":11,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"interfaces/BlockIdGenerator.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{},"miscellaneous/functions.html":{}}}],["disjunction",{"_index":454,"title":{},"body":{"classes/OrConstraint.html":{}}}],["documentation",{"_index":527,"title":{},"body":{"coverage.html":{}}}],["dot",{"_index":326,"title":{},"body":{"classes/LineRenderer.html":{}}}],["dotted",{"_index":397,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["each",{"_index":185,"title":{},"body":{"classes/Convertor.html":{}}}],["edges",{"_index":481,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["empty_declaration",{"_index":658,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["emptygraphblock",{"_index":576,"title":{},"body":{"coverage.html":{}}}],["encoding",{"_index":251,"title":{},"body":{"classes/Exporter.html":{},"classes/FileFilterFactory.html":{},"miscellaneous/variables.html":{}}}],["ends",{"_index":217,"title":{},"body":{"classes/EndsWithConstraint.html":{}}}],["endswith",{"_index":126,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"classes/EndsWithConstraint.html":{}}}],["endswithconstraint",{"_index":102,"title":{"classes/EndsWithConstraint.html":{}},"body":{"classes/ConfigConstraintFactory.html":{},"classes/EndsWithConstraint.html":{},"coverage.html":{}}}],["endswithconstraint(configelement",{"_index":127,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["enum",{"_index":391,"title":{},"body":{"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{}}}],["enumerations",{"_index":647,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error('file",{"_index":290,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["error('unsupported",{"_index":297,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["event_handler",{"_index":677,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["eventhandler",{"_index":726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["existing",{"_index":372,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/typealiases.html":{}}}],["exists",{"_index":291,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["exit",{"_index":556,"title":{},"body":{"coverage.html":{}}}],["export",{"_index":36,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"interfaces/BlockIdGenerator.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["export(graphresults",{"_index":233,"title":{},"body":{"classes/Exporter.html":{}}}],["exporter",{"_index":221,"title":{"classes/Exporter.html":{}},"body":{"classes/Exporter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["exporter(options['output",{"_index":706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exporting",{"_index":223,"title":{},"body":{"classes/Exporter.html":{}}}],["exports",{"_index":235,"title":{},"body":{"classes/Exporter.html":{}}}],["expression",{"_index":563,"title":{},"body":{"coverage.html":{}}}],["extends",{"_index":45,"title":{},"body":{"classes/AndConstraint.html":{},"classes/ContainsConstraint.html":{},"classes/EndsWithConstraint.html":{},"classes/NotConstraint.html":{},"classes/OrConstraint.html":{},"classes/StartsWithConstraint.html":{}}}],["external",{"_index":259,"title":{},"body":{"classes/ExternalFileFilter.html":{}}}],["externalfilefilter",{"_index":256,"title":{"classes/ExternalFileFilter.html":{}},"body":{"classes/ExternalFileFilter.html":{},"classes/FileFilterFactory.html":{},"coverage.html":{}}}],["externalfilefilter(absoluteconfigpath",{"_index":296,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["externalfilefilterpath",{"_index":263,"title":{},"body":{"classes/ExternalFileFilter.html":{}}}],["facade",{"_index":678,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":135,"title":{},"body":{"classes/Constraint.html":{},"interfaces/FileFilter.html":{},"classes/LineRenderer.html":{}}}],["figlet",{"_index":640,"title":{},"body":{"dependencies.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"interfaces/BlockIdGenerator.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{}}}],["file.ts",{"_index":614,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["filecontent",{"_index":248,"title":{},"body":{"classes/Exporter.html":{},"classes/FileFilterFactory.html":{}}}],["filefilter",{"_index":13,"title":{"interfaces/FileFilter.html":{}},"body":{"classes/AcceptAllFileFilter.html":{},"classes/ConstraintFileFilter.html":{},"classes/Convertor.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filefilterconfig",{"_index":145,"title":{},"body":{"classes/ConstraintFileFilter.html":{},"miscellaneous/typealiases.html":{}}}],["filefilterconfigkey",{"_index":97,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"miscellaneous/typealiases.html":{}}}],["filefilterconfigtype",{"_index":92,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"classes/ConstraintFileFilter.html":{},"miscellaneous/typealiases.html":{}}}],["filefilterconfigtype[])[0",{"_index":121,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["filefilterfactory",{"_index":276,"title":{"classes/FileFilterFactory.html":{}},"body":{"classes/FileFilterFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filefilterfactory.create(cwd",{"_index":707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["files",{"_index":167,"title":{},"body":{"classes/Convertor.html":{},"interfaces/FileFilter.html":{}}}],["filetype",{"_index":651,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["filetype.controller",{"_index":728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filetype.facade",{"_index":729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filetype.handler",{"_index":731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filetype.service",{"_index":730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filetypemap",{"_index":620,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["filter",{"_index":34,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/ConstraintFileFilter.html":{},"classes/Convertor.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{}}}],["filter.config",{"_index":106,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"classes/ConstraintFileFilter.html":{}}}],["filter.config.ts",{"_index":699,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["filter.factory.ts",{"_index":277,"title":{},"body":{"classes/FileFilterFactory.html":{},"coverage.html":{}}}],["filter.factory.ts:11",{"_index":281,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["filter.ts",{"_index":10,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/ConstraintFileFilter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"coverage.html":{}}}],["filter.ts:10",{"_index":262,"title":{},"body":{"classes/ExternalFileFilter.html":{}}}],["filter.ts:13",{"_index":147,"title":{},"body":{"classes/ConstraintFileFilter.html":{}}}],["filter.ts:14",{"_index":272,"title":{},"body":{"interfaces/FileFilter.html":{}}}],["filter.ts:15",{"_index":144,"title":{},"body":{"classes/ConstraintFileFilter.html":{}}}],["filter.ts:16",{"_index":264,"title":{},"body":{"classes/ExternalFileFilter.html":{}}}],["filter.ts:21",{"_index":149,"title":{},"body":{"classes/ConstraintFileFilter.html":{}}}],["filter.ts:9",{"_index":22,"title":{},"body":{"classes/AcceptAllFileFilter.html":{}}}],["filter/constraint/conditional/and.constraint.ts",{"_index":42,"title":{},"body":{"classes/AndConstraint.html":{},"coverage.html":{}}}],["filter/constraint/conditional/and.constraint.ts:8",{"_index":53,"title":{},"body":{"classes/AndConstraint.html":{}}}],["filter/constraint/conditional/not.constraint.ts",{"_index":426,"title":{},"body":{"classes/NotConstraint.html":{},"coverage.html":{}}}],["filter/constraint/conditional/not.constraint.ts:6",{"_index":429,"title":{},"body":{"classes/NotConstraint.html":{}}}],["filter/constraint/conditional/or.constraint.ts",{"_index":453,"title":{},"body":{"classes/OrConstraint.html":{},"coverage.html":{}}}],["filter/constraint/conditional/or.constraint.ts:7",{"_index":455,"title":{},"body":{"classes/OrConstraint.html":{}}}],["filter/constraint/constraint.ts",{"_index":128,"title":{},"body":{"classes/Constraint.html":{},"coverage.html":{}}}],["filter/constraint/constraint.ts:12",{"_index":131,"title":{},"body":{"classes/Constraint.html":{}}}],["filter/constraint/impl/contains.constraint.ts",{"_index":156,"title":{},"body":{"classes/ContainsConstraint.html":{},"coverage.html":{}}}],["filter/constraint/impl/contains.constraint.ts:6",{"_index":160,"title":{},"body":{"classes/ContainsConstraint.html":{}}}],["filter/constraint/impl/ends",{"_index":215,"title":{},"body":{"classes/EndsWithConstraint.html":{},"coverage.html":{}}}],["filter/constraint/impl/starts",{"_index":512,"title":{},"body":{"classes/StartsWithConstraint.html":{},"coverage.html":{}}}],["filter/file",{"_index":268,"title":{},"body":{"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["filter/impl/accept",{"_index":8,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"coverage.html":{}}}],["filter/impl/builder/config",{"_index":82,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"coverage.html":{}}}],["filter/impl/constraint.file",{"_index":139,"title":{},"body":{"classes/ConstraintFileFilter.html":{},"coverage.html":{}}}],["filter/impl/external.file",{"_index":257,"title":{},"body":{"classes/ExternalFileFilter.html":{},"coverage.html":{}}}],["filtering",{"_index":270,"title":{},"body":{"interfaces/FileFilter.html":{}}}],["for_declaration",{"_index":659,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["for_in_declaration",{"_index":660,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["for_of_declaration",{"_index":661,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fordeclarationgraphblock",{"_index":578,"title":{},"body":{"coverage.html":{}}}],["forindeclarationgraphblock",{"_index":579,"title":{},"body":{"coverage.html":{}}}],["form",{"_index":490,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["forofdeclarationgraphblock",{"_index":580,"title":{},"body":{"coverage.html":{}}}],["forxdeclarationgraphblock",{"_index":581,"title":{},"body":{"coverage.html":{}}}],["fs",{"_index":239,"title":{},"body":{"classes/Exporter.html":{},"classes/FileFilterFactory.html":{}}}],["fs.existssync(absoluteconfigpath",{"_index":288,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["fs.readfilesync(absoluteconfigpath",{"_index":293,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["function",{"_index":520,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functionblocks",{"_index":204,"title":{},"body":{"classes/Convertor.html":{}}}],["functiondeclaration",{"_index":188,"title":{},"body":{"classes/Convertor.html":{}}}],["functions",{"_index":201,"title":{"miscellaneous/functions.html":{}},"body":{"classes/Convertor.html":{},"miscellaneous/functions.html":{}}}],["g",{"_index":524,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{}}}],["generate",{"_index":77,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["generated",{"_index":224,"title":{},"body":{"classes/Exporter.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{},"miscellaneous/functions.html":{}}}],["generates",{"_index":79,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{}}}],["generator",{"_index":76,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["generator.ts",{"_index":72,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{}}}],["generator.ts:10",{"_index":78,"title":{},"body":{"interfaces/BlockIdGenerator.html":{}}}],["generator.ts:13",{"_index":309,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["generator.ts:15",{"_index":310,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{}}}],["generator/block",{"_index":71,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"coverage.html":{}}}],["generator/incremental",{"_index":302,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{},"coverage.html":{}}}],["generator/uuid",{"_index":517,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{},"coverage.html":{}}}],["getisdotted",{"_index":389,"title":{},"body":{"classes/LineRenderer.html":{}}}],["getlhshead",{"_index":385,"title":{},"body":{"classes/LineRenderer.html":{}}}],["getlinepiece",{"_index":383,"title":{},"body":{"classes/LineRenderer.html":{}}}],["getrhshead",{"_index":387,"title":{},"body":{"classes/LineRenderer.html":{}}}],["getting",{"_index":689,"title":{"index.html":{}},"body":{}}],["graph",{"_index":168,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"interfaces/SiblingCondition.html":{},"miscellaneous/functions.html":{}}}],["graph.block.ts",{"_index":552,"title":{},"body":{"coverage.html":{}}}],["graph.render(0",{"_index":249,"title":{},"body":{"classes/Exporter.html":{}}}],["graphblock",{"_index":75,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"interfaces/GraphResult.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"interfaces/SiblingCondition.html":{},"coverage.html":{}}}],["graphparentgraphblock",{"_index":189,"title":{},"body":{"classes/Convertor.html":{},"coverage.html":{}}}],["graphparentgraphblock(this.idgenerator.generate",{"_index":214,"title":{},"body":{"classes/Convertor.html":{}}}],["graphresult",{"_index":186,"title":{"interfaces/GraphResult.html":{}},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"coverage.html":{}}}],["graphresults",{"_index":236,"title":{},"body":{"classes/Exporter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["graphresults.length",{"_index":241,"title":{},"body":{"classes/Exporter.html":{}}}],["graphs",{"_index":197,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{}}}],["graphs.push",{"_index":213,"title":{},"body":{"classes/Convertor.html":{}}}],["handler",{"_index":680,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["head",{"_index":350,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["hexagon",{"_index":495,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["https://mermaid",{"_index":471,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["id",{"_index":70,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{}}}],["identifier",{"_index":528,"title":{},"body":{"coverage.html":{}}}],["idgenerator",{"_index":172,"title":{},"body":{"classes/Convertor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ids",{"_index":181,"title":{},"body":{"classes/Convertor.html":{},"classes/IncrementalBlockIdGenerator.html":{}}}],["if_else_declaration",{"_index":663,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ifelsedeclarationgraphblock",{"_index":587,"title":{},"body":{"coverage.html":{}}}],["impl/accept",{"_index":283,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["impl/constraint.file",{"_index":284,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["impl/external.file",{"_index":285,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["implementation",{"_index":12,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/ConstraintFileFilter.html":{},"classes/ExternalFileFilter.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["implements",{"_index":15,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/ConstraintFileFilter.html":{},"classes/ExternalFileFilter.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["import",{"_index":31,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"classes/ConfigConstraintFactory.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/NotConstraint.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["includefile",{"_index":615,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["includefile(analyzedclass",{"_index":682,"title":{},"body":{"miscellaneous/functions.html":{}}}],["inconstraint",{"_index":50,"title":{},"body":{"classes/AndConstraint.html":{},"classes/Constraint.html":{},"classes/ContainsConstraint.html":{},"classes/EndsWithConstraint.html":{},"classes/NotConstraint.html":{},"classes/OrConstraint.html":{},"classes/StartsWithConstraint.html":{}}}],["inconstraint(value",{"_index":55,"title":{},"body":{"classes/AndConstraint.html":{},"classes/Constraint.html":{},"classes/ContainsConstraint.html":{},"classes/EndsWithConstraint.html":{},"classes/NotConstraint.html":{},"classes/OrConstraint.html":{},"classes/StartsWithConstraint.html":{}}}],["incrementalblockidgenerator",{"_index":301,"title":{"classes/IncrementalBlockIdGenerator.html":{}},"body":{"classes/IncrementalBlockIdGenerator.html":{},"coverage.html":{}}}],["incrementation",{"_index":304,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"interfaces/BlockIdGenerator.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"interfaces/BlockIdGenerator.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["inherited",{"_index":57,"title":{},"body":{"classes/AndConstraint.html":{},"classes/ContainsConstraint.html":{},"classes/EndsWithConstraint.html":{},"classes/NotConstraint.html":{},"classes/OrConstraint.html":{},"classes/StartsWithConstraint.html":{}}}],["initialize",{"_index":229,"title":{},"body":{"classes/Exporter.html":{}}}],["injectable",{"_index":673,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["instance",{"_index":175,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/LineRenderer.html":{}}}],["interface",{"_index":66,"title":{"interfaces/BlockIdGenerator.html":{},"interfaces/FileFilter.html":{},"interfaces/GraphResult.html":{},"interfaces/SiblingCondition.html":{}},"body":{"interfaces/BlockIdGenerator.html":{},"interfaces/FileFilter.html":{},"interfaces/GraphResult.html":{},"interfaces/SiblingCondition.html":{},"coverage.html":{}}}],["interfaces",{"_index":68,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"interfaces/FileFilter.html":{},"interfaces/GraphResult.html":{},"interfaces/SiblingCondition.html":{},"overview.html":{}}}],["internal",{"_index":274,"title":{},"body":{"interfaces/FileFilter.html":{}}}],["isdotted",{"_index":338,"title":{},"body":{"classes/LineRenderer.html":{}}}],["isvalid",{"_index":439,"title":{},"body":{"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"interfaces/SiblingCondition.html":{}}}],["isvalid(_sibling",{"_index":464,"title":{},"body":{"classes/PositiveSiblingCondition.html":{}}}],["isvalid(sibling",{"_index":443,"title":{},"body":{"classes/OfKindSiblingCondition.html":{},"interfaces/SiblingCondition.html":{}}}],["iterates",{"_index":183,"title":{},"body":{"classes/Convertor.html":{}}}],["js.github.io/mermaid/#/flowchart?id=a",{"_index":479,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["js.github.io/mermaid/#/flowchart?id=node",{"_index":472,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["js.github.io/mermaid/#/flowchart?id=parallelogram",{"_index":496,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["js.github.io/mermaid/#/flowchart?id=trapezoid",{"_index":500,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["js/mermaid",{"_index":631,"title":{},"body":{"dependencies.html":{}}}],["json.parse",{"_index":713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kind.sibling",{"_index":433,"title":{},"body":{"classes/OfKindSiblingCondition.html":{},"coverage.html":{}}}],["left",{"_index":343,"title":{},"body":{"classes/LineRenderer.html":{}}}],["length",{"_index":353,"title":{},"body":{"classes/LineRenderer.html":{}}}],["lhshead",{"_index":336,"title":{},"body":{"classes/LineRenderer.html":{}}}],["lhsid",{"_index":342,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line",{"_index":316,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["line_head",{"_index":347,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["line_head.arrow",{"_index":417,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line_head.cross",{"_index":418,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line_head.none",{"_index":348,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line_head.point",{"_index":420,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line_style",{"_index":354,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["line_style.dotted",{"_index":423,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line_style.normal",{"_index":355,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line_width",{"_index":358,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["line_width.normal",{"_index":359,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line_width.thick",{"_index":415,"title":{},"body":{"classes/LineRenderer.html":{}}}],["linear",{"_index":303,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{}}}],["linepiece",{"_index":335,"title":{},"body":{"classes/LineRenderer.html":{}}}],["linerenderer",{"_index":312,"title":{"classes/LineRenderer.html":{}},"body":{"classes/LineRenderer.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["linerenderermodifier",{"_index":425,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/typealiases.html":{}}}],["link",{"_index":35,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["list.graph",{"_index":610,"title":{},"body":{"coverage.html":{}}}],["literal",{"_index":701,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["logic",{"_index":260,"title":{},"body":{"classes/ExternalFileFilter.html":{}}}],["matching",{"_index":40,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"interfaces/BlockIdGenerator.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mermaid",{"_index":630,"title":{},"body":{"dependencies.html":{}}}],["mermaid.js",{"_index":470,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["met",{"_index":463,"title":{},"body":{"classes/PositiveSiblingCondition.html":{}}}],["method",{"_index":74,"title":{},"body":{"interfaces/BlockIdGenerator.html":{}}}],["method_call_declaration",{"_index":664,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["methodcallgraphblock",{"_index":592,"title":{},"body":{"coverage.html":{}}}],["methods",{"_index":17,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"interfaces/BlockIdGenerator.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["miscellaneous",{"_index":646,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mmd",{"_index":245,"title":{},"body":{"classes/Exporter.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["mmd/src/app/block",{"_index":69,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{}}}],["mmd/src/app/block.kind.ts",{"_index":536,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mmd/src/app/conditions/impl/of",{"_index":432,"title":{},"body":{"classes/OfKindSiblingCondition.html":{},"coverage.html":{}}}],["mmd/src/app/conditions/impl/positive.sibling",{"_index":459,"title":{},"body":{"classes/PositiveSiblingCondition.html":{},"coverage.html":{}}}],["mmd/src/app/conditions/sibling.condition.ts",{"_index":504,"title":{},"body":{"interfaces/SiblingCondition.html":{},"coverage.html":{}}}],["mmd/src/app/conditions/sibling.condition.ts:13",{"_index":508,"title":{},"body":{"interfaces/SiblingCondition.html":{}}}],["mmd/src/app/convertor.ts",{"_index":164,"title":{},"body":{"classes/Convertor.html":{},"coverage.html":{}}}],["mmd/src/app/convertor.ts:22",{"_index":173,"title":{},"body":{"classes/Convertor.html":{}}}],["mmd/src/app/convertor.ts:38",{"_index":182,"title":{},"body":{"classes/Convertor.html":{}}}],["mmd/src/app/exporter.ts",{"_index":222,"title":{},"body":{"classes/Exporter.html":{},"coverage.html":{}}}],["mmd/src/app/exporter.ts:10",{"_index":228,"title":{},"body":{"classes/Exporter.html":{}}}],["mmd/src/app/exporter.ts:24",{"_index":234,"title":{},"body":{"classes/Exporter.html":{}}}],["mmd/src/app/file",{"_index":7,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/EndsWithConstraint.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"classes/NotConstraint.html":{},"classes/OrConstraint.html":{},"classes/StartsWithConstraint.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["mmd/src/app/graph",{"_index":298,"title":{},"body":{"interfaces/GraphResult.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mmd/src/index.ts",{"_index":623,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mmdpath",{"_index":242,"title":{},"body":{"classes/Exporter.html":{}}}],["modifier",{"_index":424,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/typealiases.html":{}}}],["modules",{"_index":692,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["morph",{"_index":33,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/ConstraintFileFilter.html":{},"classes/Convertor.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"interfaces/GraphResult.html":{},"dependencies.html":{}}}],["name",{"_index":25,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"miscellaneous/functions.html":{}}}],["named_block_declaration",{"_index":665,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["namedblockdeclarationgraphblock",{"_index":190,"title":{},"body":{"classes/Convertor.html":{},"coverage.html":{}}}],["negation",{"_index":427,"title":{},"body":{"classes/NotConstraint.html":{}}}],["new",{"_index":107,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"classes/ConstraintFileFilter.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/FileFilterFactory.html":{},"classes/LineRenderer.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["node",{"_index":344,"title":{},"body":{"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{}}}],["nodes",{"_index":319,"title":{},"body":{"classes/LineRenderer.html":{}}}],["none",{"_index":392,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["normal",{"_index":396,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["notconstraint",{"_index":103,"title":{"classes/NotConstraint.html":{}},"body":{"classes/ConfigConstraintFactory.html":{},"classes/NotConstraint.html":{},"coverage.html":{}}}],["notconstraint(this.recursivebuild(...configelement",{"_index":120,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["number",{"_index":307,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{}}}],["o",{"_index":421,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["object.keys(constraint",{"_index":112,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["ofkindsiblingcondition",{"_index":431,"title":{"classes/OfKindSiblingCondition.html":{}},"body":{"classes/OfKindSiblingCondition.html":{},"coverage.html":{}}}],["one",{"_index":300,"title":{},"body":{"interfaces/GraphResult.html":{},"classes/LineRenderer.html":{}}}],["optional",{"_index":27,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":365,"title":{},"body":{"classes/LineRenderer.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["options['filefilter",{"_index":708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["orconstraint",{"_index":104,"title":{"classes/OrConstraint.html":{}},"body":{"classes/ConfigConstraintFactory.html":{},"classes/OrConstraint.html":{},"coverage.html":{}}}],["orconstraint(...this.recursivebuild(...configelement",{"_index":119,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["otherwise",{"_index":136,"title":{},"body":{"classes/Constraint.html":{},"interfaces/FileFilter.html":{},"classes/LineRenderer.html":{}}}],["output",{"_index":226,"title":{},"body":{"classes/Exporter.html":{}}}],["outputrootpath",{"_index":230,"title":{},"body":{"classes/Exporter.html":{}}}],["override",{"_index":63,"title":{},"body":{"classes/AndConstraint.html":{},"classes/ContainsConstraint.html":{},"classes/EndsWithConstraint.html":{},"classes/NotConstraint.html":{},"classes/OrConstraint.html":{},"classes/StartsWithConstraint.html":{}}}],["overview",{"_index":693,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":522,"title":{"dependencies.html":{}},"body":{"classes/UuidBlockIdGenerator.html":{}}}],["package.json",{"_index":715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../block.kind.ts",{"_index":648,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["packages/.../file",{"_index":698,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../include",{"_index":650,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["packages/.../index.ts",{"_index":703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../line",{"_index":652,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["packages/.../shape",{"_index":653,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["packages/ast",{"_index":6,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"interfaces/BlockIdGenerator.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["parallel_block_declaration",{"_index":666,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["parallelblock",{"_index":211,"title":{},"body":{"classes/Convertor.html":{}}}],["parallelblockdeclarationgraphblock",{"_index":191,"title":{},"body":{"classes/Convertor.html":{},"coverage.html":{}}}],["parallelblockdeclarationgraphblock(this.idgenerator.generate",{"_index":212,"title":{},"body":{"classes/Convertor.html":{}}}],["paralleogram",{"_index":497,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["paralleogram_alt",{"_index":499,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["param",{"_index":137,"title":{},"body":{"classes/Constraint.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/FileFilter.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{}}}],["parameters",{"_index":23,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"miscellaneous/functions.html":{}}}],["parent.graph",{"_index":585,"title":{},"body":{"coverage.html":{}}}],["parent_declaration",{"_index":662,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["parentclassesblock",{"_index":210,"title":{},"body":{"classes/Convertor.html":{}}}],["parentfunctionsblock",{"_index":208,"title":{},"body":{"classes/Convertor.html":{}}}],["parser",{"_index":193,"title":{},"body":{"classes/Convertor.html":{}}}],["parser/include",{"_index":613,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["parser/parser.ts",{"_index":621,"title":{},"body":{"coverage.html":{}}}],["path",{"_index":231,"title":{},"body":{"classes/Exporter.html":{},"classes/FileFilterFactory.html":{},"dependencies.html":{}}}],["path.join(cwd",{"_index":287,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["path.resolve(sourcefile.getdirectorypath",{"_index":243,"title":{},"body":{"classes/Exporter.html":{}}}],["point",{"_index":394,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["positive",{"_index":460,"title":{},"body":{"classes/PositiveSiblingCondition.html":{}}}],["positivesiblingcondition",{"_index":458,"title":{"classes/PositiveSiblingCondition.html":{}},"body":{"classes/PositiveSiblingCondition.html":{},"coverage.html":{}}}],["private",{"_index":47,"title":{},"body":{"classes/AndConstraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/Convertor.html":{},"classes/ExternalFileFilter.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/ShapeRenderer.html":{}}}],["process",{"_index":178,"title":{},"body":{"classes/Convertor.html":{}}}],["process.cwd",{"_index":705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["processed",{"_index":179,"title":{},"body":{"classes/Convertor.html":{}}}],["program.opts",{"_index":710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":624,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["project(tsmorphoptions",{"_index":711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projectoptions",{"_index":712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properties",{"_index":46,"title":{},"body":{"classes/AndConstraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/Convertor.html":{},"classes/ExternalFileFilter.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/ShapeRenderer.html":{}}}],["protected",{"_index":88,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"classes/LineRenderer.html":{}}}],["public",{"_index":18,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"classes/FileFilterFactory.html":{},"classes/NotConstraint.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/StartsWithConstraint.html":{}}}],["query_handler",{"_index":676,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["queryhandler",{"_index":724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["randomuuid",{"_index":519,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{}}}],["randomuuid().replace",{"_index":523,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{}}}],["readfilesync(path.resolve(__dirname",{"_index":714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["readonly",{"_index":48,"title":{},"body":{"classes/AndConstraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/ShapeRenderer.html":{},"classes/StartsWithConstraint.html":{}}}],["record",{"_index":719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["recursivebuild",{"_index":90,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["recursivebuild(...config",{"_index":109,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["recursivebuild(config",{"_index":99,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["recursivepartial",{"_index":700,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["render",{"_index":327,"title":{},"body":{"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{}}}],["render(text",{"_index":476,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["rendered",{"_index":255,"title":{},"body":{"classes/Exporter.html":{}}}],["renderer",{"_index":315,"title":{},"body":{"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{}}}],["renderer.ts",{"_index":314,"title":{},"body":{"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["renderer.ts:106",{"_index":382,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:116",{"_index":378,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:126",{"_index":380,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:136",{"_index":376,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:144",{"_index":364,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:173",{"_index":384,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:179",{"_index":386,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:192",{"_index":388,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:205",{"_index":363,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:209",{"_index":390,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:45",{"_index":346,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:49",{"_index":349,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:53",{"_index":362,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:57",{"_index":356,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:61",{"_index":360,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:63",{"_index":475,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["renderer.ts:65",{"_index":341,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:71",{"_index":478,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["renderer.ts:81",{"_index":368,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:96",{"_index":374,"title":{},"body":{"classes/LineRenderer.html":{}}}],["repeat",{"_index":414,"title":{},"body":{"classes/LineRenderer.html":{}}}],["repeat(repeat",{"_index":416,"title":{},"body":{"classes/LineRenderer.html":{}}}],["repeat(this._linelength",{"_index":422,"title":{},"body":{"classes/LineRenderer.html":{}}}],["representing",{"_index":84,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"interfaces/GraphResult.html":{},"interfaces/SiblingCondition.html":{}}}],["represents",{"_index":269,"title":{},"body":{"interfaces/FileFilter.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{}}}],["require(externalfilefilterpath",{"_index":266,"title":{},"body":{"classes/ExternalFileFilter.html":{}}}],["resolvedecoratortype",{"_index":617,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["resolvedecoratortype(decorators",{"_index":685,"title":{},"body":{"miscellaneous/functions.html":{}}}],["resolvefiletype",{"_index":618,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["resolvefiletype(analyzedclass",{"_index":688,"title":{},"body":{"miscellaneous/functions.html":{}}}],["resolving",{"_index":505,"title":{},"body":{"interfaces/SiblingCondition.html":{}}}],["responsible",{"_index":165,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{}}}],["result",{"_index":194,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"classes/LineRenderer.html":{}}}],["result.ts",{"_index":299,"title":{},"body":{"interfaces/GraphResult.html":{},"coverage.html":{}}}],["results",{"_index":39,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"interfaces/BlockIdGenerator.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":37,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"classes/ConfigConstraintFactory.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/ExternalFileFilter.html":{},"classes/FileFilterFactory.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["return_declaration",{"_index":667,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["returndeclarationgraphblock",{"_index":599,"title":{},"body":{"coverage.html":{}}}],["returns",{"_index":29,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"interfaces/BlockIdGenerator.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{},"miscellaneous/functions.html":{}}}],["rhombus",{"_index":494,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["rhshead",{"_index":337,"title":{},"body":{"classes/LineRenderer.html":{}}}],["rhsid",{"_index":340,"title":{},"body":{"classes/LineRenderer.html":{}}}],["right",{"_index":345,"title":{},"body":{"classes/LineRenderer.html":{}}}],["root",{"_index":232,"title":{},"body":{"classes/Exporter.html":{}}}],["round",{"_index":480,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["round_edges",{"_index":482,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["service",{"_index":679,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["set",{"_index":369,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setconnectiondescription",{"_index":328,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setconnectiondescription(value",{"_index":366,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlhshead",{"_index":329,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlhshead(value",{"_index":373,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlinelength",{"_index":330,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlinelength(value",{"_index":375,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlinestyle",{"_index":331,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlinestyle(value",{"_index":377,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlinewidth",{"_index":332,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlinewidth(value",{"_index":379,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setrhshead",{"_index":333,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setrhshead(value",{"_index":381,"title":{},"body":{"classes/LineRenderer.html":{}}}],["shape",{"_index":477,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["shape.valueof().replace(shaperenderer.text_placeholder",{"_index":503,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["shaped",{"_index":485,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["shaperenderer",{"_index":466,"title":{"classes/ShapeRenderer.html":{}},"body":{"classes/ShapeRenderer.html":{},"coverage.html":{}}}],["shapes",{"_index":469,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["shared",{"_index":305,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{}}}],["sharp_edges",{"_index":483,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["sibling",{"_index":445,"title":{},"body":{"classes/OfKindSiblingCondition.html":{},"interfaces/SiblingCondition.html":{}}}],["sibling.blockkind);//sibling.blockkind",{"_index":451,"title":{},"body":{"classes/OfKindSiblingCondition.html":{}}}],["sibling.condition",{"_index":447,"title":{},"body":{"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{}}}],["siblingcondition",{"_index":435,"title":{"interfaces/SiblingCondition.html":{}},"body":{"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"interfaces/SiblingCondition.html":{},"coverage.html":{}}}],["siblings",{"_index":506,"title":{},"body":{"interfaces/SiblingCondition.html":{}}}],["side",{"_index":351,"title":{},"body":{"classes/LineRenderer.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"interfaces/BlockIdGenerator.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["sourcefile",{"_index":20,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/ConstraintFileFilter.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"interfaces/GraphResult.html":{}}}],["sourcefile.getbasenamewithoutextension",{"_index":244,"title":{},"body":{"classes/Exporter.html":{}}}],["sourcefile.getclasses",{"_index":203,"title":{},"body":{"classes/Convertor.html":{}}}],["sourcefile.getfunctions",{"_index":202,"title":{},"body":{"classes/Convertor.html":{}}}],["sourcefiles",{"_index":176,"title":{},"body":{"classes/Convertor.html":{}}}],["specific",{"_index":158,"title":{},"body":{"classes/ContainsConstraint.html":{},"classes/EndsWithConstraint.html":{},"classes/StartsWithConstraint.html":{}}}],["stadium",{"_index":484,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["stadium_shaped",{"_index":486,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["start",{"_index":513,"title":{},"body":{"classes/StartsWithConstraint.html":{}}}],["started",{"_index":690,"title":{"index.html":{}},"body":{}}],["startswith",{"_index":124,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"classes/StartsWithConstraint.html":{}}}],["startswithconstraint",{"_index":105,"title":{"classes/StartsWithConstraint.html":{}},"body":{"classes/ConfigConstraintFactory.html":{},"classes/StartsWithConstraint.html":{},"coverage.html":{}}}],["startswithconstraint(configelement",{"_index":125,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["statements",{"_index":529,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":141,"title":{},"body":{"classes/ConstraintFileFilter.html":{},"classes/ShapeRenderer.html":{}}}],["string",{"_index":56,"title":{},"body":{"classes/AndConstraint.html":{},"interfaces/BlockIdGenerator.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ContainsConstraint.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"classes/FileFilterFactory.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/OrConstraint.html":{},"classes/ShapeRenderer.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["style",{"_index":357,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["subroutine",{"_index":487,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["super",{"_index":61,"title":{},"body":{"classes/AndConstraint.html":{},"classes/ContainsConstraint.html":{},"classes/EndsWithConstraint.html":{},"classes/NotConstraint.html":{},"classes/OrConstraint.html":{},"classes/StartsWithConstraint.html":{}}}],["supported",{"_index":468,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["switch",{"_index":116,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"classes/LineRenderer.html":{}}}],["table",{"_index":628,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":627,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":132,"title":{},"body":{"classes/Constraint.html":{}}}],["tested",{"_index":134,"title":{},"body":{"classes/Constraint.html":{},"classes/ContainsConstraint.html":{},"interfaces/SiblingCondition.html":{}}}],["text",{"_index":474,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["text_declaration",{"_index":668,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["text_placeholder",{"_index":473,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["textgraphblock",{"_index":601,"title":{},"body":{"coverage.html":{}}}],["thick",{"_index":398,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["this._blockkinds",{"_index":449,"title":{},"body":{"classes/OfKindSiblingCondition.html":{}}}],["this._blockkinds.some((block",{"_index":450,"title":{},"body":{"classes/OfKindSiblingCondition.html":{}}}],["this._connectiondescription",{"_index":399,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this._connectiondescription}${value",{"_index":400,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this._constraints",{"_index":62,"title":{},"body":{"classes/AndConstraint.html":{},"classes/OrConstraint.html":{}}}],["this._constraints.every((constraint",{"_index":64,"title":{},"body":{"classes/AndConstraint.html":{}}}],["this._constraints.some((constraint",{"_index":457,"title":{},"body":{"classes/OrConstraint.html":{}}}],["this._lhshead",{"_index":401,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this._linelength",{"_index":405,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this._linestyle",{"_index":403,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this._linewidth",{"_index":404,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this._rhshead",{"_index":402,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.blockkind",{"_index":452,"title":{},"body":{"classes/OfKindSiblingCondition.html":{}}}],["this.codeparser",{"_index":195,"title":{},"body":{"classes/Convertor.html":{}}}],["this.codeparser.processclasses(classes",{"_index":207,"title":{},"body":{"classes/Convertor.html":{}}}],["this.codeparser.processfunctions(functions",{"_index":205,"title":{},"body":{"classes/Convertor.html":{}}}],["this.constraint",{"_index":153,"title":{},"body":{"classes/ConstraintFileFilter.html":{}}}],["this.constraint.inconstraint(file.getfilepath",{"_index":155,"title":{},"body":{"classes/ConstraintFileFilter.html":{}}}],["this.constraint.inconstraint(value",{"_index":430,"title":{},"body":{"classes/NotConstraint.html":{}}}],["this.counter",{"_index":311,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{}}}],["this.dot",{"_index":410,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.externalfilefilter",{"_index":265,"title":{},"body":{"classes/ExternalFileFilter.html":{}}}],["this.externalfilefilter.accept(file",{"_index":267,"title":{},"body":{"classes/ExternalFileFilter.html":{}}}],["this.filefilter.accept(sourcefile",{"_index":199,"title":{},"body":{"classes/Convertor.html":{}}}],["this.idgenerator.generate",{"_index":209,"title":{},"body":{"classes/Convertor.html":{}}}],["this.isdotted",{"_index":409,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.lhshead",{"_index":407,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.lhsid",{"_index":406,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.linepiece",{"_index":408,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.rhshead",{"_index":412,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.rhsid",{"_index":413,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.sourcefiles",{"_index":198,"title":{},"body":{"classes/Convertor.html":{}}}],["through",{"_index":184,"title":{},"body":{"classes/Convertor.html":{}}}],["throw",{"_index":289,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["throw_declaration",{"_index":669,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["throwdeclarationgraphblock",{"_index":603,"title":{},"body":{"coverage.html":{}}}],["tmplinelength",{"_index":411,"title":{},"body":{"classes/LineRenderer.html":{}}}],["trapezoid",{"_index":501,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["trapezoid_alt",{"_index":502,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["true",{"_index":38,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/Constraint.html":{},"interfaces/FileFilter.html":{},"classes/LineRenderer.html":{},"classes/PositiveSiblingCondition.html":{}}}],["try_catch_declaration",{"_index":670,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["trycatchdeclarationgraphblock",{"_index":606,"title":{},"body":{"coverage.html":{}}}],["ts",{"_index":32,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/ConstraintFileFilter.html":{},"classes/Convertor.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"interfaces/GraphResult.html":{},"dependencies.html":{}}}],["tslib",{"_index":644,"title":{},"body":{"dependencies.html":{}}}],["tsmorphoptions",{"_index":625,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["two",{"_index":318,"title":{},"body":{"classes/LineRenderer.html":{}}}],["type",{"_index":26,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":696,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["undefined",{"_index":687,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unique",{"_index":80,"title":{},"body":{"interfaces/BlockIdGenerator.html":{}}}],["unwanted",{"_index":271,"title":{},"body":{"interfaces/FileFilter.html":{}}}],["used",{"_index":509,"title":{},"body":{"interfaces/SiblingCondition.html":{}}}],["utf",{"_index":252,"title":{},"body":{"classes/Exporter.html":{},"classes/FileFilterFactory.html":{},"miscellaneous/variables.html":{}}}],["uuidblockidgenerator",{"_index":516,"title":{"classes/UuidBlockIdGenerator.html":{}},"body":{"classes/UuidBlockIdGenerator.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["valid",{"_index":511,"title":{},"body":{"interfaces/SiblingCondition.html":{}}}],["value",{"_index":59,"title":{},"body":{"classes/AndConstraint.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/EndsWithConstraint.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/OrConstraint.html":{},"classes/ShapeRenderer.html":{},"classes/StartsWithConstraint.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.endswith(this.endswith",{"_index":220,"title":{},"body":{"classes/EndsWithConstraint.html":{}}}],["value.includes(this.contains",{"_index":162,"title":{},"body":{"classes/ContainsConstraint.html":{}}}],["value.startswith(this.startswith",{"_index":515,"title":{},"body":{"classes/StartsWithConstraint.html":{}}}],["variable",{"_index":537,"title":{},"body":{"coverage.html":{}}}],["variable_declaration",{"_index":671,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["variable_list_declaration",{"_index":672,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["variabledeclarationgraphblock",{"_index":612,"title":{},"body":{"coverage.html":{}}}],["variabledeclarationlistgraphblock",{"_index":611,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":702,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":626,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":237,"title":{},"body":{"classes/Exporter.html":{}}}],["whether",{"_index":133,"title":{},"body":{"classes/Constraint.html":{},"classes/ContainsConstraint.html":{},"classes/EndsWithConstraint.html":{},"interfaces/FileFilter.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"miscellaneous/functions.html":{}}}],["width",{"_index":361,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["with.constraint.ts",{"_index":216,"title":{},"body":{"classes/EndsWithConstraint.html":{},"classes/StartsWithConstraint.html":{},"coverage.html":{}}}],["with.constraint.ts:6",{"_index":219,"title":{},"body":{"classes/EndsWithConstraint.html":{},"classes/StartsWithConstraint.html":{}}}],["writefilesync",{"_index":238,"title":{},"body":{"classes/Exporter.html":{}}}],["writefilesync(mmdpath",{"_index":250,"title":{},"body":{"classes/Exporter.html":{}}}],["x",{"_index":419,"title":{},"body":{"classes/LineRenderer.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AcceptAllFileFilter.html":{"url":"classes/AcceptAllFileFilter.html","title":"class - AcceptAllFileFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcceptAllFileFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/file-filter/impl/accept-all.file-filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Implementation of FileFilter which accept every file.\n\n            \n\n\n            \n                Implements\n            \n            \n                            FileFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                accept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        accept\n                        \n                    \n                \n            \n            \n                \n                    \n                    accept(_file: SourceFile)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/file-filter/impl/accept-all.file-filter.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _file\n                                    \n                                            SourceFile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SourceFile } from 'ts-morph';\n\nimport { FileFilter } from '../file-filter';\n\n/**\n * Implementation of {@link FileFilter} which accept every file.\n */\nexport class AcceptAllFileFilter implements FileFilter {\n  public accept(_file: SourceFile): boolean {\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AndConstraint.html":{"url":"classes/AndConstraint.html","title":"class - AndConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AndConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/file-filter/constraint/conditional/and.constraint.ts\n        \n\n\n            \n                Description\n            \n            \n                Conjunction Constraint.\n\n            \n\n            \n                Extends\n            \n            \n                        Constraint\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _constraints\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    \n                                inConstraint\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(constraints: Constraint[])\n                    \n                \n                        \n                            \n                                Defined in packages/ast-to-mmd/src/app/file-filter/constraint/conditional/and.constraint.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        constraints\n                                                  \n                                                        \n                                                                        Constraint[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _constraints\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Constraint[]\n\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/file-filter/constraint/conditional/and.constraint.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                        inConstraint\n                        \n                    \n                \n            \n            \n                \n                    \n                    inConstraint(value: string)\n                \n            \n\n\n            \n                \n                    Inherited from         Constraint\n\n                \n            \n            \n                \n                        Defined in         Constraint:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Constraint } from '../constraint';\n\n/**\n * Conjunction {@link Constraint}.\n */\nexport class AndConstraint extends Constraint {\n\n  private readonly _constraints: Constraint[];\n\n  constructor(...constraints: Constraint[]) {\n    super();\n\n    this._constraints = constraints;\n  }\n\n  public override inConstraint(value: string): boolean {\n    return this._constraints.every((constraint: Constraint) => constraint.inConstraint(value));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BlockIdGenerator.html":{"url":"interfaces/BlockIdGenerator.html","title":"interface - BlockIdGenerator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BlockIdGenerator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/block-id-generator/block-id-generator.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface describing method for GraphBlock ID generator\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        generate\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generate\n                        \n                    \n                \n            \n            \n                \ngenerate()\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/block-id-generator/block-id-generator.ts:10\n                \n            \n\n\n            \n                \n                    Generates ID.\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Unique ID.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface BlockIdGenerator {\n  /**\n   * Generates ID.\n   *\n   * @returns {string} Unique ID.\n   */\n  generate(): string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigConstraintFactory.html":{"url":"classes/ConfigConstraintFactory.html","title":"class - ConfigConstraintFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigConstraintFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/file-filter/impl/builder/config-constraint.factory.ts\n        \n\n\n            \n                Description\n            \n            \n                Class representing configuration constraint builder.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                build\n                            \n                            \n                                    Protected\n                                buildConstraint\n                            \n                            \n                                    Protected\n                                recursiveBuild\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        build\n                        \n                    \n                \n            \n            \n                \n                    \n                    build(config: FileFilterConfigType)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/file-filter/impl/builder/config-constraint.factory.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                FileFilterConfigType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Constraint\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        buildConstraint\n                        \n                    \n                \n            \n            \n                \n                    \n                    buildConstraint(config: FileFilterConfigType, constraintName: FileFilterConfigKey)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/file-filter/impl/builder/config-constraint.factory.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                FileFilterConfigType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    constraintName\n                                    \n                                                FileFilterConfigKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Constraint\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        recursiveBuild\n                        \n                    \n                \n            \n            \n                \n                    \n                    recursiveBuild(config: FileFilterConfigType[])\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/file-filter/impl/builder/config-constraint.factory.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                FileFilterConfigType[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Constraint[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  AndConstraint,\n  Constraint,\n  ContainsConstraint,\n  EndsWithConstraint,\n  NotConstraint,\n  OrConstraint, StartsWithConstraint\n} from '../../constraint';\nimport { FileFilterConfigKey, FileFilterConfigType } from '../../file-filter.config';\n\n/**\n * Class representing configuration constraint builder.\n */\nexport class ConfigConstraintFactory {\n\n  public build(config: FileFilterConfigType): Constraint {\n    return new AndConstraint(...this.recursiveBuild(config));\n  }\n\n  protected recursiveBuild(...config: FileFilterConfigType[]): Constraint[] {\n    const constraints: Constraint[] = [];\n\n    for (const constraint of config) {\n      const constraintNames = Object.keys(constraint);\n      for (const constraintName of constraintNames) {\n        constraints.push(this.buildConstraint(constraint, constraintName as FileFilterConfigKey));\n      }\n    }\n\n    return constraints;\n  }\n\n  protected buildConstraint(config: FileFilterConfigType, constraintName: FileFilterConfigKey): Constraint {\n    const configElement = config[constraintName];\n    switch (constraintName) {\n      case 'and':\n        return new AndConstraint(...this.recursiveBuild(...configElement as FileFilterConfigType[]));\n      case 'or':\n        return new OrConstraint(...this.recursiveBuild(...configElement as FileFilterConfigType[]));\n      case 'not':\n        return new NotConstraint(this.recursiveBuild(...configElement as FileFilterConfigType[])[0]);\n      case 'contains':\n        return new ContainsConstraint(configElement as string);\n      case 'startsWith':\n        return new StartsWithConstraint(configElement as string);\n      case 'endsWith':\n        return new EndsWithConstraint(configElement as string);\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Constraint.html":{"url":"classes/Constraint.html","title":"class - Constraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Constraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/file-filter/constraint/constraint.ts\n        \n\n\n            \n                Description\n            \n            \n                Base class representing constraint.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                inConstraint\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        inConstraint\n                        \n                    \n                \n            \n            \n                \n                    \n                    inConstraint(value: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/file-filter/constraint/constraint.ts:12\n                \n            \n\n\n            \n                \n                    Test whether the value is in Constraint.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Tested value.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        True, when the value is in {@link Constraint}, False otherwise.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export abstract class Constraint {\n\n  /**\n   * Test whether the value is in {@link Constraint}.\n   *\n   * @param value {string} Tested value.\n   * @returns True, when the value is in {@link Constraint}, False otherwise.\n   */\n  public abstract inConstraint(value: string): boolean;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConstraintFileFilter.html":{"url":"classes/ConstraintFileFilter.html","title":"class - ConstraintFileFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConstraintFileFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/file-filter/impl/constraint.file-filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Implementation of FileFilter where conditions are defined constraint.\n\n            \n\n\n            \n                Implements\n            \n            \n                            FileFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                CONFIG_CONSTRAINT_FACTORY\n                            \n                            \n                                    Private\n                                    Readonly\n                                constraint\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                accept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fileFilterConfig: FileFilterConfigType)\n                    \n                \n                        \n                            \n                                Defined in packages/ast-to-mmd/src/app/file-filter/impl/constraint.file-filter.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileFilterConfig\n                                                  \n                                                        \n                                                                        FileFilterConfigType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        CONFIG_CONSTRAINT_FACTORY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigConstraintFactory\n\n                    \n                \n                \n                    \n                        Default value : new ConfigConstraintFactory()\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/file-filter/impl/constraint.file-filter.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        constraint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Constraint\n\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/file-filter/impl/constraint.file-filter.ts:15\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        accept\n                        \n                    \n                \n            \n            \n                \n                    \n                    accept(file: SourceFile)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/file-filter/impl/constraint.file-filter.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            SourceFile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SourceFile } from 'ts-morph';\n\nimport { Constraint } from '../constraint';\nimport { FileFilter } from '../file-filter';\nimport { FileFilterConfigType } from '../file-filter.config';\nimport { ConfigConstraintFactory } from './builder/config-constraint.factory';\n\n/**\n * Implementation of {@link FileFilter} where conditions are defined constraint.\n */\nexport class ConstraintFileFilter implements FileFilter {\n\n  private static readonly CONFIG_CONSTRAINT_FACTORY: ConfigConstraintFactory = new ConfigConstraintFactory();\n\n  private readonly constraint: Constraint;\n\n  constructor(private readonly fileFilterConfig: FileFilterConfigType) {\n    this.constraint = ConstraintFileFilter.CONFIG_CONSTRAINT_FACTORY.build(fileFilterConfig);\n  }\n\n  public accept(file: SourceFile): boolean {\n    return this.constraint.inConstraint(file.getFilePath());\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContainsConstraint.html":{"url":"classes/ContainsConstraint.html","title":"class - ContainsConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContainsConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/file-filter/constraint/impl/contains.constraint.ts\n        \n\n\n            \n                Description\n            \n            \n                Constraint which check whether the tested value contains specific value.\n\n            \n\n            \n                Extends\n            \n            \n                        Constraint\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    \n                                inConstraint\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(contains: string)\n                    \n                \n                        \n                            \n                                Defined in packages/ast-to-mmd/src/app/file-filter/constraint/impl/contains.constraint.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        contains\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                        inConstraint\n                        \n                    \n                \n            \n            \n                \n                    \n                    inConstraint(value: string)\n                \n            \n\n\n            \n                \n                    Inherited from         Constraint\n\n                \n            \n            \n                \n                        Defined in         Constraint:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Constraint } from '../constraint';\n\n/**\n * {@link Constraint} which check whether the tested value contains specific value.\n */\nexport class ContainsConstraint extends Constraint {\n  constructor(private readonly contains: string) {\n    super();\n  }\n\n  public override inConstraint(value: string): boolean {\n    return value.includes(this.contains);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Convertor.html":{"url":"classes/Convertor.html","title":"class - Convertor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Convertor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/convertor.ts\n        \n\n\n            \n                Description\n            \n            \n                Class responsible for converting defined source files to graph.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                codeParser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                convert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sourceFiles: SourceFile[], fileFilter: FileFilter, idGenerator: BlockIdGenerator)\n                    \n                \n                        \n                            \n                                Defined in packages/ast-to-mmd/src/app/convertor.ts:22\n                            \n                        \n\n                \n                    \n                            Creates new instance of Convertor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sourceFiles\n                                                  \n                                                        \n                                                                    SourceFile[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                []SourceFile Array of source files to process.\n\n                                                        \n                                                \n                                                \n                                                        fileFilter\n                                                  \n                                                        \n                                                                        FileFilter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FileFilter Filter of processed files.\n\n                                                        \n                                                \n                                                \n                                                        idGenerator\n                                                  \n                                                        \n                                                                        BlockIdGenerator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                BlockIdGenerator Generator of block IDs.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        codeParser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CodeParser\n\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/convertor.ts:22\n                        \n                    \n\n            \n                \n                    Instance of CodeParser\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        convert\n                        \n                    \n                \n            \n            \n                \n                    \n                    convert()\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/convertor.ts:38\n                \n            \n\n\n            \n                \n                    Iterates through source files and generates graph for each file.\n\n\n                    \n                        Returns :         GraphResult[]\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ClassDeclaration, FunctionDeclaration, SourceFile } from 'ts-morph';\n\nimport { BlockIdGenerator } from './block-id-generator';\nimport { FileFilter } from './file-filter';\nimport {\n  GraphBlock,\n  GraphParentGraphBlock,\n  NamedBlockDeclarationGraphBlock,\n  ParallelBlockDeclarationGraphBlock,\n} from './graph-blocks';\nimport { CodeParser } from './graph-parser';\nimport { GraphResult } from './graph-result';\n\n/**\n * Class responsible for converting defined source files to graph.\n */\nexport class Convertor {\n\n  /**\n   * Instance of {@link CodeParser}\n   */\n  private readonly codeParser: CodeParser;\n\n  /**\n   * Creates new instance of {@link Convertor}.\n   *\n   * @param sourceFiles {@link SourceFile[]} Array of source files to process.\n   * @param fileFilter {@link FileFilter} Filter of processed files.\n   * @param idGenerator {@link BlockIdGenerator} Generator of block IDs.\n   */\n  constructor(private readonly sourceFiles: SourceFile[], private readonly fileFilter: FileFilter, private readonly idGenerator: BlockIdGenerator) {\n    this.codeParser = new CodeParser(idGenerator);\n  }\n\n  /**\n   * Iterates through source files and generates graph for each file.\n   */\n  public convert(): GraphResult[] {\n    const graphs: GraphResult[] = [];\n    for (const sourceFile of this.sourceFiles) {\n      if (!this.fileFilter.accept(sourceFile)) {\n        continue;\n      }\n\n      const functions: FunctionDeclaration[] = sourceFile.getFunctions();\n      const classes: ClassDeclaration[] = sourceFile.getClasses();\n\n      const functionBlocks: GraphBlock = this.codeParser.processFunctions(functions);\n      const classBlocks: GraphBlock = this.codeParser.processClasses(classes);\n\n      const parentFunctionsBlock: GraphBlock = new NamedBlockDeclarationGraphBlock(\n        this.idGenerator.generate(),\n        [functionBlocks],\n        'Functions'\n      );\n      const parentClassesBlock: GraphBlock = new NamedBlockDeclarationGraphBlock(\n        this.idGenerator.generate(),\n        [classBlocks],\n        'Classes'\n      );\n      const parallelBlock: GraphBlock = new ParallelBlockDeclarationGraphBlock(this.idGenerator.generate(), [\n        parentFunctionsBlock,\n        parentClassesBlock,\n      ]);\n\n      graphs.push({\n        sourceFile,\n        graph: new GraphParentGraphBlock(this.idGenerator.generate(), parallelBlock),\n      });\n    }\n\n    return graphs;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EndsWithConstraint.html":{"url":"classes/EndsWithConstraint.html","title":"class - EndsWithConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EndsWithConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/file-filter/constraint/impl/ends-with.constraint.ts\n        \n\n\n            \n                Description\n            \n            \n                Constraint which check whether the value ends with specific value.\n\n            \n\n            \n                Extends\n            \n            \n                        Constraint\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    \n                                inConstraint\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(endsWith: string)\n                    \n                \n                        \n                            \n                                Defined in packages/ast-to-mmd/src/app/file-filter/constraint/impl/ends-with.constraint.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        endsWith\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                        inConstraint\n                        \n                    \n                \n            \n            \n                \n                    \n                    inConstraint(value: string)\n                \n            \n\n\n            \n                \n                    Inherited from         Constraint\n\n                \n            \n            \n                \n                        Defined in         Constraint:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Constraint } from '../constraint';\n\n/**\n * {@link Constraint} which check whether the value ends with specific value.\n */\nexport class EndsWithConstraint extends Constraint {\n  constructor(private readonly endsWith: string) {\n    super();\n  }\n\n  public override inConstraint(value: string): boolean {\n    return value.endsWith(this.endsWith);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Exporter.html":{"url":"classes/Exporter.html","title":"class - Exporter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Exporter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/exporter.ts\n        \n\n\n            \n                Description\n            \n            \n                Class responsible for exporting generated graph to correct output.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                export\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(outputRootPath: string)\n                    \n                \n                        \n                            \n                                Defined in packages/ast-to-mmd/src/app/exporter.ts:10\n                            \n                        \n\n                \n                    \n                            Initialize new instance of Exporter.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        outputRootPath\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Path to root of output path.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        export\n                        \n                    \n                \n            \n            \n                \n                    \n                    export(graphResults: GraphResult[])\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/exporter.ts:24\n                \n            \n\n\n            \n                \n                    Exports graph results to defined output path.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    graphResults\n                                    \n                                                GraphResult[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        []GraphResult Graph results for export.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { writeFileSync } from 'fs';\nimport * as path from 'path';\n\nimport { GraphResult } from './graph-result';\n\n\n/**\n * Class responsible for exporting generated graph to correct output.\n */\nexport class Exporter {\n\n  /**\n   * Initialize new instance of {@link Exporter}.\n   *\n   * @param outputRootPath {string} Path to root of output path.\n   */\n  constructor(private readonly outputRootPath: string) {}\n\n  /**\n   * Exports graph results to defined output path.\n   *\n   * @param graphResults {@link GraphResult[]} Graph results for export.\n   */\n  public export(graphResults: GraphResult[]): void {\n    console.log(`Found: ${graphResults.length} graphs.`);\n\n    for (const {graph, sourceFile} of graphResults) {\n      const mmdPath = path.resolve(sourceFile.getDirectoryPath(), sourceFile.getBaseNameWithoutExtension()) + '.mmd';\n      console.log(`Writing content with graph into the file: ${mmdPath}.`);\n      const fileContent = graph.render(0);\n      writeFileSync(mmdPath, fileContent, { encoding: 'utf-8' });\n      console.log('\\tGraph rendered into the file.');\n    }\n\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExternalFileFilter.html":{"url":"classes/ExternalFileFilter.html","title":"class - ExternalFileFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExternalFileFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/file-filter/impl/external.file-filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Implementation of FileFilter which accept file based on external logic.\n\n            \n\n\n            \n                Implements\n            \n            \n                            FileFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                externalFileFilter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                accept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(externalFileFilterPath: string)\n                    \n                \n                        \n                            \n                                Defined in packages/ast-to-mmd/src/app/file-filter/impl/external.file-filter.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        externalFileFilterPath\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        externalFileFilter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileFilter\n\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/file-filter/impl/external.file-filter.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        accept\n                        \n                    \n                \n            \n            \n                \n                    \n                    accept(file: SourceFile)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/file-filter/impl/external.file-filter.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            SourceFile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SourceFile } from 'ts-morph';\n\nimport { FileFilter } from '../file-filter';\n\n/**\n * Implementation of {@link FileFilter} which accept file based on external logic.\n */\nexport class ExternalFileFilter implements FileFilter {\n\n  private readonly externalFileFilter: FileFilter;\n\n  constructor(externalFileFilterPath: string) {\n    this.externalFileFilter = require(externalFileFilterPath);\n  }\n\n  public accept(file: SourceFile): boolean {\n    return this.externalFileFilter.accept(file);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileFilter.html":{"url":"interfaces/FileFilter.html","title":"interface - FileFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/file-filter/file-filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface represents File filter for filtering unwanted files.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        accept\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        accept\n                        \n                    \n                \n            \n            \n                \naccept(file: SourceFile)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/file-filter/file-filter.ts:14\n                \n            \n\n\n            \n                \n                    Decides, whether to accept file or not based on internal conditions.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            SourceFile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        SourceFile.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        True, when file is accepted, False otherwise.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { SourceFile } from 'ts-morph';\n\n/**\n * Interface represents File filter for filtering unwanted files.\n */\nexport interface FileFilter {\n\n  /**\n   * Decides, whether to accept file or not based on internal conditions.\n   *\n   * @param file {@link SourceFile}.\n   * @returns True, when file is accepted, False otherwise.\n   */\n  accept(file: SourceFile): boolean;\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileFilterFactory.html":{"url":"classes/FileFilterFactory.html","title":"class - FileFilterFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileFilterFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/file-filter/file-filter.factory.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(cwd: string, configPath: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/file-filter/file-filter.factory.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cwd\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    configPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FileFilter\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as fs from 'fs';\nimport * as path from 'path';\n\nimport { FileFilter } from './file-filter';\nimport { AcceptAllFileFilter } from './impl/accept-all.file-filter';\nimport { ConstraintFileFilter } from './impl/constraint.file-filter';\nimport { ExternalFileFilter } from './impl/external.file-filter';\n\nexport class FileFilterFactory {\n\n  public create(cwd: string, configPath: string): FileFilter {\n    if (!configPath) {\n      return new AcceptAllFileFilter();\n    }\n\n    const absoluteConfigPath = path.join(cwd, configPath);\n    if (!fs.existsSync(absoluteConfigPath)) {\n      throw new Error('File on config path does not exists!')\n    }\n\n    if (absoluteConfigPath.endsWith('.json')) {\n      const fileContent = fs.readFileSync(absoluteConfigPath, { encoding: 'utf-8' });\n      return new ConstraintFileFilter(JSON.parse(fileContent));\n    }\n\n    if (absoluteConfigPath.endsWith('.js')) {\n      return new ExternalFileFilter(absoluteConfigPath);\n    }\n\n    throw new Error('Unsupported file!')\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphResult.html":{"url":"interfaces/GraphResult.html","title":"interface - GraphResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GraphResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/graph-result.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing one Graph result\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            graph\n                                        \n                                \n                                \n                                        \n                                            sourceFile\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        graph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        graph:         GraphBlock\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GraphBlock\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceFile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sourceFile:     SourceFile\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SourceFile\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SourceFile } from 'ts-morph';\n\nimport { GraphBlock } from './graph-blocks';\n\n/**\n * Interface representing one Graph result\n */\nexport interface GraphResult {\n  sourceFile: SourceFile;\n  graph: GraphBlock;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IncrementalBlockIdGenerator.html":{"url":"classes/IncrementalBlockIdGenerator.html","title":"class - IncrementalBlockIdGenerator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IncrementalBlockIdGenerator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/block-id-generator/incremental-block-id-generator.ts\n        \n\n\n            \n                Description\n            \n            \n                Implementation of BlockIdGenerator\nThe ID is generated by linear incrementation of shared counter.\n\n            \n\n\n            \n                Implements\n            \n            \n                            BlockIdGenerator\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                counter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        counter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/block-id-generator/incremental-block-id-generator.ts:13\n                        \n                    \n\n            \n                \n                    Counter of generated IDs\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generate\n                        \n                    \n                \n            \n            \n                \ngenerate()\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/block-id-generator/incremental-block-id-generator.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BlockIdGenerator } from './block-id-generator';\n\n/**\n * Implementation of {@link BlockIdGenerator}\n *\n *\n * The ID is generated by linear incrementation of shared counter.\n */\nexport class IncrementalBlockIdGenerator implements BlockIdGenerator {\n  /**\n   * Counter of generated IDs\n   */\n  private counter = 0;\n\n  generate(): string {\n    return `${this.counter++}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LineRenderer.html":{"url":"classes/LineRenderer.html","title":"class - LineRenderer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LineRenderer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts\n        \n\n\n            \n                Description\n            \n            \n                Class represents renderer of line between two nodes.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _connectionDescription\n                            \n                            \n                                    Private\n                                _lhsHead\n                            \n                            \n                                    Private\n                                _lineLength\n                            \n                            \n                                    Private\n                                _lineStyle\n                            \n                            \n                                    Private\n                                _lineWidth\n                            \n                            \n                                    Private\n                                _rhsHead\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                dot\n                            \n                            \n                                render\n                            \n                            \n                                setConnectionDescription\n                            \n                            \n                                setLhsHead\n                            \n                            \n                                setLineLength\n                            \n                            \n                                setLineStyle\n                            \n                            \n                                setLineWidth\n                            \n                            \n                                setRhsHead\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    linePiece\n                                \n                                \n                                    lhsHead\n                                \n                                \n                                    rhsHead\n                                \n                                \n                                    isDotted\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(lhsId: string, rhsId: string)\n                    \n                \n                        \n                            \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:65\n                            \n                        \n\n                \n                    \n                            Creates new instance of the LineRenderer.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        lhsId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ID of left node.\n\n                                                        \n                                                \n                                                \n                                                        rhsId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ID of right node.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _connectionDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:45\n                        \n                    \n\n            \n                \n                    Optional description on the line.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _lhsHead\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LINE_HEAD\n\n                    \n                \n                \n                    \n                        Default value : LINE_HEAD.NONE\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:49\n                        \n                    \n\n            \n                \n                    Type of head on left side of the line.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _lineLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:65\n                        \n                    \n\n            \n                \n                    Length of the line.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _lineStyle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LINE_STYLE\n\n                    \n                \n                \n                    \n                        Default value : LINE_STYLE.NORMAL\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:57\n                        \n                    \n\n            \n                \n                    LINE_STYLE Style of the line.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _lineWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LINE_WIDTH\n\n                    \n                \n                \n                    \n                        Default value : LINE_WIDTH.NORMAL\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:61\n                        \n                    \n\n            \n                \n                    LINE_WIDTH Width of the line.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _rhsHead\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LINE_HEAD\n\n                    \n                \n                \n                    \n                        Default value : LINE_HEAD.NONE\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:53\n                        \n                    \n\n            \n                \n                    Type of head on right side of the line.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        dot\n                        \n                    \n                \n            \n            \n                \n                    \n                    dot()\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:205\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        render\n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:144\n                \n            \n\n\n            \n                \n                    Render line with defined options.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setConnectionDescription\n                        \n                    \n                \n            \n            \n                \nsetConnectionDescription(value: string, append)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:81\n                \n            \n\n\n            \n                \n                    Set connection description on the line.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Connection description.\n\n                                    \n                                \n                                \n                                    append\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        True, when description should be appended to existing one, False otherwise.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LineRenderer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLhsHead\n                        \n                    \n                \n            \n            \n                \nsetLhsHead(value: LINE_HEAD)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:96\n                \n            \n\n\n            \n                \n                    Set type of head on left side the line.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                LINE_HEAD\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        LINE_HEAD Type of head.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LineRenderer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLineLength\n                        \n                    \n                \n            \n            \n                \nsetLineLength(value: number)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:136\n                \n            \n\n\n            \n                \n                    Set length of the line.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Length of the line.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LineRenderer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLineStyle\n                        \n                    \n                \n            \n            \n                \nsetLineStyle(value: LINE_STYLE)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:116\n                \n            \n\n\n            \n                \n                    Set style of the line.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                LINE_STYLE\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        LINE_STYLE Style of the line.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LineRenderer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLineWidth\n                        \n                    \n                \n            \n            \n                \nsetLineWidth(value: LINE_WIDTH)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:126\n                \n            \n\n\n            \n                \n                    Set width of the line.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                LINE_WIDTH\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        LINE_WIDTH Width of the line.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LineRenderer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRhsHead\n                        \n                    \n                \n            \n            \n                \nsetRhsHead(value: LINE_HEAD)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:106\n                \n            \n\n\n            \n                \n                    Set type of head on right side the line.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                LINE_HEAD\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        LINE_HEAD Type of head.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LineRenderer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        linePiece\n                    \n                \n\n                \n                    \n                        getlinePiece()\n                    \n                \n                            \n                                \n                                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:173\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        lhsHead\n                    \n                \n\n                \n                    \n                        getlhsHead()\n                    \n                \n                            \n                                \n                                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:179\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        rhsHead\n                    \n                \n\n                \n                    \n                        getrhsHead()\n                    \n                \n                            \n                                \n                                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:192\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isDotted\n                    \n                \n\n                \n                    \n                        getisDotted()\n                    \n                \n                            \n                                \n                                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:209\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        export enum LINE_HEAD {\n  NONE,\n  ARROW,\n  POINT,\n  CROSS,\n}\n\n/**\n * Style of the line.\n *\n * - NORMAL: ---\n * - DOTTED: ...\n */\nexport enum LINE_STYLE {\n  NORMAL,\n  DOTTED,\n}\n\n/**\n * Width of the line.\n *\n * - NORMAL:  ---\n * - THICK: ===\n */\nexport enum LINE_WIDTH {\n  NORMAL,\n  THICK,\n}\n\n/**\n * Class represents renderer of line between two nodes.\n */\nexport class LineRenderer {\n  /**\n   * Optional description on the line.\n   */\n  private _connectionDescription?: string;\n  /**\n   * Type of head on left side of the line.\n   */\n  private _lhsHead: LINE_HEAD = LINE_HEAD.NONE;\n  /**\n   * Type of head on right side of the line.\n   */\n  private _rhsHead: LINE_HEAD = LINE_HEAD.NONE;\n  /**\n   * {@link LINE_STYLE} Style of the line.\n   */\n  private _lineStyle: LINE_STYLE = LINE_STYLE.NORMAL;\n  /**\n   * {@link LINE_WIDTH} Width of the line.\n   */\n  private _lineWidth: LINE_WIDTH = LINE_WIDTH.NORMAL;\n  /**\n   * Length of the line.\n   */\n  private _lineLength = 1;\n\n  /**\n   * Creates new instance of the {@link LineRenderer}.\n   *\n   * @param lhsId {string} ID of left node.\n   * @param rhsId {string} ID of right node.\n   */\n  constructor(private readonly lhsId: string, private readonly rhsId: string) {}\n\n  /**\n   * Set connection description on the line.\n   *\n   * @param value {string} Connection description.\n   * @param append {boolean} True, when description should be appended to existing one, False otherwise.\n   */\n  setConnectionDescription(value: string, append = false): LineRenderer {\n    if (!this._connectionDescription) {\n      this._connectionDescription = value;\n      return this;\n    }\n\n    this._connectionDescription = append ? `${this._connectionDescription}${value}` : value;\n    return this;\n  }\n\n  /**\n   * Set type of head on left side the line.\n   *\n   * @param value {@link LINE_HEAD} Type of head.\n   */\n  setLhsHead(value: LINE_HEAD): LineRenderer {\n    this._lhsHead = value;\n    return this;\n  }\n\n  /**\n   * Set type of head on right side the line.\n   *\n   * @param value {@link LINE_HEAD} Type of head.\n   */\n  setRhsHead(value: LINE_HEAD): LineRenderer {\n    this._rhsHead = value;\n    return this;\n  }\n\n  /**\n   * Set style of the line.\n   *\n   * @param value {@link LINE_STYLE} Style of the line.\n   */\n  setLineStyle(value: LINE_STYLE): LineRenderer {\n    this._lineStyle = value;\n    return this;\n  }\n\n  /**\n   * Set width of the line.\n   *\n   * @param value {@link LINE_WIDTH} Width of the line.\n   */\n  setLineWidth(value: LINE_WIDTH): LineRenderer {\n    this._lineWidth = value;\n    return this;\n  }\n\n  /**\n   * Set length of the line.\n   *\n   * @param value {number} Length of the line.\n   */\n  setLineLength(value: number): LineRenderer {\n    this._lineLength = value;\n    return this;\n  }\n\n  /**\n   * Render line with defined options.\n   */\n  render(): string {\n    let result = `${this.lhsId} `;\n\n    result += this.lhsHead;\n    result += this.linePiece;\n    if (this.isDotted) result += this.dot();\n\n    if (this._connectionDescription) {\n      if (this.isDotted) {\n        result += ` ${this._connectionDescription} `;\n      } else {\n        result += `${this.linePiece} ${this._connectionDescription} ${this.linePiece}`;\n      }\n    } else {\n      const tmpLineLength = this._lineLength;\n      this._lineLength = 1;\n      result += this.linePiece;\n      this._lineLength = tmpLineLength;\n    }\n\n    if (this.isDotted) result += this.dot();\n    result += this.linePiece;\n    result += this.rhsHead;\n\n    result += ` ${this.rhsId}`;\n\n    return result;\n  }\n\n  protected get linePiece(): string {\n    let repeat = this._lineLength;\n    if (this.isDotted) repeat = 1;\n    return (this._lineWidth === LINE_WIDTH.THICK ? '=' : '-').repeat(repeat);\n  }\n\n  protected get lhsHead(): string {\n    switch (this._lhsHead) {\n      case LINE_HEAD.ARROW:\n        return '';\n      case LINE_HEAD.CROSS:\n        return 'x';\n      case LINE_HEAD.POINT:\n        return 'o';\n      default:\n        return '';\n    }\n  }\n\n  protected dot(): string {\n    return '.'.repeat(this._lineLength);\n  }\n\n  protected get isDotted(): boolean {\n    return this._lineStyle === LINE_STYLE.DOTTED;\n  }\n}\n\n/**\n * Modifier of existing {@link LineRenderer}\n */\nexport type LineRendererModifier = (builder: LineRenderer) => LineRenderer;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotConstraint.html":{"url":"classes/NotConstraint.html","title":"class - NotConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/file-filter/constraint/conditional/not.constraint.ts\n        \n\n\n            \n                Description\n            \n            \n                Negation Constraint.\n\n            \n\n            \n                Extends\n            \n            \n                        Constraint\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    \n                                inConstraint\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(constraint: Constraint)\n                    \n                \n                        \n                            \n                                Defined in packages/ast-to-mmd/src/app/file-filter/constraint/conditional/not.constraint.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        constraint\n                                                  \n                                                        \n                                                                        Constraint\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                        inConstraint\n                        \n                    \n                \n            \n            \n                \n                    \n                    inConstraint(value: string)\n                \n            \n\n\n            \n                \n                    Inherited from         Constraint\n\n                \n            \n            \n                \n                        Defined in         Constraint:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Constraint } from '../constraint';\n\n/**\n * Negation {@link Constraint}.\n */\nexport class NotConstraint extends Constraint {\n  constructor(private readonly constraint: Constraint) {\n    super();\n  }\n\n  public override inConstraint(value: string): boolean {\n    return !this.constraint.inConstraint(value);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OfKindSiblingCondition.html":{"url":"classes/OfKindSiblingCondition.html","title":"class - OfKindSiblingCondition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OfKindSiblingCondition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/conditions/impl/of-kind.sibling-condition.ts\n        \n\n\n            \n                Description\n            \n            \n                Implementation of SiblingCondition which checks BlockKind.\n\n            \n\n\n            \n                Implements\n            \n            \n                            SiblingCondition\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _blockKinds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isValid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(blockKinds: BlockKind[])\n                    \n                \n                        \n                            \n                                Defined in packages/ast-to-mmd/src/app/conditions/impl/of-kind.sibling-condition.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        blockKinds\n                                                  \n                                                        \n                                                                        BlockKind[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _blockKinds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BlockKind[]\n\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/conditions/impl/of-kind.sibling-condition.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isValid\n                        \n                    \n                \n            \n            \n                \nisValid(sibling: GraphBlock)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/conditions/impl/of-kind.sibling-condition.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sibling\n                                    \n                                                GraphBlock\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BlockKind } from '../../block.kind';\nimport { GraphBlock } from '../../graph-blocks';\nimport { SiblingCondition } from '../sibling.condition';\n\n/**\n * Implementation of {@link SiblingCondition} which checks {@link BlockKind}.\n */\nexport class OfKindSiblingCondition implements SiblingCondition {\n\n  private readonly _blockKinds: BlockKind[];\n\n  constructor(...blockKinds: BlockKind[]) {\n    this._blockKinds = blockKinds;\n  }\n\n  isValid(sibling: GraphBlock): boolean {\n    return this._blockKinds.some((block: BlockKind) => block === sibling.blockKind);//sibling.blockKind === this.blockKind;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrConstraint.html":{"url":"classes/OrConstraint.html","title":"class - OrConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/file-filter/constraint/conditional/or.constraint.ts\n        \n\n\n            \n                Description\n            \n            \n                Disjunction Constraint.\n\n            \n\n            \n                Extends\n            \n            \n                        Constraint\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _constraints\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    \n                                inConstraint\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(constraints: Constraint[])\n                    \n                \n                        \n                            \n                                Defined in packages/ast-to-mmd/src/app/file-filter/constraint/conditional/or.constraint.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        constraints\n                                                  \n                                                        \n                                                                        Constraint[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _constraints\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Constraint[]\n\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/file-filter/constraint/conditional/or.constraint.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                        inConstraint\n                        \n                    \n                \n            \n            \n                \n                    \n                    inConstraint(value: string)\n                \n            \n\n\n            \n                \n                    Inherited from         Constraint\n\n                \n            \n            \n                \n                        Defined in         Constraint:15\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Constraint } from '../constraint';\n\n/**\n * Disjunction {@link Constraint}.\n */\nexport class OrConstraint extends Constraint {\n  private readonly _constraints: Constraint[];\n\n  constructor(...constraints: Constraint[]) {\n    super();\n\n    this._constraints = constraints;\n  }\n\n  public override inConstraint(value: string): boolean {\n    return this._constraints.some((constraint: Constraint) => constraint.inConstraint(value));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PositiveSiblingCondition.html":{"url":"classes/PositiveSiblingCondition.html","title":"class - PositiveSiblingCondition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PositiveSiblingCondition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/conditions/impl/positive.sibling-condition.ts\n        \n\n\n            \n                Description\n            \n            \n                Positive implementation of SiblingCondition.\nThe condition is always met.\n\n            \n\n\n            \n                Implements\n            \n            \n                            SiblingCondition\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isValid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isValid\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValid(_sibling: GraphBlock)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/conditions/impl/positive.sibling-condition.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _sibling\n                                    \n                                                GraphBlock\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { GraphBlock } from '../../graph-blocks';\nimport { SiblingCondition } from '../sibling.condition';\n\n/**\n * Positive implementation of {@link SiblingCondition}.\n * The condition is always met.\n */\nexport class PositiveSiblingCondition implements SiblingCondition {\n\n  public isValid(_sibling: GraphBlock): boolean {\n    return true;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShapeRenderer.html":{"url":"classes/ShapeRenderer.html","title":"class - ShapeRenderer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShapeRenderer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/graph-blocks/renderer/shape-renderer.ts\n        \n\n\n            \n                Description\n            \n            \n                Class represents renderer of supported shapes by Mermaid.js\nhttps://mermaid-js.github.io/mermaid/#/flowchart?id=node-shapes\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                TEXT_PLACEHOLDER\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        TEXT_PLACEHOLDER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '$TEXT$'\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/shape-renderer.ts:63\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        render\n                        \n                    \n                \n            \n            \n                \nrender(text: string, shape: Shape)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/shape-renderer.ts:71\n                \n            \n\n\n            \n                \n                    Render defined shape with text.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Text in the shape.\n\n                                    \n                                \n                                \n                                    shape\n                                    \n                                                Shape\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Shape Type of the shape.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export enum Shape {\n  DEFAULT = '$TEXT$',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-node-with-round-edges}\n   */\n  ROUND_EDGES = '($TEXT$)',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-node-with-text}\n   */\n  SHARP_EDGES = '[$TEXT$]',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-stadium-shaped-node}\n   */\n  STADIUM_SHAPED = '([$TEXT$])',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-node-in-a-subroutine-shape}\n   */\n  SUBROUTINE = '[[$TEXT$]]',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-node-in-a-cylindrical-shape}\n   */\n  CYLINDER = '[($TEXT$)]',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-node-in-the-form-of-a-circle}\n   */\n  CIRCLE = '(($TEXT$))',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-node-in-an-asymmetric-shape}\n   */\n  ASYMETRIC_RIGHT = '>$TEXT$]',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-node-rhombus}\n   */\n  RHOMBUS = '{$TEXT$}',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-hexagon-node}\n   */\n  HEXAGON = '{{$TEXT$}}',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=parallelogram}\n   */\n  PARALLEOGRAM = '[/$TEXT$/]',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=parallelogram-alt}\n   */\n  PARALLEOGRAM_ALT = '[\\\\$TEXT$\\\\]',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=trapezoid}\n   */\n  TRAPEZOID = '[/$TEXT$\\\\]',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=trapezoid-alt}\n   */\n  TRAPEZOID_ALT = '[\\\\$TEXT$/]',\n}\n\n/**\n * Class represents renderer of supported shapes by Mermaid.js\n *\n * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=node-shapes}\n */\nexport class ShapeRenderer {\n  private static readonly TEXT_PLACEHOLDER = '$TEXT$';\n\n  /**\n   * Render defined shape with text.\n   *\n   * @param text {string} Text in the shape.\n   * @param shape {@link Shape} Type of the shape.\n   */\n  render(text: string, shape: Shape): string {\n    return shape.valueOf().replace(ShapeRenderer.TEXT_PLACEHOLDER, `\"${text}\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SiblingCondition.html":{"url":"interfaces/SiblingCondition.html","title":"interface - SiblingCondition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SiblingCondition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/conditions/sibling.condition.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing condition for resolving siblings of defined child;\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        isValid\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isValid\n                        \n                    \n                \n            \n            \n                \nisValid(sibling: GraphBlock)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/conditions/sibling.condition.ts:13\n                \n            \n\n\n            \n                \n                    Based on used condition is checked whether the tested sibling is valid or not.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sibling\n                                    \n                                                GraphBlock\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        GraphBlock Tested sibling.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { GraphBlock } from '../graph-blocks';\n\n/**\n * Interface representing condition for resolving siblings of defined child;\n */\nexport interface SiblingCondition {\n\n  /**\n   * Based on used condition is checked whether the tested sibling is valid or not.\n   *\n   * @param sibling {@link GraphBlock} Tested sibling.\n   */\n  isValid(sibling: GraphBlock): boolean;\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StartsWithConstraint.html":{"url":"classes/StartsWithConstraint.html","title":"class - StartsWithConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StartsWithConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/file-filter/constraint/impl/starts-with.constraint.ts\n        \n\n\n            \n                Description\n            \n            \n                Constraint which check whether the value start with specific value.\n\n            \n\n            \n                Extends\n            \n            \n                        Constraint\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    \n                                inConstraint\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(startsWith: string)\n                    \n                \n                        \n                            \n                                Defined in packages/ast-to-mmd/src/app/file-filter/constraint/impl/starts-with.constraint.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        startsWith\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                        inConstraint\n                        \n                    \n                \n            \n            \n                \n                    \n                    inConstraint(value: string)\n                \n            \n\n\n            \n                \n                    Inherited from         Constraint\n\n                \n            \n            \n                \n                        Defined in         Constraint:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Constraint } from '../constraint';\n\n/**\n * {@link Constraint} which check whether the value start with specific value.\n */\nexport class StartsWithConstraint extends Constraint {\n  constructor(private readonly startsWith: string) {\n    super();\n  }\n\n  public override inConstraint(value: string): boolean {\n    return value.startsWith(this.startsWith);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UuidBlockIdGenerator.html":{"url":"classes/UuidBlockIdGenerator.html","title":"class - UuidBlockIdGenerator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UuidBlockIdGenerator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/block-id-generator/uuid-block-id-generator.ts\n        \n\n\n            \n                Description\n            \n            \n                Implementation of BlockIdGenerator\nThe ID is generated by calling randomUUID function from 'crypto'\npackage\n\n            \n\n\n            \n                Implements\n            \n            \n                            BlockIdGenerator\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generate\n                        \n                    \n                \n            \n            \n                \ngenerate()\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/block-id-generator/uuid-block-id-generator.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { randomUUID } from 'crypto';\n\nimport { BlockIdGenerator } from './block-id-generator';\n\n/**\n * Implementation of {@link BlockIdGenerator}\n *\n *\n * The ID is generated by calling {@link randomUUID} function from 'crypto'\n * package\n */\nexport class UuidBlockIdGenerator implements BlockIdGenerator {\n  generate(): string {\n    return randomUUID().replace(/-/g, '_');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                packages/ast-to-mmd/src/app/block-id-generator/block-id-generator.ts\n            \n            interface\n            BlockIdGenerator\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/block-id-generator/incremental-block-id-generator.ts\n            \n            class\n            IncrementalBlockIdGenerator\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/block-id-generator/uuid-block-id-generator.ts\n            \n            class\n            UuidBlockIdGenerator\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/block.kind.ts\n            \n            variable\n            CYCLE_BLOCK_KIND\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/conditions/impl/of-kind.sibling-condition.ts\n            \n            class\n            OfKindSiblingCondition\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/conditions/impl/positive.sibling-condition.ts\n            \n            class\n            PositiveSiblingCondition\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/conditions/sibling.condition.ts\n            \n            interface\n            SiblingCondition\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/convertor.ts\n            \n            class\n            Convertor\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/exporter.ts\n            \n            class\n            Exporter\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/file-filter/constraint/conditional/and.constraint.ts\n            \n            class\n            AndConstraint\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/file-filter/constraint/conditional/not.constraint.ts\n            \n            class\n            NotConstraint\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/file-filter/constraint/conditional/or.constraint.ts\n            \n            class\n            OrConstraint\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/file-filter/constraint/constraint.ts\n            \n            class\n            Constraint\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/file-filter/constraint/impl/contains.constraint.ts\n            \n            class\n            ContainsConstraint\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/file-filter/constraint/impl/ends-with.constraint.ts\n            \n            class\n            EndsWithConstraint\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/file-filter/constraint/impl/starts-with.constraint.ts\n            \n            class\n            StartsWithConstraint\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/file-filter/file-filter.factory.ts\n            \n            class\n            FileFilterFactory\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/file-filter/file-filter.ts\n            \n            interface\n            FileFilter\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/file-filter/impl/accept-all.file-filter.ts\n            \n            class\n            AcceptAllFileFilter\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/file-filter/impl/builder/config-constraint.factory.ts\n            \n            class\n            ConfigConstraintFactory\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/file-filter/impl/constraint.file-filter.ts\n            \n            class\n            ConstraintFileFilter\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/file-filter/impl/external.file-filter.ts\n            \n            class\n            ExternalFileFilter\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/base-cycle-declaration-graph.block.ts\n            \n            class\n            BaseCycleDeclarationGraphBlock\n            \n                62 %\n                (23/37)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/base-exit-declaration.graph-block.ts\n            \n            class\n            BaseExitDeclarationGraphBlock\n            \n                86 %\n                (25/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/binary-expression-declaration.graph-block.ts\n            \n            class\n            BinaryExpressionDeclarationGraphBlock\n            \n                82 %\n                (24/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/block-declaration.graph-block.ts\n            \n            class\n            BlockDeclarationGraphBlock\n            \n                74 %\n                (23/31)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/break-declaration.graph-block.ts\n            \n            class\n            BreakDeclarationGraphBlock\n            \n                82 %\n                (24/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/continue-declaration.graph-block.ts\n            \n            class\n            ContinueDeclarationGraphBlock\n            \n                82 %\n                (24/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/empty.graph-block.ts\n            \n            class\n            EmptyGraphBlock\n            \n                82 %\n                (24/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/for-declaration.graph-block.ts\n            \n            class\n            ForDeclarationGraphBlock\n            \n                62 %\n                (23/37)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/for-in-declaration.graph-block.ts\n            \n            class\n            ForInDeclarationGraphBlock\n            \n                62 %\n                (23/37)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/for-of-declaration.graph-block.ts\n            \n            class\n            ForOfDeclarationGraphBlock\n            \n                62 %\n                (23/37)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/for-x-declaration.graph-block.ts\n            \n            class\n            ForXDeclarationGraphBlock\n            \n                62 %\n                (23/37)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/graph-block.ts\n            \n            class\n            GraphBlock\n            \n                93 %\n                (27/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/graph-parent.graph-block.ts\n            \n            class\n            GraphParentGraphBlock\n            \n                74 %\n                (23/31)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/if-else-declaration.graph-block.ts\n            \n            class\n            IfElseDeclarationGraphBlock\n            \n                60 %\n                (23/38)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/method-call.graph-block.ts\n            \n            class\n            MethodCallGraphBlock\n            \n                82 %\n                (24/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/named-block-declaration.graph-block.ts\n            \n            class\n            NamedBlockDeclarationGraphBlock\n            \n                71 %\n                (23/32)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/parallel-block-declaration.graph-block.ts\n            \n            class\n            ParallelBlockDeclarationGraphBlock\n            \n                74 %\n                (23/31)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts\n            \n            class\n            LineRenderer\n            \n                93 %\n                (15/16)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/renderer/shape-renderer.ts\n            \n            class\n            ShapeRenderer\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/return-declaration.graph-block.ts\n            \n            class\n            ReturnDeclarationGraphBlock\n            \n                82 %\n                (24/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/text.graph-block.ts\n            \n            class\n            TextGraphBlock\n            \n                82 %\n                (24/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/throw-declaration.graph-block.ts\n            \n            class\n            ThrowDeclarationGraphBlock\n            \n                82 %\n                (24/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/try-catch-declaration.graph-block.ts\n            \n            class\n            TryCatchDeclarationGraphBlock\n            \n                55 %\n                (24/43)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/variable-declaration-list.graph-block.ts\n            \n            class\n            VariableDeclarationListGraphBlock\n            \n                82 %\n                (24/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/variable-declaration.graph-block.ts\n            \n            class\n            VariableDeclarationGraphBlock\n            \n                82 %\n                (24/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-parser/include-file.ts\n            \n            function\n            includeFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-parser/include-file.ts\n            \n            function\n            resolveDecoratorType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-parser/include-file.ts\n            \n            function\n            resolveFileType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-parser/include-file.ts\n            \n            variable\n            decoratorTypeMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-parser/include-file.ts\n            \n            variable\n            fileTypeMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-parser/parser.ts\n            \n            class\n            CodeParser\n            \n                100 %\n                (26/26)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-result.ts\n            \n            interface\n            GraphResult\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            convertor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            cwd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            exporter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            fileFilter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            fileFilterFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            graphResults\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            idGenerator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            options\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            project\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            tsMorphOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            version\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @mermaid-js/mermaid-cli : ^8.13.10\n        \n            chalk : ^5.0.0\n        \n            clear : ^0.1.0\n        \n            commander : ^9.0.0\n        \n            figlet : ^1.5.2\n        \n            path : ^0.12.7\n        \n            ts-morph : ^13.0.3\n        \n            tslib : ^2.0.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BlockKind   (packages/.../block.kind.ts)\n                        \n                        \n                            DecoratorType   (packages/.../include-file.ts)\n                        \n                        \n                            FileType   (packages/.../include-file.ts)\n                        \n                        \n                            LINE_HEAD   (packages/.../line-renderer.ts)\n                        \n                        \n                            LINE_STYLE   (packages/.../line-renderer.ts)\n                        \n                        \n                            LINE_WIDTH   (packages/.../line-renderer.ts)\n                        \n                        \n                            Shape   (packages/.../shape-renderer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/ast-to-mmd/src/app/block.kind.ts\n    \n        \n            \n                \n                    \n                        \n                        BlockKind\n                    \n                \n                        \n                            \n                                 BINARY_EXPRESSION_DECLARATION\n                            \n                        \n                        \n                            \n                                 BLOCK_DECLARATION\n                            \n                        \n                        \n                            \n                                 BREAK_DECLARATION\n                            \n                        \n                        \n                            \n                                 CONTINUE_DECLARATION\n                            \n                        \n                        \n                            \n                                 EMPTY_DECLARATION\n                            \n                        \n                        \n                            \n                                 FOR_DECLARATION\n                            \n                        \n                        \n                            \n                                 FOR_IN_DECLARATION\n                            \n                        \n                        \n                            \n                                 FOR_OF_DECLARATION\n                            \n                        \n                        \n                            \n                                 PARENT_DECLARATION\n                            \n                        \n                        \n                            \n                                 IF_ELSE_DECLARATION\n                            \n                        \n                        \n                            \n                                 METHOD_CALL_DECLARATION\n                            \n                        \n                        \n                            \n                                 NAMED_BLOCK_DECLARATION\n                            \n                        \n                        \n                            \n                                 PARALLEL_BLOCK_DECLARATION\n                            \n                        \n                        \n                            \n                                 RETURN_DECLARATION\n                            \n                        \n                        \n                            \n                                 TEXT_DECLARATION\n                            \n                        \n                        \n                            \n                                 THROW_DECLARATION\n                            \n                        \n                        \n                            \n                                 TRY_CATCH_DECLARATION\n                            \n                        \n                        \n                            \n                                 VARIABLE_DECLARATION\n                            \n                        \n                        \n                            \n                                 VARIABLE_LIST_DECLARATION\n                            \n                        \n            \n        \n\n    packages/ast-to-mmd/src/app/graph-parser/include-file.ts\n    \n        \n            \n                \n                    \n                        \n                        DecoratorType\n                    \n                \n                        \n                            \n                                 INJECTABLE\n                            \n                        \n                        \n                            \n                                 CONTROLLER\n                            \n                        \n                        \n                            \n                                 COMMAND_HANDLER\n                            \n                        \n                        \n                            \n                                 QUERY_HANDLER\n                            \n                        \n                        \n                            \n                                 EVENT_HANDLER\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        FileType\n                    \n                \n                        \n                            \n                                 CONTROLLER\n                            \n                        \n                        \n                            \n                                 FACADE\n                            \n                        \n                        \n                            \n                                 SERVICE\n                            \n                        \n                        \n                            \n                                 HANDLER\n                            \n                        \n            \n        \n\n    packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts\n    \n        \n            \n                \n                    \n                        \n                        LINE_HEAD\n                    \n                \n                    \n                        \n                            Style of head of the line.\n\nNONE: ---\nARROR: -->\nPOINT: --O\nCROSS: --X\n\n\n                        \n                    \n                        \n                            \n                                 NONE\n                            \n                        \n                        \n                            \n                                 ARROW\n                            \n                        \n                        \n                            \n                                 POINT\n                            \n                        \n                        \n                            \n                                 CROSS\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        LINE_STYLE\n                    \n                \n                    \n                        \n                            Style of the line.\n\nNORMAL: ---\nDOTTED: ...\n\n\n                        \n                    \n                        \n                            \n                                 NORMAL\n                            \n                        \n                        \n                            \n                                 DOTTED\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        LINE_WIDTH\n                    \n                \n                    \n                        \n                            Width of the line.\n\nNORMAL:  ---\nTHICK: ===\n\n\n                        \n                    \n                        \n                            \n                                 NORMAL\n                            \n                        \n                        \n                            \n                                 THICK\n                            \n                        \n            \n        \n\n    packages/ast-to-mmd/src/app/graph-blocks/renderer/shape-renderer.ts\n    \n        \n            \n                \n                    \n                        \n                        Shape\n                    \n                \n                        \n                            \n                                 DEFAULT\n                            \n                        \n                        \n                            \n                                Value : $TEXT$\n                            \n                        \n                        \n                            \n                                 ROUND_EDGES\n                            \n                        \n                        \n                            \n                                Value : ($TEXT$)\n                            \n                        \n                        \n                            \n                                 SHARP_EDGES\n                            \n                        \n                        \n                            \n                                Value : [$TEXT$]\n                            \n                        \n                        \n                            \n                                 STADIUM_SHAPED\n                            \n                        \n                        \n                            \n                                Value : ([$TEXT$])\n                            \n                        \n                        \n                            \n                                 SUBROUTINE\n                            \n                        \n                        \n                            \n                                Value : [[$TEXT$]]\n                            \n                        \n                        \n                            \n                                 CYLINDER\n                            \n                        \n                        \n                            \n                                Value : [($TEXT$)]\n                            \n                        \n                        \n                            \n                                 CIRCLE\n                            \n                        \n                        \n                            \n                                Value : (($TEXT$))\n                            \n                        \n                        \n                            \n                                 ASYMETRIC_RIGHT\n                            \n                        \n                        \n                            \n                                Value : >$TEXT$]\n                            \n                        \n                        \n                            \n                                 RHOMBUS\n                            \n                        \n                        \n                            \n                                Value : {$TEXT$}\n                            \n                        \n                        \n                            \n                                 HEXAGON\n                            \n                        \n                        \n                            \n                                Value : {{$TEXT$}}\n                            \n                        \n                        \n                            \n                                 PARALLEOGRAM\n                            \n                        \n                        \n                            \n                                Value : [/$TEXT$/]\n                            \n                        \n                        \n                            \n                                 PARALLEOGRAM_ALT\n                            \n                        \n                        \n                            \n                                Value : [\\$TEXT$\\]\n                            \n                        \n                        \n                            \n                                 TRAPEZOID\n                            \n                        \n                        \n                            \n                                Value : [/$TEXT$\\]\n                            \n                        \n                        \n                            \n                                 TRAPEZOID_ALT\n                            \n                        \n                        \n                            \n                                Value : [\\$TEXT$/]\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            includeFile   (packages/.../include-file.ts)\n                        \n                        \n                            resolveDecoratorType   (packages/.../include-file.ts)\n                        \n                        \n                            resolveFileType   (packages/.../include-file.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/ast-to-mmd/src/app/graph-parser/include-file.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        includeFile\n                        \n                    \n                \n            \n            \n                \nincludeFile(analyzedClass: ClassDeclaration)\n                \n            \n\n\n\n\n            \n                \n                    Based on the analyzed class is defined,\nwhether the MMD graph is generated or not.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    analyzedClass\n                                    \n                                            ClassDeclaration\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Analyzed class\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolveDecoratorType\n                        \n                    \n                \n            \n            \n                \nresolveDecoratorType(decorators)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    decorators\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DecoratorType | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolveFileType\n                        \n                    \n                \n            \n            \n                \nresolveFileType(analyzedClass: ClassDeclaration)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    analyzedClass\n                                    \n                                            ClassDeclaration\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FileType | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAST-to-MMD\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    44 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FileFilterConfig   (packages/.../file-filter.config.ts)\n                        \n                        \n                            FileFilterConfigKey   (packages/.../file-filter.config.ts)\n                        \n                        \n                            FileFilterConfigType   (packages/.../file-filter.config.ts)\n                        \n                        \n                            LineRendererModifier   (packages/.../line-renderer.ts)\n                        \n                        \n                            RecursivePartial   (packages/.../file-filter.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/ast-to-mmd/src/app/file-filter/file-filter.config.ts\n    \n    \n        \n            \n                \n                    \n                    FileFilterConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FileFilterConfigKey\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FileFilterConfigType\n                \n            \n            \n                \n                            RecursivePartial\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RecursivePartial\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts\n    \n    \n        \n            \n                \n                    \n                    LineRendererModifier\n                \n            \n            \n                \n                    Modifier of existing LineRenderer\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            convertor   (packages/.../index.ts)\n                        \n                        \n                            cwd   (packages/.../index.ts)\n                        \n                        \n                            CYCLE_BLOCK_KIND   (packages/.../block.kind.ts)\n                        \n                        \n                            decoratorTypeMap   (packages/.../include-file.ts)\n                        \n                        \n                            exporter   (packages/.../index.ts)\n                        \n                        \n                            fileFilter   (packages/.../index.ts)\n                        \n                        \n                            fileFilterFactory   (packages/.../index.ts)\n                        \n                        \n                            fileTypeMap   (packages/.../include-file.ts)\n                        \n                        \n                            graphResults   (packages/.../index.ts)\n                        \n                        \n                            idGenerator   (packages/.../index.ts)\n                        \n                        \n                            options   (packages/.../index.ts)\n                        \n                        \n                            project   (packages/.../index.ts)\n                        \n                        \n                            tsMorphOptions   (packages/.../index.ts)\n                        \n                        \n                            version   (packages/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/ast-to-mmd/src/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        convertor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Convertor(project.getSourceFiles(), fileFilter, idGenerator)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cwd\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.cwd()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exporter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Exporter(options['output'])\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileFilter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileFilter\n\n                    \n                \n                \n                    \n                        Default value : fileFilterFactory.create(cwd, options['fileFilter'])\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileFilterFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FileFilterFactory()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        graphResults\n                        \n                    \n                \n            \n                \n                    \n                        Default value : convertor.convert()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        idGenerator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new UuidBlockIdGenerator()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Default value : program.opts()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        project\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Project(tsMorphOptions)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tsMorphOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProjectOptions\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Default value : JSON.parse(\n  readFileSync(path.resolve(__dirname, '../../../../', 'package.json'), { encoding: 'utf-8' })\n).version\n                    \n                \n\n\n        \n    \n\n    packages/ast-to-mmd/src/app/block.kind.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CYCLE_BLOCK_KIND\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BlockKind[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  BlockKind.FOR_DECLARATION,\n  BlockKind.FOR_IN_DECLARATION,\n  BlockKind.FOR_OF_DECLARATION,\n]\n                    \n                \n\n\n        \n    \n\n    packages/ast-to-mmd/src/app/graph-parser/include-file.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        decoratorTypeMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Record\n\n                    \n                \n                \n                    \n                        Default value : {\n  Injectable: DecoratorType.INJECTABLE,\n  Controller: DecoratorType.CONTROLLER,\n  CommandHandler: DecoratorType.COMMAND_HANDLER,\n  QueryHandler: DecoratorType.QUERY_HANDLER,\n  EventHandler: DecoratorType.EVENT_HANDLER,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileTypeMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Record\n\n                    \n                \n                \n                    \n                        Default value : {\n  Controller: FileType.CONTROLLER,\n  Facade: FileType.FACADE,\n  Service: FileType.SERVICE,\n  Handler: FileType.HANDLER,\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
