var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AcceptAllFileFilter.html",[0,0.203,1,2.082]],["body/classes/AcceptAllFileFilter.html",[0,0.244,1,3.199,2,0.456,3,0.355,4,0.308,5,0.391,6,0.225,7,1.243,8,4.129,9,3.597,10,2.25,11,0.456,12,2.391,13,2.236,14,3.722,15,2.193,16,0.175,17,0.518,18,1.262,19,4.938,20,2.782,21,0.355,22,3.855,23,0.566,24,0.031,25,0.566,26,0.262,27,0.566,28,3.855,29,0.405,30,1.144,31,0.725,32,1.712,33,1.867,34,1.867,35,0.625,36,0.355,37,0.625,38,2.25,39,0.023,40,0.023]],["title/classes/AndConstraint.html",[0,0.203,41,2.082]],["body/classes/AndConstraint.html",[0,0.222,2,0.416,3,0.324,4,0.28,5,0.239,6,0.237,7,1.311,11,0.416,16,0.16,17,0.488,18,1.207,21,0.48,23,0.682,24,0.031,25,0.682,26,0.354,27,0.682,29,0.369,30,1.077,31,0.516,35,0.569,36,0.324,37,0.569,39,0.022,40,0.022,41,3.011,42,2.937,43,4.647,44,2.222,45,2.464,46,1.75,47,2.128,48,1.541,49,4.356,50,2.251,51,1.126,52,2.937,53,4.647,54,3.385,55,2.251,56,1.108,57,1.862,58,3.512,59,1.039,60,2.937,61,1.862,62,2.937,63,1.862,64,3.512,65,2.937]],["title/interfaces/BlockIdGenerator.html",[66,1.313,67,1.704]],["body/interfaces/BlockIdGenerator.html",[3,0.381,4,0.33,5,0.281,6,0.235,11,0.49,16,0.188,17,0.542,21,0.381,24,0.031,29,0.542,36,0.381,39,0.025,40,0.025,56,1.198,66,2.11,67,2.738,68,2.415,69,3.346,70,3.098,71,4.318,72,2.681,73,4.138,74,4.138,75,1.838,76,2.415,77,4.294,78,4.138,79,4.318,80,5.164]],["title/classes/ConfigConstraintFactory.html",[0,0.203,81,2.082]],["body/classes/ConfigConstraintFactory.html",[0,0.289,2,0.323,3,0.251,4,0.218,5,0.265,6,0.226,7,1.253,11,0.323,16,0.124,17,0.41,18,1.056,21,0.42,23,0.67,24,0.031,25,0.67,26,0.31,27,0.67,29,0.479,31,0.573,36,0.251,37,0.936,39,0.019,40,0.019,41,1.767,44,2.117,54,2.844,56,0.97,81,2.53,82,4.163,83,2.281,84,2.53,85,3.904,86,3.265,87,3.904,88,4.583,89,3.904,90,3.904,91,3.904,92,4.44,93,2.728,94,4.163,95,3.904,96,5.48,97,4.405,98,2.728,99,2.728,100,2.728,101,1.767,102,1.767,103,1.767,104,1.767,105,1.767,106,2.281,107,2.305,108,2.728,109,2.728,110,3.075,111,3.904,112,2.728,113,2.728,114,2.728,115,2.728,116,1.987,117,3.992,118,2.728,119,2.728,120,2.728,121,2.728,122,1.987,123,2.728,124,2.281,125,2.728,126,1.987,127,2.728]],["title/classes/Constraint.html",[0,0.203,44,1.116]],["body/classes/Constraint.html",[0,0.307,2,0.445,3,0.346,4,0.3,5,0.255,6,0.221,7,1.222,11,0.575,16,0.171,17,0.51,18,1.247,21,0.346,23,0.552,24,0.03,25,0.552,26,0.255,27,0.552,29,0.51,30,1.125,35,0.872,36,0.346,38,2.835,39,0.023,40,0.023,44,2.133,50,2.352,55,2.352,56,1.211,59,1.842,84,2.435,128,3.142,129,3.757,130,5.689,131,3.757,132,4.857,133,2.575,134,3.147,135,3.538,136,3.538,137,1.82]],["title/classes/ConstraintFileFilter.html",[0,0.203,138,2.082]],["body/classes/ConstraintFileFilter.html",[0,0.189,2,0.353,3,0.275,4,0.238,5,0.352,6,0.248,7,1.371,10,1.74,11,0.353,12,2.014,13,2.051,14,2.694,15,1.847,16,0.136,17,0.437,18,1.109,20,2.508,21,0.52,23,0.611,24,0.031,25,0.611,26,0.352,27,0.611,29,0.313,30,0.963,31,0.8,32,1.324,33,1.444,34,1.444,35,0.483,36,0.275,37,0.483,39,0.02,40,0.02,44,2.083,46,1.565,47,2.305,48,1.713,51,0.956,59,0.882,81,3.529,92,3.773,106,2.494,107,1.699,138,2.694,139,4.555,140,3.029,141,4.004,142,4.787,143,2.982,144,4.158,145,3.477,146,1.581,147,2.982,148,3.029,149,2.982,150,2.982,151,2.982,152,1.324,153,2.982,154,2.982,155,2.982]],["title/classes/ContainsConstraint.html",[0,0.203,101,2.082]],["body/classes/ContainsConstraint.html",[0,0.23,2,0.43,3,0.335,4,0.29,5,0.247,6,0.216,7,1.195,11,0.43,16,0.165,17,0.499,18,1.226,21,0.438,23,0.697,24,0.031,25,0.697,26,0.323,27,0.697,29,0.381,30,1.1,31,0.533,35,0.589,36,0.335,37,0.589,39,0.023,40,0.023,44,2.115,45,2.518,48,1.074,50,2.3,51,1.164,55,2.3,56,1.272,57,1.925,59,1.725,61,1.925,63,1.925,101,3.078,122,4.091,133,2.518,134,3.078,152,1.613,156,3.036,157,3.46,158,3.46,159,3.63,160,3.63,161,2.352,162,3.63]],["title/classes/Convertor.html",[0,0.203,163,2.082]],["body/classes/Convertor.html",[0,0.257,2,0.48,3,0.206,4,0.423,5,0.307,6,0.206,11,0.399,13,2.141,16,0.102,17,0.354,18,0.941,20,2.641,21,0.447,23,0.328,24,0.031,25,0.328,26,0.229,27,0.328,29,0.235,31,0.749,32,0.992,33,1.082,34,1.966,35,0.787,36,0.206,37,0.362,39,0.016,40,0.016,46,1.269,47,1.983,48,1.51,51,0.716,67,2.705,70,1.082,75,2.267,76,2.37,79,2.819,107,2.164,110,3.257,137,1.966,152,0.992,163,2.93,164,1.868,165,2.819,166,3.371,167,3.972,168,2.641,169,4.56,170,4.522,171,2.234,172,2.93,173,3.371,174,2.819,175,3.294,176,4.06,177,3.371,178,3.371,179,3.371,180,2.37,181,2.819,182,2.234,183,3.371,184,3.371,185,2.819,186,2.639,187,3.371,188,3.371,189,1.868,190,3.395,191,1.868,192,1.184,193,2.234,194,1.304,195,2.234,196,2.234,197,2.819,198,2.234,199,2.234,200,1.868,201,2.819,202,2.234,203,2.234,204,3.371,205,2.234,206,3.371,207,2.234,208,3.371,209,3.371,210,3.371,211,3.371,212,2.234,213,2.234,214,2.234]],["title/classes/EndsWithConstraint.html",[0,0.203,102,2.082]],["body/classes/EndsWithConstraint.html",[0,0.23,2,0.43,3,0.335,4,0.29,5,0.247,6,0.216,7,1.195,11,0.43,16,0.165,17,0.499,18,1.226,21,0.438,23,0.697,24,0.031,25,0.697,26,0.323,27,0.697,29,0.381,30,1.1,31,0.533,35,0.589,36,0.335,37,0.589,39,0.023,40,0.023,44,2.115,45,2.518,48,1.074,50,2.3,51,1.164,55,2.3,56,1.272,57,1.925,59,1.725,61,1.925,63,1.925,102,3.078,126,3.46,133,2.518,152,1.613,157,3.46,158,3.46,161,2.352,215,3.972,216,2.645,217,3.972,218,3.63,219,3.036,220,3.63]],["title/classes/Exporter.html",[0,0.203,221,2.082]],["body/classes/Exporter.html",[0,0.297,2,0.341,3,0.265,4,0.23,5,0.319,6,0.214,11,0.556,16,0.131,17,0.426,18,1.088,20,1.395,21,0.47,23,0.596,24,0.031,25,0.596,26,0.276,27,0.596,29,0.302,31,0.69,35,0.658,36,0.496,39,0.026,40,0.019,48,0.852,51,0.923,56,1.086,107,1.658,110,2.742,137,1.965,152,1.279,165,3.394,168,2.882,175,2.956,186,3.256,194,1.681,197,2.409,221,3.305,222,2.409,223,4.058,224,2.63,225,4.058,226,5.579,227,2.88,228,2.88,229,4.058,230,4.699,231,3.793,232,4.058,233,4.058,234,2.88,235,4.058,236,3.423,237,4.058,238,2.88,239,2.409,240,2.88,241,2.88,242,4.058,243,2.88,244,2.88,245,2.409,246,2.88,247,2.88,248,3.394,249,2.88,250,2.88,251,2.098,252,2.098,253,2.098,254,2.88,255,2.409]],["title/classes/ExternalFileFilter.html",[0,0.203,256,2.082]],["body/classes/ExternalFileFilter.html",[0,0.212,2,0.397,3,0.309,4,0.268,5,0.386,6,0.248,7,1.369,10,1.957,11,0.397,12,2.182,13,2.248,14,3.526,15,2.001,16,0.153,17,0.473,18,1.179,20,2.635,21,0.469,23,0.662,24,0.031,25,0.662,26,0.346,27,0.662,29,0.352,30,1.044,31,0.662,32,1.489,33,1.624,34,1.624,35,0.544,36,0.309,37,0.544,39,0.021,40,0.021,46,1.696,47,2.079,48,1.506,51,1.075,56,1.083,148,3.282,256,3.678,257,4.55,258,3.282,259,4.506,260,4.506,261,4.506,262,4.506,263,3.353,264,3.353,265,3.353,266,3.353,267,3.353]],["title/interfaces/FileFilter.html",[13,1.21,66,1.313]],["body/interfaces/FileFilter.html",[3,0.331,4,0.286,5,0.424,6,0.214,7,1.186,10,2.093,11,0.558,13,1.774,14,3.621,16,0.163,17,0.495,20,2.885,21,0.331,23,0.527,24,0.031,25,0.527,26,0.244,27,0.527,29,0.495,30,1.092,31,0.527,32,1.593,33,1.737,34,2.282,35,0.581,36,0.331,38,2.75,39,0.022,40,0.022,66,2.15,68,2.093,133,2.498,135,3.433,136,3.433,137,1.737,140,3.433,148,3.433,167,3.433,258,3.433,268,3.053,269,3.433,270,4.712,271,4.712,272,3.586,273,4.712,274,4.712,275,4.712]],["title/classes/FileFilterFactory.html",[0,0.203,276,2.082]],["body/classes/FileFilterFactory.html",[0,0.209,1,2.892,2,0.391,3,0.305,4,0.264,5,0.344,6,0.203,7,1.123,9,2.409,13,1.902,16,0.15,17,0.469,18,1.171,21,0.305,23,0.486,24,0.031,25,0.486,26,0.225,27,0.486,29,0.347,31,0.855,34,2.62,36,0.305,37,0.819,39,0.021,40,0.021,56,1.239,94,2.765,107,2.308,110,2.605,138,2.142,231,3.274,239,3.733,248,2.765,251,2.409,252,2.409,253,2.409,256,2.142,268,2.892,276,2.892,277,2.765,278,4.463,279,4.463,280,5.649,281,3.306,282,2.409,283,3.306,284,3.306,285,3.306,286,3.306,287,3.306,288,3.306,289,3.733,290,3.306,291,3.306,292,3.306,293,3.306,294,3.306,295,3.306,296,3.306,297,3.306]],["title/interfaces/GraphResult.html",[66,1.313,186,1.876]],["body/interfaces/GraphResult.html",[3,0.376,4,0.326,5,0.277,6,0.186,11,0.483,16,0.186,20,3.064,24,0.031,26,0.348,31,0.752,32,1.813,33,1.976,36,0.376,39,0.024,40,0.024,46,1.927,66,2.285,68,2.382,75,2.605,84,3.317,168,3.03,186,2.988,192,2.163,194,2.988,298,2.163,299,3.413,300,3.729]],["title/classes/IncrementalBlockIdGenerator.html",[0,0.203,301,2.341]],["body/classes/IncrementalBlockIdGenerator.html",[0,0.221,2,0.413,3,0.322,4,0.279,5,0.237,6,0.236,11,0.413,12,2.242,15,2.056,16,0.159,17,0.486,21,0.427,24,0.031,26,0.237,29,0.367,31,0.513,35,0.566,36,0.322,37,0.566,39,0.022,40,0.022,46,1.743,47,2.122,56,0.985,59,1.033,67,3.05,69,3.365,70,3.003,72,2.262,76,2.038,77,4.028,146,1.851,180,3.228,181,3.871,224,3.583,301,3.372,302,4.343,303,4.629,304,4.629,305,4.629,306,6.033,307,2.92,308,3.372,309,2.92,310,3.491,311,3.491]],["title/classes/LineRenderer.html",[0,0.203,312,2.082]],["body/classes/LineRenderer.html",[0,0.155,2,0.126,3,0.098,4,0.085,5,0.073,6,0.246,11,0.607,16,0.049,17,0.194,21,0.503,23,0.568,24,0.032,25,0.568,26,0.386,27,0.675,29,0.429,30,0.428,35,0.663,36,0.303,37,0.817,38,1.078,39,0.009,40,0.009,46,0.695,47,2.181,48,0.547,51,0.342,56,1.149,59,1.669,70,1.41,86,0.892,88,3.013,107,0.755,110,0.623,116,0.777,117,1.779,135,2.12,136,1.345,137,2.073,146,2.049,152,0.474,174,1.545,175,1.345,194,2.758,269,1.345,298,2.862,300,1.345,307,2.751,312,3.459,313,3.498,314,0.623,315,1.545,316,4.989,317,1.847,318,1.847,319,1.847,320,2.442,321,2.442,322,2.442,323,2.442,324,2.442,325,2.442,326,2.911,327,3.013,328,1.847,329,1.847,330,1.847,331,1.847,332,1.847,333,1.847,334,1.847,335,2.442,336,2.442,337,1.847,338,2.442,339,1.067,340,2.911,341,1.847,342,2.442,343,3.602,344,2.434,345,3.602,346,1.067,347,4.215,348,2.911,349,1.067,350,3.952,351,4.088,352,2.911,353,3.602,354,3.72,355,1.847,356,1.067,357,3.232,358,3.72,359,1.847,360,1.067,361,3.232,362,1.067,363,1.067,364,1.067,365,1.197,366,1.847,367,3.29,368,1.067,369,4.726,370,2.911,371,1.847,372,2.042,373,1.847,374,1.067,375,1.847,376,1.067,377,1.847,378,1.067,379,1.847,380,1.067,381,1.847,382,1.067,383,1.067,384,1.067,385,1.067,386,1.067,387,1.067,388,1.067,389,1.067,390,1.067,391,2.042,392,0.892,393,0.892,394,0.892,395,0.892,396,2.434,397,1.545,398,1.545,399,3.602,400,1.067,401,1.847,402,1.067,403,1.847,404,1.847,405,3.29,406,1.067,407,1.067,408,3.29,409,2.911,410,1.847,411,1.847,412,1.067,413,1.067,414,1.847,415,1.067,416,1.067,417,1.067,418,1.067,419,0.777,420,1.067,421,0.892,422,1.067,423,1.067,424,0.892,425,0.892]],["title/classes/NotConstraint.html",[0,0.203,103,2.082]],["body/classes/NotConstraint.html",[0,0.239,2,0.446,3,0.347,4,0.301,5,0.256,6,0.221,7,1.225,11,0.446,16,0.171,17,0.511,18,1.249,21,0.449,23,0.715,24,0.031,25,0.715,26,0.331,27,0.715,29,0.396,30,1.127,31,0.553,35,0.611,36,0.347,37,0.611,39,0.023,40,0.023,44,2.232,45,2.58,48,1.116,50,2.357,51,1.208,55,2.357,56,1.147,57,1.998,59,1.116,61,1.998,63,1.998,103,3.153,152,1.674,161,2.442,426,3.152,427,4.867,428,3.769,429,3.769,430,3.769]],["title/classes/NotEmptyBlockSiblingCondition.html",[0,0.203,431,2.341]],["body/classes/NotEmptyBlockSiblingCondition.html",[0,0.25,2,0.467,3,0.364,4,0.315,5,0.268,6,0.228,15,2.226,16,0.179,17,0.526,18,1.276,21,0.364,23,0.579,24,0.031,25,0.579,26,0.268,27,0.579,29,0.414,30,1.161,31,0.809,36,0.364,37,0.639,39,0.024,40,0.024,75,2.573,168,1.91,192,2.091,431,3.65,432,4.191,433,4.191,434,4.191,435,2.556,436,2.919,437,3.247,438,3.65,439,3.945,440,2.874,441,2.556,442,3.299,443,2.874,444,3.299,445,3.945]],["title/classes/OfKindSiblingCondition.html",[0,0.203,446,2.341]],["body/classes/OfKindSiblingCondition.html",[0,0.212,2,0.396,3,0.308,4,0.267,5,0.227,6,0.247,11,0.396,12,2.178,15,1.998,16,0.152,17,0.472,21,0.468,23,0.66,24,0.031,25,0.66,26,0.345,27,0.66,29,0.351,30,1.042,31,0.746,35,0.729,36,0.308,37,0.542,39,0.021,40,0.021,46,1.693,47,2.076,48,1.504,51,1.072,75,2.414,168,1.619,180,1.952,192,1.773,435,2.167,436,3.007,437,2.914,438,3.276,440,2.436,441,3.983,442,2.796,443,2.436,444,2.796,446,3.276,447,4.545,448,4.545,449,4.497,450,5.081,451,3.344,452,3.761,453,4.497,454,3.344,455,3.344,456,3.344,457,3.344]],["title/classes/OrConstraint.html",[0,0.203,104,2.082]],["body/classes/OrConstraint.html",[0,0.222,2,0.416,3,0.324,4,0.28,5,0.239,6,0.237,7,1.311,11,0.416,16,0.16,17,0.488,18,1.207,21,0.48,23,0.682,24,0.031,25,0.682,26,0.354,27,0.682,29,0.369,30,1.077,31,0.516,35,0.569,36,0.324,37,0.569,39,0.022,40,0.022,44,2.222,45,2.464,46,1.75,47,2.128,48,1.541,49,4.356,50,2.251,51,1.126,52,2.937,54,3.385,55,2.251,56,1.108,57,1.862,59,1.039,60,2.937,61,1.862,62,2.937,63,1.862,65,2.937,104,3.011,458,2.937,459,4.647,460,4.647,461,3.512,462,3.512]],["title/classes/PositiveSiblingCondition.html",[0,0.203,463,2.341]],["body/classes/PositiveSiblingCondition.html",[0,0.244,2,0.456,3,0.355,4,0.308,5,0.262,6,0.225,11,0.456,12,2.391,15,2.193,16,0.175,17,0.518,18,1.262,21,0.355,23,0.566,24,0.031,25,0.566,26,0.262,27,0.566,29,0.405,30,1.144,31,0.725,35,0.625,36,0.355,37,0.625,38,2.25,39,0.023,40,0.023,75,2.552,168,1.867,192,2.044,435,2.498,436,3.148,437,3.199,443,2.808,452,3.224,463,3.597,464,4.129,465,4.938,466,3.597,467,4.938,468,4.938,469,4.938,470,3.855]],["title/classes/ShapeRenderer.html",[0,0.203,471,2.341]],["body/classes/ShapeRenderer.html",[0,0.261,2,0.272,3,0.212,4,0.184,5,0.156,6,0.188,11,0.408,16,0.105,17,0.362,21,0.423,23,0.338,24,0.032,25,0.338,26,0.312,27,0.338,29,0.241,35,0.983,36,0.318,37,0.373,39,0.016,40,0.016,46,1.297,47,1.688,48,1.222,56,1.138,59,0.68,137,1.668,141,3.454,146,1.826,269,2.509,298,2.19,314,1.342,315,2.881,327,3.837,344,4.704,391,1.923,471,2.509,472,3.009,473,2.881,474,4.587,475,3.444,476,6.063,477,3.444,478,4.131,479,5.303,480,2.299,481,3.444,482,5.199,483,2.299,484,5.624,485,2.299,486,2.299,487,1.923,488,1.923,489,2.299,490,2.299,491,1.923,492,2.881,493,2.299,494,1.923,495,2.299,496,2.881,497,2.299,498,1.923,499,2.881,500,2.881,501,3.444,502,1.923,503,3.444,504,1.923,505,3.444,506,1.923,507,1.923,508,2.299]],["title/interfaces/SiblingCondition.html",[66,1.313,436,1.704]],["body/interfaces/SiblingCondition.html",[3,0.341,4,0.295,5,0.251,6,0.219,11,0.569,16,0.168,17,0.505,21,0.492,23,0.543,24,0.031,25,0.543,26,0.251,27,0.543,29,0.388,30,1.114,31,0.543,35,0.6,36,0.341,39,0.023,40,0.023,66,2.182,68,2.159,75,2.669,84,3.115,133,2.549,134,3.664,137,1.791,168,1.791,192,1.961,258,3.502,436,2.549,437,3.115,438,3.502,440,4.377,466,4.12,509,3.093,510,4.807,511,4.807,512,4.807,513,3.698,514,4.807,515,4.807,516,4.807]],["title/classes/StartsWithConstraint.html",[0,0.203,105,2.082]],["body/classes/StartsWithConstraint.html",[0,0.23,2,0.43,3,0.335,4,0.29,5,0.247,6,0.216,7,1.195,11,0.43,16,0.165,17,0.499,18,1.226,21,0.438,23,0.697,24,0.031,25,0.697,26,0.323,27,0.697,29,0.381,30,1.1,31,0.533,35,0.589,36,0.335,37,0.589,39,0.023,40,0.023,44,2.115,45,2.518,48,1.074,50,2.3,51,1.164,55,2.3,56,1.272,57,1.925,59,1.725,61,1.925,63,1.925,105,3.078,124,3.972,133,2.518,152,1.613,157,3.46,158,3.46,161,2.352,216,2.645,219,3.036,517,3.972,518,4.75,519,3.63,520,3.63]],["title/classes/UuidBlockIdGenerator.html",[0,0.203,521,2.082]],["body/classes/UuidBlockIdGenerator.html",[0,0.237,2,0.443,3,0.345,4,0.299,5,0.255,6,0.22,11,0.443,12,2.347,15,2.153,16,0.17,17,0.509,21,0.345,24,0.031,29,0.393,31,0.712,35,0.786,36,0.345,37,0.607,39,0.023,40,0.023,56,1.031,67,3.12,69,3.141,70,2.971,72,2.427,76,2.186,77,4.14,180,3.136,224,3.141,309,3.132,521,3.141,522,4.053,523,4.847,524,5.373,525,3.531,526,5.373,527,4.053,528,3.745,529,3.132,530,3.745]],["title/coverage.html",[531,3.661]],["body/coverage.html",[0,0.403,1,0.95,5,0.1,6,0.295,7,1.346,8,1.226,9,1.068,10,2.086,13,0.909,24,0.031,26,0.1,39,0.011,40,0.011,41,0.95,42,1.226,44,0.509,66,1.46,67,0.777,69,1.997,70,2.06,71,1.226,72,1.997,75,0.651,81,0.95,82,1.226,83,1.226,101,0.95,102,0.95,103,0.95,104,0.95,105,0.95,107,0.599,128,1.226,138,0.95,139,1.226,156,1.226,163,1.565,164,1.226,169,1.226,172,0.95,180,2.086,186,0.855,189,1.226,190,1.226,191,1.226,215,1.226,216,1.76,221,1.565,222,1.226,236,1.068,256,0.95,257,1.226,268,1.565,276,1.565,277,1.226,282,1.068,298,3.23,299,1.226,301,1.068,302,1.226,308,3.96,312,0.95,313,0.95,314,1.41,365,0.95,419,1.068,426,1.226,431,1.068,432,1.226,433,1.226,434,1.226,435,1.997,436,0.777,446,1.068,447,1.226,448,1.226,458,1.226,463,1.068,464,1.226,471,1.068,472,1.068,509,1.226,517,1.226,521,0.95,522,1.226,531,1.226,532,1.466,533,1.466,534,1.466,535,4.498,536,3.574,537,2.415,538,2.415,539,3.081,540,3.081,541,1.068,542,5.253,543,1.226,544,5.253,545,2.415,546,3.953,547,3.953,548,1.466,549,1.466,550,3.953,551,3.953,552,1.466,553,1.466,554,2.415,555,1.466,556,2.415,557,1.466,558,1.466,559,3.953,560,3.953,561,1.466,562,4.766,563,4.978,564,1.466,565,1.466,566,1.466,567,1.466,568,1.466,569,1.466,570,5.017,571,5.017,572,1.466,573,1.466,574,3.081,575,3.081,576,1.466,577,1.466,578,1.466,579,1.466,580,2.415,581,2.415,582,1.466,583,1.466,584,1.466,585,1.466,586,3.574,587,1.466,588,1.466,589,1.466,590,1.466,591,2.415,592,2.415,593,1.466,594,1.466,595,1.466,596,1.466,597,1.466,598,1.466,599,1.466,600,1.466,601,1.466,602,1.466,603,1.466,604,1.466,605,1.466,606,1.466,607,1.226,608,1.466,609,1.466,610,1.466,611,1.466,612,1.466,613,1.466,614,1.466,615,1.466,616,1.226,617,1.466,618,1.466,619,1.466,620,2.415,621,1.466,622,1.466,623,1.466,624,1.466,625,1.466,626,4.301,627,1.068,628,1.226,629,1.226,630,1.466,631,1.466]],["title/dependencies.html",[527,2.247,632,3.231]],["body/dependencies.html",[24,0.031,32,2.037,33,2.221,39,0.026,40,0.026,231,2.972,632,3.836,633,4.586,634,4.586,635,4.586,636,4.586,637,4.586,638,4.586,639,4.586,640,4.586,641,4.586,642,4.586,643,4.586,644,4.586,645,4.586,646,4.586,647,4.586,648,4.586]],["title/miscellaneous/enumerations.html",[649,1.425,650,3.231]],["body/miscellaneous/enumerations.html",[6,0.227,16,0.147,24,0.031,39,0.021,40,0.021,59,1.88,146,1.71,298,2.327,313,2.09,314,3.373,316,4.172,347,3.67,350,2.697,354,3.67,357,3.67,358,3.67,361,2.697,392,3.67,393,2.697,394,3.67,395,3.67,396,4.478,397,3.67,398,3.67,419,2.35,421,2.697,441,2.844,472,2.35,479,5.314,482,3.67,487,2.697,488,2.697,491,2.697,492,2.697,494,2.697,496,2.697,498,2.697,499,2.697,500,2.697,502,2.697,504,2.697,506,2.697,507,2.697,541,2.35,649,1.71,650,2.697,651,2.697,652,4.172,653,3.225,654,3.225,655,3.225,656,3.225,657,3.225,658,3.225,659,3.225,660,3.225,661,3.225,662,3.225,663,3.225,664,3.225,665,3.225,666,3.225,667,3.225,668,3.225,669,3.225,670,3.225,671,3.225,672,3.225,673,3.225,674,3.225,675,3.225]],["title/index.html",[16,0.122,676,2.687,677,2.687]],["body/index.html",[2,0.313,4,0.358,5,0.38,13,0.997,21,0.352,24,0.031,26,0.18,32,2.181,34,1.851,37,0.796,39,0.018,40,0.018,56,0.813,70,1.283,76,1.546,107,1.082,116,1.929,117,1.929,122,3.267,126,2.785,134,2.477,140,3.953,167,1.929,172,1.716,185,2.215,194,1.546,200,2.215,201,2.215,217,2.215,224,1.716,231,3.624,245,4.355,255,2.215,289,4.107,300,1.929,308,2.785,365,1.716,466,3.578,473,3.751,525,2.785,529,2.215,616,2.215,627,1.929,678,2.648,679,2.648,680,3.822,681,2.648,682,4.485,683,2.648,684,3.822,685,2.648,686,2.648,687,4.485,688,2.648,689,3.822,690,3.822,691,2.648,692,2.648,693,3.822,694,2.648,695,2.648,696,2.648,697,5.207,698,3.822,699,2.648,700,3.822,701,2.648,702,2.648,703,2.648,704,2.648,705,2.648,706,2.648,707,2.648,708,4.485,709,2.648,710,4.911,711,2.648,712,2.648,713,2.648,714,3.822,715,3.822,716,2.648,717,2.648,718,2.648,719,2.648,720,4.911,721,2.648,722,4.911,723,4.911,724,2.648,725,2.648,726,2.648,727,2.648,728,2.648,729,3.822,730,4.485,731,2.648,732,3.822,733,4.485,734,2.648,735,2.648,736,2.648,737,2.648,738,2.648,739,3.822,740,2.648,741,2.648,742,2.648,743,2.648,744,2.648,745,2.648,746,2.648,747,2.648]],["title/modules.html",[748,3.661]],["body/modules.html",[24,0.028,39,0.028,40,0.028,748,4.283]],["title/overview.html",[749,3.661]],["body/overview.html",[2,0.596,24,0.028,39,0.028,40,0.028,68,2.939,749,4.211,750,5.035,751,5.035]],["title/miscellaneous/typealiases.html",[649,1.425,752,3.863]],["body/miscellaneous/typealiases.html",[6,0.258,7,1.06,16,0.192,24,0.025,26,0.386,39,0.025,40,0.025,92,3.803,97,4.366,145,4.366,268,2.729,298,2.768,312,2.729,313,2.729,314,3.047,372,3.522,424,3.522,425,4.366,525,3.068,562,4.366,563,4.366,607,3.522,649,2.233,652,3.522,753,4.211,754,5.221,755,4.211,756,5.931,757,6.097,758,5.674,759,5.221]],["title/miscellaneous/variables.html",[649,1.425,760,3.231]],["body/miscellaneous/variables.html",[6,0.206,13,2.053,16,0.153,24,0.031,26,0.347,39,0.021,40,0.021,59,1.871,107,2.324,146,3.351,163,2.931,172,3.307,221,2.931,236,3.295,251,2.457,252,2.457,253,2.457,276,3.307,282,3.295,365,2.931,441,2.185,521,2.185,541,2.457,543,3.783,626,2.82,627,3.295,628,3.783,629,4.268,649,1.788,651,2.82,760,2.82,761,6.275,762,3.372,763,3.372,764,3.372,765,3.372,766,3.372,767,3.372,768,3.372,769,3.372,770,3.372,771,3.372,772,3.372,773,3.372,774,3.372,775,3.372,776,3.372]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"interfaces/BlockIdGenerator.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":308,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{},"coverage.html":{},"index.html":{}}}],["0.1.0",{"_index":640,"title":{},"body":{"dependencies.html":{}}}],["0.12.7",{"_index":645,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":544,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":545,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":352,"title":{},"body":{"classes/LineRenderer.html":{}}}],["1.5.2",{"_index":644,"title":{},"body":{"dependencies.html":{}}}],["1/2",{"_index":540,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":551,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":547,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":553,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":535,"title":{},"body":{"coverage.html":{}}}],["13.0.3",{"_index":646,"title":{},"body":{"dependencies.html":{}}}],["15/16",{"_index":604,"title":{},"body":{"coverage.html":{}}}],["2.0.0",{"_index":648,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":536,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":538,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":552,"title":{},"body":{"coverage.html":{}}}],["23/31",{"_index":575,"title":{},"body":{"coverage.html":{}}}],["23/32",{"_index":581,"title":{},"body":{"coverage.html":{}}}],["23/33",{"_index":610,"title":{},"body":{"coverage.html":{}}}],["23/37",{"_index":560,"title":{},"body":{"coverage.html":{}}}],["23/38",{"_index":598,"title":{},"body":{"coverage.html":{}}}],["24/29",{"_index":571,"title":{},"body":{"coverage.html":{}}}],["24/43",{"_index":619,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":546,"title":{},"body":{"coverage.html":{}}}],["25/29",{"_index":566,"title":{},"body":{"coverage.html":{}}}],["27/29",{"_index":593,"title":{},"body":{"coverage.html":{}}}],["28/28",{"_index":625,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":549,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":550,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":751,"title":{},"body":{"overview.html":{}}}],["4/4",{"_index":548,"title":{},"body":{"coverage.html":{}}}],["47",{"_index":750,"title":{},"body":{"overview.html":{}}}],["5.0.0",{"_index":638,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":539,"title":{},"body":{"coverage.html":{}}}],["55",{"_index":618,"title":{},"body":{"coverage.html":{}}}],["580",{"_index":724,"title":{},"body":{"index.html":{}}}],["581",{"_index":735,"title":{},"body":{"index.html":{}}}],["581[[\"foo",{"_index":725,"title":{},"body":{"index.html":{}}}],["582",{"_index":729,"title":{},"body":{"index.html":{}}}],["583",{"_index":730,"title":{},"body":{"index.html":{}}}],["595",{"_index":732,"title":{},"body":{"index.html":{}}}],["595[/\"i",{"_index":728,"title":{},"body":{"index.html":{}}}],["595_16",{"_index":726,"title":{},"body":{"index.html":{}}}],["596",{"_index":736,"title":{},"body":{"index.html":{}}}],["596[[\"foobar",{"_index":734,"title":{},"body":{"index.html":{}}}],["60",{"_index":597,"title":{},"body":{"coverage.html":{}}}],["600",{"_index":721,"title":{},"body":{"index.html":{}}}],["601",{"_index":737,"title":{},"body":{"index.html":{}}}],["62",{"_index":559,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":537,"title":{},"body":{"coverage.html":{}}}],["69",{"_index":609,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":580,"title":{},"body":{"coverage.html":{}}}],["74",{"_index":574,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":253,"title":{},"body":{"classes/Exporter.html":{},"classes/FileFilterFactory.html":{},"miscellaneous/variables.html":{}}}],["8.13.10",{"_index":636,"title":{},"body":{"dependencies.html":{}}}],["82",{"_index":570,"title":{},"body":{"coverage.html":{}}}],["86",{"_index":565,"title":{},"body":{"coverage.html":{}}}],["9.0.0",{"_index":642,"title":{},"body":{"dependencies.html":{}}}],["93",{"_index":592,"title":{},"body":{"coverage.html":{}}}],["_",{"_index":530,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{}}}],["_blockkinds",{"_index":450,"title":{},"body":{"classes/OfKindSiblingCondition.html":{}}}],["_connectiondescription",{"_index":320,"title":{},"body":{"classes/LineRenderer.html":{}}}],["_constraints",{"_index":49,"title":{},"body":{"classes/AndConstraint.html":{},"classes/OrConstraint.html":{}}}],["_file",{"_index":28,"title":{},"body":{"classes/AcceptAllFileFilter.html":{}}}],["_lhshead",{"_index":321,"title":{},"body":{"classes/LineRenderer.html":{}}}],["_linelength",{"_index":322,"title":{},"body":{"classes/LineRenderer.html":{}}}],["_linestyle",{"_index":323,"title":{},"body":{"classes/LineRenderer.html":{}}}],["_linewidth",{"_index":324,"title":{},"body":{"classes/LineRenderer.html":{}}}],["_rhshead",{"_index":325,"title":{},"body":{"classes/LineRenderer.html":{}}}],["_sibling",{"_index":470,"title":{},"body":{"classes/PositiveSiblingCondition.html":{}}}],["absoluteconfigpath",{"_index":286,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["absoluteconfigpath.endswith('.js",{"_index":295,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["absoluteconfigpath.endswith('.json",{"_index":292,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["abstract",{"_index":130,"title":{},"body":{"classes/Constraint.html":{}}}],["accept",{"_index":14,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/ConstraintFileFilter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{}}}],["accept(_file",{"_index":19,"title":{},"body":{"classes/AcceptAllFileFilter.html":{}}}],["accept(file",{"_index":148,"title":{},"body":{"classes/ConstraintFileFilter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{}}}],["acceptallfilefilter",{"_index":1,"title":{"classes/AcceptAllFileFilter.html":{}},"body":{"classes/AcceptAllFileFilter.html":{},"classes/FileFilterFactory.html":{},"coverage.html":{}}}],["accepted",{"_index":275,"title":{},"body":{"interfaces/FileFilter.html":{}}}],["accessors",{"_index":334,"title":{},"body":{"classes/LineRenderer.html":{}}}],["aliases",{"_index":753,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["all.file",{"_index":9,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/FileFilterFactory.html":{},"coverage.html":{}}}],["alt",{"_index":503,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["always",{"_index":467,"title":{},"body":{"classes/PositiveSiblingCondition.html":{}}}],["andconstraint",{"_index":41,"title":{"classes/AndConstraint.html":{}},"body":{"classes/AndConstraint.html":{},"classes/ConfigConstraintFactory.html":{},"coverage.html":{}}}],["andconstraint(...this.recursivebuild(...configelement",{"_index":118,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["andconstraint(...this.recursivebuild(config",{"_index":108,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["append",{"_index":367,"title":{},"body":{"classes/LineRenderer.html":{}}}],["appended",{"_index":371,"title":{},"body":{"classes/LineRenderer.html":{}}}],["array",{"_index":177,"title":{},"body":{"classes/Convertor.html":{}}}],["arror",{"_index":675,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["arrow",{"_index":393,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["ast",{"_index":678,"title":{},"body":{"index.html":{}}}],["asymetric_right",{"_index":498,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["asymmetric",{"_index":497,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["base",{"_index":129,"title":{},"body":{"classes/Constraint.html":{}}}],["basecycledeclarationgraphblock",{"_index":558,"title":{},"body":{"coverage.html":{}}}],["based",{"_index":258,"title":{},"body":{"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"interfaces/SiblingCondition.html":{}}}],["baseexitdeclarationgraphblock",{"_index":564,"title":{},"body":{"coverage.html":{}}}],["between",{"_index":317,"title":{},"body":{"classes/LineRenderer.html":{}}}],["binary_expression_declaration",{"_index":654,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["binaryexpressiondeclarationgraphblock",{"_index":569,"title":{},"body":{"coverage.html":{}}}],["block",{"_index":180,"title":{},"body":{"classes/Convertor.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/OfKindSiblingCondition.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{}}}],["block.kind",{"_index":442,"title":{},"body":{"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{}}}],["block.sibling",{"_index":434,"title":{},"body":{"classes/NotEmptyBlockSiblingCondition.html":{},"coverage.html":{}}}],["block.ts",{"_index":563,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["block_declaration",{"_index":655,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["blockdeclarationgraphblock",{"_index":573,"title":{},"body":{"coverage.html":{}}}],["blockidgenerator",{"_index":67,"title":{"interfaces/BlockIdGenerator.html":{}},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{}}}],["blockkind",{"_index":441,"title":{},"body":{"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["blockkind.empty_declaration",{"_index":445,"title":{},"body":{"classes/NotEmptyBlockSiblingCondition.html":{}}}],["blockkind.for_declaration",{"_index":774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blockkind.for_in_declaration",{"_index":775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blockkind.for_of_declaration",{"_index":776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blockkinds",{"_index":453,"title":{},"body":{"classes/OfKindSiblingCondition.html":{}}}],["blocks",{"_index":192,"title":{},"body":{"classes/Convertor.html":{},"interfaces/GraphResult.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"interfaces/SiblingCondition.html":{}}}],["blocks/base",{"_index":554,"title":{},"body":{"coverage.html":{}}}],["blocks/binary",{"_index":567,"title":{},"body":{"coverage.html":{}}}],["blocks/block",{"_index":572,"title":{},"body":{"coverage.html":{}}}],["blocks/break",{"_index":576,"title":{},"body":{"coverage.html":{}}}],["blocks/case",{"_index":578,"title":{},"body":{"coverage.html":{}}}],["blocks/continue",{"_index":582,"title":{},"body":{"coverage.html":{}}}],["blocks/empty.graph",{"_index":584,"title":{},"body":{"coverage.html":{}}}],["blocks/for",{"_index":586,"title":{},"body":{"coverage.html":{}}}],["blocks/graph",{"_index":591,"title":{},"body":{"coverage.html":{}}}],["blocks/if",{"_index":595,"title":{},"body":{"coverage.html":{}}}],["blocks/method",{"_index":599,"title":{},"body":{"coverage.html":{}}}],["blocks/named",{"_index":602,"title":{},"body":{"coverage.html":{}}}],["blocks/parallel",{"_index":603,"title":{},"body":{"coverage.html":{}}}],["blocks/renderer/line",{"_index":313,"title":{},"body":{"classes/LineRenderer.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["blocks/renderer/shape",{"_index":472,"title":{},"body":{"classes/ShapeRenderer.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["blocks/return",{"_index":605,"title":{},"body":{"coverage.html":{}}}],["blocks/switch",{"_index":607,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["blocks/text.graph",{"_index":611,"title":{},"body":{"coverage.html":{}}}],["blocks/throw",{"_index":613,"title":{},"body":{"coverage.html":{}}}],["blocks/try",{"_index":615,"title":{},"body":{"coverage.html":{}}}],["blocks/variable",{"_index":620,"title":{},"body":{"coverage.html":{}}}],["boolean",{"_index":30,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/EndsWithConstraint.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{}}}],["break",{"_index":710,"title":{},"body":{"index.html":{}}}],["break_declaration",{"_index":656,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["breakdeclarationgraphblock",{"_index":577,"title":{},"body":{"coverage.html":{}}}],["build",{"_index":87,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["build(config",{"_index":91,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["buildconstraint",{"_index":89,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["buildconstraint(config",{"_index":95,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["builder",{"_index":86,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"classes/LineRenderer.html":{}}}],["builder/config",{"_index":150,"title":{},"body":{"classes/ConstraintFileFilter.html":{}}}],["call",{"_index":709,"title":{},"body":{"index.html":{}}}],["call.graph",{"_index":600,"title":{},"body":{"coverage.html":{}}}],["calling",{"_index":523,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{}}}],["case",{"_index":117,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"classes/LineRenderer.html":{},"index.html":{}}}],["case_declaration",{"_index":665,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["casedeclarationgraphblock",{"_index":579,"title":{},"body":{"coverage.html":{}}}],["casemap",{"_index":754,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["catch",{"_index":616,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["chalk",{"_index":637,"title":{},"body":{"dependencies.html":{}}}],["check",{"_index":157,"title":{},"body":{"classes/ContainsConstraint.html":{},"classes/EndsWithConstraint.html":{},"classes/StartsWithConstraint.html":{}}}],["checked",{"_index":515,"title":{},"body":{"interfaces/SiblingCondition.html":{}}}],["checks",{"_index":449,"title":{},"body":{"classes/OfKindSiblingCondition.html":{}}}],["child",{"_index":512,"title":{},"body":{"interfaces/SiblingCondition.html":{}}}],["circle",{"_index":496,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["class",{"_index":0,"title":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"classes/FileFilterFactory.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{}},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"classes/FileFilterFactory.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{}}}],["classblocks",{"_index":206,"title":{},"body":{"classes/Convertor.html":{}}}],["classdeclaration",{"_index":187,"title":{},"body":{"classes/Convertor.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"classes/FileFilterFactory.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{},"index.html":{},"overview.html":{}}}],["clear",{"_index":639,"title":{},"body":{"dependencies.html":{}}}],["cli",{"_index":635,"title":{},"body":{"dependencies.html":{}}}],["code",{"_index":682,"title":{},"body":{"index.html":{}}}],["codeparser",{"_index":169,"title":{},"body":{"classes/Convertor.html":{},"coverage.html":{}}}],["codeparser(idgenerator",{"_index":196,"title":{},"body":{"classes/Convertor.html":{}}}],["commander",{"_index":641,"title":{},"body":{"dependencies.html":{}}}],["condition",{"_index":466,"title":{},"body":{"classes/PositiveSiblingCondition.html":{},"interfaces/SiblingCondition.html":{},"index.html":{}}}],["condition.ts",{"_index":435,"title":{},"body":{"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"coverage.html":{}}}],["condition.ts:10",{"_index":452,"title":{},"body":{"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{}}}],["condition.ts:16",{"_index":454,"title":{},"body":{"classes/OfKindSiblingCondition.html":{}}}],["condition.ts:7",{"_index":439,"title":{},"body":{"classes/NotEmptyBlockSiblingCondition.html":{}}}],["conditions",{"_index":140,"title":{},"body":{"classes/ConstraintFileFilter.html":{},"interfaces/FileFilter.html":{},"index.html":{}}}],["config",{"_index":94,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"classes/FileFilterFactory.html":{}}}],["config.json",{"_index":702,"title":{},"body":{"index.html":{}}}],["config[constraintname",{"_index":115,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["config_constraint_factory",{"_index":142,"title":{},"body":{"classes/ConstraintFileFilter.html":{}}}],["configconstraintfactory",{"_index":81,"title":{"classes/ConfigConstraintFactory.html":{}},"body":{"classes/ConfigConstraintFactory.html":{},"classes/ConstraintFileFilter.html":{},"coverage.html":{}}}],["configelement",{"_index":114,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["configpath",{"_index":280,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["configuration",{"_index":85,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["conjunction",{"_index":43,"title":{},"body":{"classes/AndConstraint.html":{}}}],["connection",{"_index":370,"title":{},"body":{"classes/LineRenderer.html":{}}}],["console.log('\\tgraph",{"_index":254,"title":{},"body":{"classes/Exporter.html":{}}}],["console.log(`found",{"_index":240,"title":{},"body":{"classes/Exporter.html":{}}}],["console.log(`writing",{"_index":246,"title":{},"body":{"classes/Exporter.html":{}}}],["const",{"_index":110,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/FileFilterFactory.html":{},"classes/LineRenderer.html":{}}}],["constraint",{"_index":44,"title":{"classes/Constraint.html":{}},"body":{"classes/AndConstraint.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/EndsWithConstraint.html":{},"classes/NotConstraint.html":{},"classes/OrConstraint.html":{},"classes/StartsWithConstraint.html":{},"coverage.html":{}}}],["constraint.factory",{"_index":151,"title":{},"body":{"classes/ConstraintFileFilter.html":{}}}],["constraint.factory.ts",{"_index":83,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"coverage.html":{}}}],["constraint.factory.ts:16",{"_index":93,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["constraint.factory.ts:20",{"_index":100,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["constraint.factory.ts:33",{"_index":98,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["constraint.inconstraint(value",{"_index":65,"title":{},"body":{"classes/AndConstraint.html":{},"classes/OrConstraint.html":{}}}],["constraint:11",{"_index":161,"title":{},"body":{"classes/ContainsConstraint.html":{},"classes/EndsWithConstraint.html":{},"classes/NotConstraint.html":{},"classes/StartsWithConstraint.html":{}}}],["constraint:15",{"_index":461,"title":{},"body":{"classes/OrConstraint.html":{}}}],["constraint:16",{"_index":58,"title":{},"body":{"classes/AndConstraint.html":{}}}],["constraintfilefilter",{"_index":138,"title":{"classes/ConstraintFileFilter.html":{}},"body":{"classes/ConstraintFileFilter.html":{},"classes/FileFilterFactory.html":{},"coverage.html":{}}}],["constraintfilefilter(json.parse(filecontent",{"_index":294,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["constraintfilefilter.config_constraint_factory.build(filefilterconfig",{"_index":154,"title":{},"body":{"classes/ConstraintFileFilter.html":{}}}],["constraintname",{"_index":96,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["constraintnames",{"_index":111,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["constraints",{"_index":54,"title":{},"body":{"classes/AndConstraint.html":{},"classes/ConfigConstraintFactory.html":{},"classes/OrConstraint.html":{}}}],["constraints.push(this.buildconstraint(constraint",{"_index":113,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["constructor",{"_index":51,"title":{},"body":{"classes/AndConstraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/StartsWithConstraint.html":{}}}],["constructor(...blockkinds",{"_index":455,"title":{},"body":{"classes/OfKindSiblingCondition.html":{}}}],["constructor(...constraints",{"_index":60,"title":{},"body":{"classes/AndConstraint.html":{},"classes/OrConstraint.html":{}}}],["constructor(blockkinds",{"_index":451,"title":{},"body":{"classes/OfKindSiblingCondition.html":{}}}],["constructor(constraint",{"_index":428,"title":{},"body":{"classes/NotConstraint.html":{}}}],["constructor(constraints",{"_index":52,"title":{},"body":{"classes/AndConstraint.html":{},"classes/OrConstraint.html":{}}}],["constructor(contains",{"_index":159,"title":{},"body":{"classes/ContainsConstraint.html":{}}}],["constructor(endswith",{"_index":218,"title":{},"body":{"classes/EndsWithConstraint.html":{}}}],["constructor(externalfilefilterpath",{"_index":261,"title":{},"body":{"classes/ExternalFileFilter.html":{}}}],["constructor(filefilterconfig",{"_index":143,"title":{},"body":{"classes/ConstraintFileFilter.html":{}}}],["constructor(lhsid",{"_index":339,"title":{},"body":{"classes/LineRenderer.html":{}}}],["constructor(outputrootpath",{"_index":227,"title":{},"body":{"classes/Exporter.html":{}}}],["constructor(private",{"_index":152,"title":{},"body":{"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/StartsWithConstraint.html":{}}}],["constructor(sourcefiles",{"_index":171,"title":{},"body":{"classes/Convertor.html":{}}}],["constructor(startswith",{"_index":519,"title":{},"body":{"classes/StartsWithConstraint.html":{}}}],["constructs",{"_index":708,"title":{},"body":{"index.html":{}}}],["contain",{"_index":743,"title":{},"body":{"index.html":{}}}],["contains",{"_index":122,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"classes/ContainsConstraint.html":{},"index.html":{}}}],["containsconstraint",{"_index":101,"title":{"classes/ContainsConstraint.html":{}},"body":{"classes/ConfigConstraintFactory.html":{},"classes/ContainsConstraint.html":{},"coverage.html":{}}}],["containsconstraint(configelement",{"_index":123,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["content",{"_index":247,"title":{},"body":{"classes/Exporter.html":{}}}],["continue",{"_index":200,"title":{},"body":{"classes/Convertor.html":{},"index.html":{}}}],["continue_declaration",{"_index":657,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["continuedeclarationgraphblock",{"_index":583,"title":{},"body":{"coverage.html":{}}}],["convert",{"_index":170,"title":{},"body":{"classes/Convertor.html":{}}}],["converting",{"_index":166,"title":{},"body":{"classes/Convertor.html":{}}}],["convertor",{"_index":163,"title":{"classes/Convertor.html":{}},"body":{"classes/Convertor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["convertor(project.getsourcefiles",{"_index":762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["convertor.convert",{"_index":767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["correct",{"_index":225,"title":{},"body":{"classes/Exporter.html":{}}}],["counter",{"_index":306,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{}}}],["coverage",{"_index":531,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":278,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["create(cwd",{"_index":279,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["creates",{"_index":174,"title":{},"body":{"classes/Convertor.html":{},"classes/LineRenderer.html":{}}}],["cross",{"_index":395,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["crypto",{"_index":526,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{}}}],["cwd",{"_index":282,"title":{},"body":{"classes/FileFilterFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cycle",{"_index":555,"title":{},"body":{"coverage.html":{}}}],["cycle_16",{"_index":727,"title":{},"body":{"index.html":{}}}],["cycle_block_kind",{"_index":543,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cycles",{"_index":711,"title":{},"body":{"index.html":{}}}],["cylinder",{"_index":494,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["cylindrical",{"_index":493,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["d",{"_index":699,"title":{},"body":{"index.html":{}}}],["decides",{"_index":273,"title":{},"body":{"interfaces/FileFilter.html":{}}}],["declaration",{"_index":556,"title":{},"body":{"coverage.html":{}}}],["declaration.graph",{"_index":562,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["default",{"_index":146,"title":{},"body":{"classes/ConstraintFileFilter.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["default='incremental",{"_index":705,"title":{},"body":{"index.html":{}}}],["defined",{"_index":21,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"interfaces/BlockIdGenerator.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{},"index.html":{}}}],["defines",{"_index":697,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":632,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["dependency",{"_index":691,"title":{},"body":{"index.html":{}}}],["describing",{"_index":73,"title":{},"body":{"interfaces/BlockIdGenerator.html":{}}}],["description",{"_index":11,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"interfaces/BlockIdGenerator.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["dev",{"_index":690,"title":{},"body":{"index.html":{}}}],["direction",{"_index":722,"title":{},"body":{"index.html":{}}}],["directory",{"_index":700,"title":{},"body":{"index.html":{}}}],["disjunction",{"_index":459,"title":{},"body":{"classes/OrConstraint.html":{}}}],["documentation",{"_index":532,"title":{},"body":{"coverage.html":{}}}],["dot",{"_index":326,"title":{},"body":{"classes/LineRenderer.html":{}}}],["dotted",{"_index":397,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["each",{"_index":185,"title":{},"body":{"classes/Convertor.html":{},"index.html":{}}}],["edges",{"_index":486,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["empty",{"_index":433,"title":{},"body":{"classes/NotEmptyBlockSiblingCondition.html":{},"coverage.html":{}}}],["empty_declaration",{"_index":658,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["emptygraphblock",{"_index":585,"title":{},"body":{"coverage.html":{}}}],["encoding",{"_index":251,"title":{},"body":{"classes/Exporter.html":{},"classes/FileFilterFactory.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":733,"title":{},"body":{"index.html":{}}}],["endrendered",{"_index":738,"title":{},"body":{"index.html":{}}}],["ends",{"_index":217,"title":{},"body":{"classes/EndsWithConstraint.html":{},"index.html":{}}}],["endswith",{"_index":126,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"classes/EndsWithConstraint.html":{},"index.html":{}}}],["endswithconstraint",{"_index":102,"title":{"classes/EndsWithConstraint.html":{}},"body":{"classes/ConfigConstraintFactory.html":{},"classes/EndsWithConstraint.html":{},"coverage.html":{}}}],["endswithconstraint(configelement",{"_index":127,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["entity",{"_index":747,"title":{},"body":{"index.html":{}}}],["enum",{"_index":391,"title":{},"body":{"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{}}}],["enumerations",{"_index":650,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error('file",{"_index":290,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["error('unsupported",{"_index":297,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["event",{"_index":746,"title":{},"body":{"index.html":{}}}],["example",{"_index":714,"title":{},"body":{"index.html":{}}}],["existing",{"_index":372,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/typealiases.html":{}}}],["exists",{"_index":291,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["exit",{"_index":561,"title":{},"body":{"coverage.html":{}}}],["export",{"_index":36,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"interfaces/BlockIdGenerator.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["export(graphresults",{"_index":233,"title":{},"body":{"classes/Exporter.html":{}}}],["exporter",{"_index":221,"title":{"classes/Exporter.html":{}},"body":{"classes/Exporter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["exporter(options['output",{"_index":764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exporting",{"_index":223,"title":{},"body":{"classes/Exporter.html":{}}}],["exports",{"_index":235,"title":{},"body":{"classes/Exporter.html":{}}}],["expression",{"_index":568,"title":{},"body":{"coverage.html":{}}}],["extends",{"_index":45,"title":{},"body":{"classes/AndConstraint.html":{},"classes/ContainsConstraint.html":{},"classes/EndsWithConstraint.html":{},"classes/NotConstraint.html":{},"classes/OrConstraint.html":{},"classes/StartsWithConstraint.html":{}}}],["external",{"_index":259,"title":{},"body":{"classes/ExternalFileFilter.html":{}}}],["externalfilefilter",{"_index":256,"title":{"classes/ExternalFileFilter.html":{}},"body":{"classes/ExternalFileFilter.html":{},"classes/FileFilterFactory.html":{},"coverage.html":{}}}],["externalfilefilter(absoluteconfigpath",{"_index":296,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["externalfilefilterpath",{"_index":263,"title":{},"body":{"classes/ExternalFileFilter.html":{}}}],["f",{"_index":706,"title":{},"body":{"index.html":{}}}],["false",{"_index":135,"title":{},"body":{"classes/Constraint.html":{},"interfaces/FileFilter.html":{},"classes/LineRenderer.html":{}}}],["figlet",{"_index":643,"title":{},"body":{"dependencies.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"interfaces/BlockIdGenerator.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{},"index.html":{}}}],["filecontent",{"_index":248,"title":{},"body":{"classes/Exporter.html":{},"classes/FileFilterFactory.html":{}}}],["filefilter",{"_index":13,"title":{"interfaces/FileFilter.html":{}},"body":{"classes/AcceptAllFileFilter.html":{},"classes/ConstraintFileFilter.html":{},"classes/Convertor.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["filefilterconfig",{"_index":145,"title":{},"body":{"classes/ConstraintFileFilter.html":{},"miscellaneous/typealiases.html":{}}}],["filefilterconfigkey",{"_index":97,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"miscellaneous/typealiases.html":{}}}],["filefilterconfigtype",{"_index":92,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"classes/ConstraintFileFilter.html":{},"miscellaneous/typealiases.html":{}}}],["filefilterconfigtype[])[0",{"_index":121,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["filefilterfactory",{"_index":276,"title":{"classes/FileFilterFactory.html":{}},"body":{"classes/FileFilterFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filefilterfactory.create(cwd",{"_index":765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["files",{"_index":167,"title":{},"body":{"classes/Convertor.html":{},"interfaces/FileFilter.html":{},"index.html":{}}}],["filter",{"_index":34,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/ConstraintFileFilter.html":{},"classes/Convertor.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"index.html":{}}}],["filter.config",{"_index":106,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"classes/ConstraintFileFilter.html":{}}}],["filter.config.ts",{"_index":757,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["filter.factory.ts",{"_index":277,"title":{},"body":{"classes/FileFilterFactory.html":{},"coverage.html":{}}}],["filter.factory.ts:11",{"_index":281,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["filter.ts",{"_index":10,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/ConstraintFileFilter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"coverage.html":{}}}],["filter.ts:10",{"_index":262,"title":{},"body":{"classes/ExternalFileFilter.html":{}}}],["filter.ts:13",{"_index":147,"title":{},"body":{"classes/ConstraintFileFilter.html":{}}}],["filter.ts:14",{"_index":272,"title":{},"body":{"interfaces/FileFilter.html":{}}}],["filter.ts:15",{"_index":144,"title":{},"body":{"classes/ConstraintFileFilter.html":{}}}],["filter.ts:16",{"_index":264,"title":{},"body":{"classes/ExternalFileFilter.html":{}}}],["filter.ts:21",{"_index":149,"title":{},"body":{"classes/ConstraintFileFilter.html":{}}}],["filter.ts:9",{"_index":22,"title":{},"body":{"classes/AcceptAllFileFilter.html":{}}}],["filter/constraint/conditional/and.constraint.ts",{"_index":42,"title":{},"body":{"classes/AndConstraint.html":{},"coverage.html":{}}}],["filter/constraint/conditional/and.constraint.ts:8",{"_index":53,"title":{},"body":{"classes/AndConstraint.html":{}}}],["filter/constraint/conditional/not.constraint.ts",{"_index":426,"title":{},"body":{"classes/NotConstraint.html":{},"coverage.html":{}}}],["filter/constraint/conditional/not.constraint.ts:6",{"_index":429,"title":{},"body":{"classes/NotConstraint.html":{}}}],["filter/constraint/conditional/or.constraint.ts",{"_index":458,"title":{},"body":{"classes/OrConstraint.html":{},"coverage.html":{}}}],["filter/constraint/conditional/or.constraint.ts:7",{"_index":460,"title":{},"body":{"classes/OrConstraint.html":{}}}],["filter/constraint/constraint.ts",{"_index":128,"title":{},"body":{"classes/Constraint.html":{},"coverage.html":{}}}],["filter/constraint/constraint.ts:12",{"_index":131,"title":{},"body":{"classes/Constraint.html":{}}}],["filter/constraint/impl/contains.constraint.ts",{"_index":156,"title":{},"body":{"classes/ContainsConstraint.html":{},"coverage.html":{}}}],["filter/constraint/impl/contains.constraint.ts:6",{"_index":160,"title":{},"body":{"classes/ContainsConstraint.html":{}}}],["filter/constraint/impl/ends",{"_index":215,"title":{},"body":{"classes/EndsWithConstraint.html":{},"coverage.html":{}}}],["filter/constraint/impl/starts",{"_index":517,"title":{},"body":{"classes/StartsWithConstraint.html":{},"coverage.html":{}}}],["filter/file",{"_index":268,"title":{},"body":{"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["filter/impl/accept",{"_index":8,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"coverage.html":{}}}],["filter/impl/builder/config",{"_index":82,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"coverage.html":{}}}],["filter/impl/constraint.file",{"_index":139,"title":{},"body":{"classes/ConstraintFileFilter.html":{},"coverage.html":{}}}],["filter/impl/external.file",{"_index":257,"title":{},"body":{"classes/ExternalFileFilter.html":{},"coverage.html":{}}}],["filtering",{"_index":270,"title":{},"body":{"interfaces/FileFilter.html":{}}}],["finaly",{"_index":713,"title":{},"body":{"index.html":{}}}],["find",{"_index":698,"title":{},"body":{"index.html":{}}}],["flowchart",{"_index":718,"title":{},"body":{"index.html":{}}}],["flowcharts",{"_index":685,"title":{},"body":{"index.html":{}}}],["foo",{"_index":716,"title":{},"body":{"index.html":{}}}],["for_declaration",{"_index":659,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["for_in_declaration",{"_index":660,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["for_of_declaration",{"_index":661,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fordeclarationgraphblock",{"_index":587,"title":{},"body":{"coverage.html":{}}}],["forindeclarationgraphblock",{"_index":588,"title":{},"body":{"coverage.html":{}}}],["form",{"_index":495,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["forofdeclarationgraphblock",{"_index":589,"title":{},"body":{"coverage.html":{}}}],["forxdeclarationgraphblock",{"_index":590,"title":{},"body":{"coverage.html":{}}}],["fs",{"_index":239,"title":{},"body":{"classes/Exporter.html":{},"classes/FileFilterFactory.html":{}}}],["fs.existssync(absoluteconfigpath",{"_index":288,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["fs.readfilesync(absoluteconfigpath",{"_index":293,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["fulfilled",{"_index":687,"title":{},"body":{"index.html":{}}}],["fun",{"_index":715,"title":{},"body":{"index.html":{}}}],["function",{"_index":525,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["functional",{"_index":742,"title":{},"body":{"index.html":{}}}],["functionblocks",{"_index":204,"title":{},"body":{"classes/Convertor.html":{}}}],["functiondeclaration",{"_index":188,"title":{},"body":{"classes/Convertor.html":{}}}],["functions",{"_index":201,"title":{},"body":{"classes/Convertor.html":{},"index.html":{}}}],["g",{"_index":529,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{},"index.html":{}}}],["generate",{"_index":77,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["generated",{"_index":224,"title":{},"body":{"classes/Exporter.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{},"index.html":{}}}],["generates",{"_index":79,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{}}}],["generator",{"_index":76,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{},"index.html":{}}}],["generator.ts",{"_index":72,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{}}}],["generator.ts:10",{"_index":78,"title":{},"body":{"interfaces/BlockIdGenerator.html":{}}}],["generator.ts:13",{"_index":309,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["generator.ts:15",{"_index":310,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{}}}],["generator/block",{"_index":71,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"coverage.html":{}}}],["generator/incremental",{"_index":302,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{},"coverage.html":{}}}],["generator/uuid",{"_index":522,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{},"coverage.html":{}}}],["getisdotted",{"_index":389,"title":{},"body":{"classes/LineRenderer.html":{}}}],["getlhshead",{"_index":385,"title":{},"body":{"classes/LineRenderer.html":{}}}],["getlinepiece",{"_index":383,"title":{},"body":{"classes/LineRenderer.html":{}}}],["getrhshead",{"_index":387,"title":{},"body":{"classes/LineRenderer.html":{}}}],["getting",{"_index":676,"title":{"index.html":{}},"body":{}}],["graph",{"_index":168,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"interfaces/SiblingCondition.html":{}}}],["graph.block.ts",{"_index":557,"title":{},"body":{"coverage.html":{}}}],["graph.render(0",{"_index":249,"title":{},"body":{"classes/Exporter.html":{}}}],["graphblock",{"_index":75,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"interfaces/GraphResult.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"interfaces/SiblingCondition.html":{},"coverage.html":{}}}],["graphparentgraphblock",{"_index":189,"title":{},"body":{"classes/Convertor.html":{},"coverage.html":{}}}],["graphparentgraphblock(this.idgenerator.generate",{"_index":214,"title":{},"body":{"classes/Convertor.html":{}}}],["graphresult",{"_index":186,"title":{"interfaces/GraphResult.html":{}},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"coverage.html":{}}}],["graphresults",{"_index":236,"title":{},"body":{"classes/Exporter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["graphresults.length",{"_index":241,"title":{},"body":{"classes/Exporter.html":{}}}],["graphs",{"_index":197,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{}}}],["graphs.push",{"_index":213,"title":{},"body":{"classes/Convertor.html":{}}}],["handler.ts",{"_index":745,"title":{},"body":{"index.html":{}}}],["head",{"_index":350,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["hexagon",{"_index":500,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["https://mermaid",{"_index":476,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["id",{"_index":70,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{},"index.html":{}}}],["identifier",{"_index":533,"title":{},"body":{"coverage.html":{}}}],["idgenerator",{"_index":172,"title":{},"body":{"classes/Convertor.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ids",{"_index":181,"title":{},"body":{"classes/Convertor.html":{},"classes/IncrementalBlockIdGenerator.html":{}}}],["if_else_declaration",{"_index":663,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ifelsedeclarationgraphblock",{"_index":596,"title":{},"body":{"coverage.html":{}}}],["impl/accept",{"_index":283,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["impl/constraint.file",{"_index":284,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["impl/external.file",{"_index":285,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["implementation",{"_index":12,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/ConstraintFileFilter.html":{},"classes/ExternalFileFilter.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["implements",{"_index":15,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/ConstraintFileFilter.html":{},"classes/ExternalFileFilter.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["import",{"_index":31,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"classes/ConfigConstraintFactory.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["inconstraint",{"_index":50,"title":{},"body":{"classes/AndConstraint.html":{},"classes/Constraint.html":{},"classes/ContainsConstraint.html":{},"classes/EndsWithConstraint.html":{},"classes/NotConstraint.html":{},"classes/OrConstraint.html":{},"classes/StartsWithConstraint.html":{}}}],["inconstraint(value",{"_index":55,"title":{},"body":{"classes/AndConstraint.html":{},"classes/Constraint.html":{},"classes/ContainsConstraint.html":{},"classes/EndsWithConstraint.html":{},"classes/NotConstraint.html":{},"classes/OrConstraint.html":{},"classes/StartsWithConstraint.html":{}}}],["incremental",{"_index":704,"title":{},"body":{"index.html":{}}}],["incrementalblockidgenerator",{"_index":301,"title":{"classes/IncrementalBlockIdGenerator.html":{}},"body":{"classes/IncrementalBlockIdGenerator.html":{},"coverage.html":{}}}],["incrementation",{"_index":304,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"interfaces/BlockIdGenerator.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"interfaces/BlockIdGenerator.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["inherited",{"_index":57,"title":{},"body":{"classes/AndConstraint.html":{},"classes/ContainsConstraint.html":{},"classes/EndsWithConstraint.html":{},"classes/NotConstraint.html":{},"classes/OrConstraint.html":{},"classes/StartsWithConstraint.html":{}}}],["initialize",{"_index":229,"title":{},"body":{"classes/Exporter.html":{}}}],["install",{"_index":689,"title":{},"body":{"index.html":{}}}],["instance",{"_index":175,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/LineRenderer.html":{}}}],["interface",{"_index":66,"title":{"interfaces/BlockIdGenerator.html":{},"interfaces/FileFilter.html":{},"interfaces/GraphResult.html":{},"interfaces/SiblingCondition.html":{}},"body":{"interfaces/BlockIdGenerator.html":{},"interfaces/FileFilter.html":{},"interfaces/GraphResult.html":{},"interfaces/SiblingCondition.html":{},"coverage.html":{}}}],["interfaces",{"_index":68,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"interfaces/FileFilter.html":{},"interfaces/GraphResult.html":{},"interfaces/SiblingCondition.html":{},"overview.html":{}}}],["internal",{"_index":274,"title":{},"body":{"interfaces/FileFilter.html":{}}}],["isdotted",{"_index":338,"title":{},"body":{"classes/LineRenderer.html":{}}}],["isvalid",{"_index":437,"title":{},"body":{"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"interfaces/SiblingCondition.html":{}}}],["isvalid(_sibling",{"_index":469,"title":{},"body":{"classes/PositiveSiblingCondition.html":{}}}],["isvalid(sibling",{"_index":438,"title":{},"body":{"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"interfaces/SiblingCondition.html":{}}}],["iterates",{"_index":183,"title":{},"body":{"classes/Convertor.html":{}}}],["js.github.io/mermaid/#/flowchart?id=a",{"_index":484,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["js.github.io/mermaid/#/flowchart?id=node",{"_index":477,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["js.github.io/mermaid/#/flowchart?id=parallelogram",{"_index":501,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["js.github.io/mermaid/#/flowchart?id=trapezoid",{"_index":505,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["js/mermaid",{"_index":634,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":739,"title":{},"body":{"index.html":{}}}],["json.parse",{"_index":771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kind.sibling",{"_index":448,"title":{},"body":{"classes/OfKindSiblingCondition.html":{},"coverage.html":{}}}],["left",{"_index":343,"title":{},"body":{"classes/LineRenderer.html":{}}}],["length",{"_index":353,"title":{},"body":{"classes/LineRenderer.html":{}}}],["lhshead",{"_index":336,"title":{},"body":{"classes/LineRenderer.html":{}}}],["lhsid",{"_index":342,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line",{"_index":316,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["line_head",{"_index":347,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["line_head.arrow",{"_index":417,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line_head.cross",{"_index":418,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line_head.none",{"_index":348,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line_head.point",{"_index":420,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line_style",{"_index":354,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["line_style.dotted",{"_index":423,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line_style.normal",{"_index":355,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line_width",{"_index":358,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["line_width.normal",{"_index":359,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line_width.thick",{"_index":415,"title":{},"body":{"classes/LineRenderer.html":{}}}],["linear",{"_index":303,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{}}}],["linepiece",{"_index":335,"title":{},"body":{"classes/LineRenderer.html":{}}}],["linerenderer",{"_index":312,"title":{"classes/LineRenderer.html":{}},"body":{"classes/LineRenderer.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["linerenderermodifier",{"_index":425,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/typealiases.html":{}}}],["link",{"_index":35,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["list.graph",{"_index":621,"title":{},"body":{"coverage.html":{}}}],["literal",{"_index":759,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["logic",{"_index":260,"title":{},"body":{"classes/ExternalFileFilter.html":{}}}],["logical",{"_index":740,"title":{},"body":{"index.html":{}}}],["loop_16",{"_index":731,"title":{},"body":{"index.html":{}}}],["matching",{"_index":40,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"interfaces/BlockIdGenerator.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mermaid",{"_index":633,"title":{},"body":{"dependencies.html":{}}}],["mermaid.js",{"_index":475,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["mermaidjs",{"_index":683,"title":{},"body":{"index.html":{}}}],["met",{"_index":468,"title":{},"body":{"classes/PositiveSiblingCondition.html":{}}}],["method",{"_index":74,"title":{},"body":{"interfaces/BlockIdGenerator.html":{}}}],["method_call_declaration",{"_index":666,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["methodcallgraphblock",{"_index":601,"title":{},"body":{"coverage.html":{}}}],["methods",{"_index":17,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"interfaces/BlockIdGenerator.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["miscellaneous",{"_index":649,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mmd",{"_index":245,"title":{},"body":{"classes/Exporter.html":{},"index.html":{}}}],["mmd/src/app/block",{"_index":69,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{}}}],["mmd/src/app/block.kind.ts",{"_index":541,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mmd/src/app/conditions/impl/not",{"_index":432,"title":{},"body":{"classes/NotEmptyBlockSiblingCondition.html":{},"coverage.html":{}}}],["mmd/src/app/conditions/impl/of",{"_index":447,"title":{},"body":{"classes/OfKindSiblingCondition.html":{},"coverage.html":{}}}],["mmd/src/app/conditions/impl/positive.sibling",{"_index":464,"title":{},"body":{"classes/PositiveSiblingCondition.html":{},"coverage.html":{}}}],["mmd/src/app/conditions/sibling.condition.ts",{"_index":509,"title":{},"body":{"interfaces/SiblingCondition.html":{},"coverage.html":{}}}],["mmd/src/app/conditions/sibling.condition.ts:13",{"_index":513,"title":{},"body":{"interfaces/SiblingCondition.html":{}}}],["mmd/src/app/convertor.ts",{"_index":164,"title":{},"body":{"classes/Convertor.html":{},"coverage.html":{}}}],["mmd/src/app/convertor.ts:22",{"_index":173,"title":{},"body":{"classes/Convertor.html":{}}}],["mmd/src/app/convertor.ts:38",{"_index":182,"title":{},"body":{"classes/Convertor.html":{}}}],["mmd/src/app/exporter.ts",{"_index":222,"title":{},"body":{"classes/Exporter.html":{},"coverage.html":{}}}],["mmd/src/app/exporter.ts:10",{"_index":228,"title":{},"body":{"classes/Exporter.html":{}}}],["mmd/src/app/exporter.ts:24",{"_index":234,"title":{},"body":{"classes/Exporter.html":{}}}],["mmd/src/app/file",{"_index":7,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/EndsWithConstraint.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"classes/NotConstraint.html":{},"classes/OrConstraint.html":{},"classes/StartsWithConstraint.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["mmd/src/app/graph",{"_index":298,"title":{},"body":{"interfaces/GraphResult.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["mmd/src/index.ts",{"_index":626,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mmdpath",{"_index":242,"title":{},"body":{"classes/Exporter.html":{}}}],["modifier",{"_index":424,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/typealiases.html":{}}}],["modules",{"_index":748,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["morph",{"_index":33,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/ConstraintFileFilter.html":{},"classes/Convertor.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"interfaces/GraphResult.html":{},"dependencies.html":{}}}],["name",{"_index":25,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{}}}],["named_block_declaration",{"_index":667,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["namedblockdeclarationgraphblock",{"_index":190,"title":{},"body":{"classes/Convertor.html":{},"coverage.html":{}}}],["negate",{"_index":741,"title":{},"body":{"index.html":{}}}],["negation",{"_index":427,"title":{},"body":{"classes/NotConstraint.html":{}}}],["new",{"_index":107,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"classes/ConstraintFileFilter.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/FileFilterFactory.html":{},"classes/LineRenderer.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":686,"title":{},"body":{"index.html":{}}}],["node",{"_index":344,"title":{},"body":{"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{}}}],["nodes",{"_index":319,"title":{},"body":{"classes/LineRenderer.html":{}}}],["none",{"_index":392,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["normal",{"_index":396,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["notconstraint",{"_index":103,"title":{"classes/NotConstraint.html":{}},"body":{"classes/ConfigConstraintFactory.html":{},"classes/NotConstraint.html":{},"coverage.html":{}}}],["notconstraint(this.recursivebuild(...configelement",{"_index":120,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["notemptyblocksiblingcondition",{"_index":431,"title":{"classes/NotEmptyBlockSiblingCondition.html":{}},"body":{"classes/NotEmptyBlockSiblingCondition.html":{},"coverage.html":{}}}],["npm",{"_index":692,"title":{},"body":{"index.html":{}}}],["npx",{"_index":695,"title":{},"body":{"index.html":{}}}],["number",{"_index":307,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{}}}],["o",{"_index":421,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["object.keys(constraint",{"_index":112,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["ofkindsiblingcondition",{"_index":446,"title":{"classes/OfKindSiblingCondition.html":{}},"body":{"classes/OfKindSiblingCondition.html":{},"coverage.html":{}}}],["one",{"_index":300,"title":{},"body":{"interfaces/GraphResult.html":{},"classes/LineRenderer.html":{},"index.html":{}}}],["optional",{"_index":27,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{}}}],["options",{"_index":365,"title":{},"body":{"classes/LineRenderer.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["options['filefilter",{"_index":766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["orconstraint",{"_index":104,"title":{"classes/OrConstraint.html":{}},"body":{"classes/ConfigConstraintFactory.html":{},"classes/OrConstraint.html":{},"coverage.html":{}}}],["orconstraint(...this.recursivebuild(...configelement",{"_index":119,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["otherwise",{"_index":136,"title":{},"body":{"classes/Constraint.html":{},"interfaces/FileFilter.html":{},"classes/LineRenderer.html":{}}}],["output",{"_index":226,"title":{},"body":{"classes/Exporter.html":{}}}],["outputrootpath",{"_index":230,"title":{},"body":{"classes/Exporter.html":{}}}],["override",{"_index":63,"title":{},"body":{"classes/AndConstraint.html":{},"classes/ContainsConstraint.html":{},"classes/EndsWithConstraint.html":{},"classes/NotConstraint.html":{},"classes/OrConstraint.html":{},"classes/StartsWithConstraint.html":{}}}],["overview",{"_index":749,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":696,"title":{},"body":{"index.html":{}}}],["package",{"_index":527,"title":{"dependencies.html":{}},"body":{"classes/UuidBlockIdGenerator.html":{}}}],["package.json",{"_index":773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../block.kind.ts",{"_index":651,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["packages/.../file",{"_index":756,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../index.ts",{"_index":761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../line",{"_index":652,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["packages/.../shape",{"_index":653,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["packages/.../switch",{"_index":755,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/ast",{"_index":6,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"interfaces/BlockIdGenerator.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["parallel_block_declaration",{"_index":668,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["parallelblock",{"_index":211,"title":{},"body":{"classes/Convertor.html":{}}}],["parallelblockdeclarationgraphblock",{"_index":191,"title":{},"body":{"classes/Convertor.html":{},"coverage.html":{}}}],["parallelblockdeclarationgraphblock(this.idgenerator.generate",{"_index":212,"title":{},"body":{"classes/Convertor.html":{}}}],["paralleogram",{"_index":502,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["paralleogram_alt",{"_index":504,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["param",{"_index":137,"title":{},"body":{"classes/Constraint.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/FileFilter.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{}}}],["parameters",{"_index":23,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{}}}],["parent.graph",{"_index":594,"title":{},"body":{"coverage.html":{}}}],["parent_declaration",{"_index":662,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["parentclassesblock",{"_index":210,"title":{},"body":{"classes/Convertor.html":{}}}],["parentfunctionsblock",{"_index":208,"title":{},"body":{"classes/Convertor.html":{}}}],["parser",{"_index":193,"title":{},"body":{"classes/Convertor.html":{}}}],["parser/parser.ts",{"_index":624,"title":{},"body":{"coverage.html":{}}}],["path",{"_index":231,"title":{},"body":{"classes/Exporter.html":{},"classes/FileFilterFactory.html":{},"dependencies.html":{},"index.html":{}}}],["path.join(cwd",{"_index":287,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["path.resolve(sourcefile.getdirectorypath",{"_index":243,"title":{},"body":{"classes/Exporter.html":{}}}],["point",{"_index":394,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["positive",{"_index":465,"title":{},"body":{"classes/PositiveSiblingCondition.html":{}}}],["positivesiblingcondition",{"_index":463,"title":{"classes/PositiveSiblingCondition.html":{}},"body":{"classes/PositiveSiblingCondition.html":{},"coverage.html":{}}}],["private",{"_index":47,"title":{},"body":{"classes/AndConstraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/Convertor.html":{},"classes/ExternalFileFilter.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/ShapeRenderer.html":{}}}],["process",{"_index":178,"title":{},"body":{"classes/Convertor.html":{}}}],["process.cwd",{"_index":763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["processed",{"_index":179,"title":{},"body":{"classes/Convertor.html":{}}}],["program.opts",{"_index":768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":627,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["project(tsmorphoptions",{"_index":769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projectoptions",{"_index":770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properties",{"_index":46,"title":{},"body":{"classes/AndConstraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/Convertor.html":{},"classes/ExternalFileFilter.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/ShapeRenderer.html":{}}}],["protected",{"_index":88,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"classes/LineRenderer.html":{}}}],["public",{"_index":18,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"classes/FileFilterFactory.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/StartsWithConstraint.html":{}}}],["randomuuid",{"_index":524,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{}}}],["randomuuid().replace",{"_index":528,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{}}}],["readfilesync(path.resolve(__dirname",{"_index":772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["readonly",{"_index":48,"title":{},"body":{"classes/AndConstraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/ShapeRenderer.html":{},"classes/StartsWithConstraint.html":{}}}],["recursivebuild",{"_index":90,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["recursivebuild(...config",{"_index":109,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["recursivebuild(config",{"_index":99,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["recursivepartial",{"_index":758,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["render",{"_index":327,"title":{},"body":{"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{}}}],["render(text",{"_index":481,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["rendered",{"_index":255,"title":{},"body":{"classes/Exporter.html":{},"index.html":{}}}],["renderer",{"_index":315,"title":{},"body":{"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{}}}],["renderer.ts",{"_index":314,"title":{},"body":{"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["renderer.ts:106",{"_index":382,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:116",{"_index":378,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:126",{"_index":380,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:136",{"_index":376,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:144",{"_index":364,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:173",{"_index":384,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:179",{"_index":386,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:192",{"_index":388,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:205",{"_index":363,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:209",{"_index":390,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:45",{"_index":346,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:49",{"_index":349,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:53",{"_index":362,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:57",{"_index":356,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:61",{"_index":360,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:63",{"_index":480,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["renderer.ts:65",{"_index":341,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:71",{"_index":483,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["renderer.ts:81",{"_index":368,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:96",{"_index":374,"title":{},"body":{"classes/LineRenderer.html":{}}}],["repeat",{"_index":414,"title":{},"body":{"classes/LineRenderer.html":{}}}],["repeat(repeat",{"_index":416,"title":{},"body":{"classes/LineRenderer.html":{}}}],["repeat(this._linelength",{"_index":422,"title":{},"body":{"classes/LineRenderer.html":{}}}],["representing",{"_index":84,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"interfaces/GraphResult.html":{},"interfaces/SiblingCondition.html":{}}}],["represents",{"_index":269,"title":{},"body":{"interfaces/FileFilter.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{}}}],["require(externalfilefilterpath",{"_index":266,"title":{},"body":{"classes/ExternalFileFilter.html":{}}}],["resolving",{"_index":510,"title":{},"body":{"interfaces/SiblingCondition.html":{}}}],["responsible",{"_index":165,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{}}}],["result",{"_index":194,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"classes/LineRenderer.html":{},"index.html":{}}}],["result.ts",{"_index":299,"title":{},"body":{"interfaces/GraphResult.html":{},"coverage.html":{}}}],["results",{"_index":39,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"interfaces/BlockIdGenerator.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":37,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"classes/ConfigConstraintFactory.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/ExternalFileFilter.html":{},"classes/FileFilterFactory.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{},"index.html":{}}}],["return_declaration",{"_index":669,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["returndeclarationgraphblock",{"_index":606,"title":{},"body":{"coverage.html":{}}}],["returns",{"_index":29,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"interfaces/BlockIdGenerator.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["rhombus",{"_index":499,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["rhshead",{"_index":337,"title":{},"body":{"classes/LineRenderer.html":{}}}],["rhsid",{"_index":340,"title":{},"body":{"classes/LineRenderer.html":{}}}],["right",{"_index":345,"title":{},"body":{"classes/LineRenderer.html":{}}}],["root",{"_index":232,"title":{},"body":{"classes/Exporter.html":{}}}],["round",{"_index":485,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["round_edges",{"_index":487,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["rules",{"_index":707,"title":{},"body":{"index.html":{}}}],["run",{"_index":694,"title":{},"body":{"index.html":{}}}],["set",{"_index":369,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setconnectiondescription",{"_index":328,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setconnectiondescription(value",{"_index":366,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlhshead",{"_index":329,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlhshead(value",{"_index":373,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlinelength",{"_index":330,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlinelength(value",{"_index":375,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlinestyle",{"_index":331,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlinestyle(value",{"_index":377,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlinewidth",{"_index":332,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlinewidth(value",{"_index":379,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setrhshead",{"_index":333,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setrhshead(value",{"_index":381,"title":{},"body":{"classes/LineRenderer.html":{}}}],["shape",{"_index":482,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["shape.valueof().replace(shaperenderer.text_placeholder",{"_index":508,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["shaped",{"_index":490,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["shaperenderer",{"_index":471,"title":{"classes/ShapeRenderer.html":{}},"body":{"classes/ShapeRenderer.html":{},"coverage.html":{}}}],["shapes",{"_index":474,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["shared",{"_index":305,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{}}}],["sharp_edges",{"_index":488,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["sibling",{"_index":440,"title":{},"body":{"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"interfaces/SiblingCondition.html":{}}}],["sibling.blockkind",{"_index":444,"title":{},"body":{"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{}}}],["sibling.condition",{"_index":443,"title":{},"body":{"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{}}}],["siblingcondition",{"_index":436,"title":{"interfaces/SiblingCondition.html":{}},"body":{"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"interfaces/SiblingCondition.html":{},"coverage.html":{}}}],["siblings",{"_index":511,"title":{},"body":{"interfaces/SiblingCondition.html":{}}}],["side",{"_index":351,"title":{},"body":{"classes/LineRenderer.html":{}}}],["simmple",{"_index":744,"title":{},"body":{"index.html":{}}}],["simple",{"_index":679,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"interfaces/BlockIdGenerator.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{},"index.html":{}}}],["sourcefile",{"_index":20,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/ConstraintFileFilter.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"interfaces/GraphResult.html":{}}}],["sourcefile.getbasenamewithoutextension",{"_index":244,"title":{},"body":{"classes/Exporter.html":{}}}],["sourcefile.getclasses",{"_index":203,"title":{},"body":{"classes/Convertor.html":{}}}],["sourcefile.getfunctions",{"_index":202,"title":{},"body":{"classes/Convertor.html":{}}}],["sourcefiles",{"_index":176,"title":{},"body":{"classes/Convertor.html":{}}}],["specific",{"_index":158,"title":{},"body":{"classes/ContainsConstraint.html":{},"classes/EndsWithConstraint.html":{},"classes/StartsWithConstraint.html":{}}}],["stadium",{"_index":489,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["stadium_shaped",{"_index":491,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["start",{"_index":518,"title":{},"body":{"classes/StartsWithConstraint.html":{}}}],["started",{"_index":677,"title":{"index.html":{}},"body":{}}],["startswith",{"_index":124,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"classes/StartsWithConstraint.html":{}}}],["startswithconstraint",{"_index":105,"title":{"classes/StartsWithConstraint.html":{}},"body":{"classes/ConfigConstraintFactory.html":{},"classes/StartsWithConstraint.html":{},"coverage.html":{}}}],["startswithconstraint(configelement",{"_index":125,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["statements",{"_index":534,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":141,"title":{},"body":{"classes/ConstraintFileFilter.html":{},"classes/ShapeRenderer.html":{}}}],["stechy1/ast",{"_index":693,"title":{},"body":{"index.html":{}}}],["string",{"_index":56,"title":{},"body":{"classes/AndConstraint.html":{},"interfaces/BlockIdGenerator.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ContainsConstraint.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"classes/FileFilterFactory.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/OrConstraint.html":{},"classes/ShapeRenderer.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{},"index.html":{}}}],["style",{"_index":357,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["subgraph",{"_index":720,"title":{},"body":{"index.html":{}}}],["subroutine",{"_index":492,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["super",{"_index":61,"title":{},"body":{"classes/AndConstraint.html":{},"classes/ContainsConstraint.html":{},"classes/EndsWithConstraint.html":{},"classes/NotConstraint.html":{},"classes/OrConstraint.html":{},"classes/StartsWithConstraint.html":{}}}],["supported",{"_index":473,"title":{},"body":{"classes/ShapeRenderer.html":{},"index.html":{}}}],["switch",{"_index":116,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"classes/LineRenderer.html":{},"index.html":{}}}],["switch_declaration",{"_index":664,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["switchdeclarationgraphblock",{"_index":608,"title":{},"body":{"coverage.html":{}}}],["syntax",{"_index":684,"title":{},"body":{"index.html":{}}}],["table",{"_index":631,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":630,"title":{},"body":{"coverage.html":{}}}],["tb",{"_index":723,"title":{},"body":{"index.html":{}}}],["td",{"_index":719,"title":{},"body":{"index.html":{}}}],["test",{"_index":132,"title":{},"body":{"classes/Constraint.html":{}}}],["tested",{"_index":134,"title":{},"body":{"classes/Constraint.html":{},"classes/ContainsConstraint.html":{},"interfaces/SiblingCondition.html":{},"index.html":{}}}],["text",{"_index":479,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["text_declaration",{"_index":670,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["text_placeholder",{"_index":478,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["textgraphblock",{"_index":612,"title":{},"body":{"coverage.html":{}}}],["thick",{"_index":398,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["this._blockkinds",{"_index":456,"title":{},"body":{"classes/OfKindSiblingCondition.html":{}}}],["this._blockkinds.some((block",{"_index":457,"title":{},"body":{"classes/OfKindSiblingCondition.html":{}}}],["this._connectiondescription",{"_index":399,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this._connectiondescription}${value",{"_index":400,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this._constraints",{"_index":62,"title":{},"body":{"classes/AndConstraint.html":{},"classes/OrConstraint.html":{}}}],["this._constraints.every((constraint",{"_index":64,"title":{},"body":{"classes/AndConstraint.html":{}}}],["this._constraints.some((constraint",{"_index":462,"title":{},"body":{"classes/OrConstraint.html":{}}}],["this._lhshead",{"_index":401,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this._linelength",{"_index":405,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this._linestyle",{"_index":403,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this._linewidth",{"_index":404,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this._rhshead",{"_index":402,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.codeparser",{"_index":195,"title":{},"body":{"classes/Convertor.html":{}}}],["this.codeparser.processclasses(classes",{"_index":207,"title":{},"body":{"classes/Convertor.html":{}}}],["this.codeparser.processfunctions(functions",{"_index":205,"title":{},"body":{"classes/Convertor.html":{}}}],["this.constraint",{"_index":153,"title":{},"body":{"classes/ConstraintFileFilter.html":{}}}],["this.constraint.inconstraint(file.getfilepath",{"_index":155,"title":{},"body":{"classes/ConstraintFileFilter.html":{}}}],["this.constraint.inconstraint(value",{"_index":430,"title":{},"body":{"classes/NotConstraint.html":{}}}],["this.counter",{"_index":311,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{}}}],["this.dot",{"_index":410,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.externalfilefilter",{"_index":265,"title":{},"body":{"classes/ExternalFileFilter.html":{}}}],["this.externalfilefilter.accept(file",{"_index":267,"title":{},"body":{"classes/ExternalFileFilter.html":{}}}],["this.filefilter.accept(sourcefile",{"_index":199,"title":{},"body":{"classes/Convertor.html":{}}}],["this.idgenerator.generate",{"_index":209,"title":{},"body":{"classes/Convertor.html":{}}}],["this.isdotted",{"_index":409,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.lhshead",{"_index":407,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.lhsid",{"_index":406,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.linepiece",{"_index":408,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.rhshead",{"_index":412,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.rhsid",{"_index":413,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.sourcefiles",{"_index":198,"title":{},"body":{"classes/Convertor.html":{}}}],["through",{"_index":184,"title":{},"body":{"classes/Convertor.html":{}}}],["throw",{"_index":289,"title":{},"body":{"classes/FileFilterFactory.html":{},"index.html":{}}}],["throw_declaration",{"_index":671,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["throwdeclarationgraphblock",{"_index":614,"title":{},"body":{"coverage.html":{}}}],["tmplinelength",{"_index":411,"title":{},"body":{"classes/LineRenderer.html":{}}}],["transform",{"_index":681,"title":{},"body":{"index.html":{}}}],["transformed",{"_index":717,"title":{},"body":{"index.html":{}}}],["trapezoid",{"_index":506,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["trapezoid_alt",{"_index":507,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["true",{"_index":38,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/Constraint.html":{},"interfaces/FileFilter.html":{},"classes/LineRenderer.html":{},"classes/PositiveSiblingCondition.html":{}}}],["try",{"_index":712,"title":{},"body":{"index.html":{}}}],["try_catch_declaration",{"_index":672,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["trycatchdeclarationgraphblock",{"_index":617,"title":{},"body":{"coverage.html":{}}}],["ts",{"_index":32,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/ConstraintFileFilter.html":{},"classes/Convertor.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"interfaces/GraphResult.html":{},"dependencies.html":{},"index.html":{}}}],["tsconfig",{"_index":701,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":647,"title":{},"body":{"dependencies.html":{}}}],["tsmorphoptions",{"_index":628,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["two",{"_index":318,"title":{},"body":{"classes/LineRenderer.html":{}}}],["type",{"_index":26,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":752,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["unique",{"_index":80,"title":{},"body":{"interfaces/BlockIdGenerator.html":{}}}],["unwanted",{"_index":271,"title":{},"body":{"interfaces/FileFilter.html":{}}}],["usage",{"_index":688,"title":{},"body":{"index.html":{}}}],["used",{"_index":514,"title":{},"body":{"interfaces/SiblingCondition.html":{}}}],["utf",{"_index":252,"title":{},"body":{"classes/Exporter.html":{},"classes/FileFilterFactory.html":{},"miscellaneous/variables.html":{}}}],["utility",{"_index":680,"title":{},"body":{"index.html":{}}}],["uuid",{"_index":703,"title":{},"body":{"index.html":{}}}],["uuidblockidgenerator",{"_index":521,"title":{"classes/UuidBlockIdGenerator.html":{}},"body":{"classes/UuidBlockIdGenerator.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["valid",{"_index":516,"title":{},"body":{"interfaces/SiblingCondition.html":{}}}],["value",{"_index":59,"title":{},"body":{"classes/AndConstraint.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/EndsWithConstraint.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/OrConstraint.html":{},"classes/ShapeRenderer.html":{},"classes/StartsWithConstraint.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.endswith(this.endswith",{"_index":220,"title":{},"body":{"classes/EndsWithConstraint.html":{}}}],["value.includes(this.contains",{"_index":162,"title":{},"body":{"classes/ContainsConstraint.html":{}}}],["value.startswith(this.startswith",{"_index":520,"title":{},"body":{"classes/StartsWithConstraint.html":{}}}],["variable",{"_index":542,"title":{},"body":{"coverage.html":{}}}],["variable_declaration",{"_index":673,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["variable_list_declaration",{"_index":674,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["variabledeclarationgraphblock",{"_index":623,"title":{},"body":{"coverage.html":{}}}],["variabledeclarationlistgraphblock",{"_index":622,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":760,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":629,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":237,"title":{},"body":{"classes/Exporter.html":{}}}],["whether",{"_index":133,"title":{},"body":{"classes/Constraint.html":{},"classes/ContainsConstraint.html":{},"classes/EndsWithConstraint.html":{},"interfaces/FileFilter.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{}}}],["width",{"_index":361,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["with.constraint.ts",{"_index":216,"title":{},"body":{"classes/EndsWithConstraint.html":{},"classes/StartsWithConstraint.html":{},"coverage.html":{}}}],["with.constraint.ts:6",{"_index":219,"title":{},"body":{"classes/EndsWithConstraint.html":{},"classes/StartsWithConstraint.html":{}}}],["writefilesync",{"_index":238,"title":{},"body":{"classes/Exporter.html":{}}}],["writefilesync(mmdpath",{"_index":250,"title":{},"body":{"classes/Exporter.html":{}}}],["x",{"_index":419,"title":{},"body":{"classes/LineRenderer.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AcceptAllFileFilter.html":{"url":"classes/AcceptAllFileFilter.html","title":"class - AcceptAllFileFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcceptAllFileFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/file-filter/impl/accept-all.file-filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Implementation of FileFilter which accept every file.\n\n            \n\n\n            \n                Implements\n            \n            \n                            FileFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                accept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        accept\n                        \n                    \n                \n            \n            \n                \n                    \n                    accept(_file: SourceFile)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/file-filter/impl/accept-all.file-filter.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _file\n                                    \n                                            SourceFile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SourceFile } from 'ts-morph';\n\nimport { FileFilter } from '../file-filter';\n\n/**\n * Implementation of {@link FileFilter} which accept every file.\n */\nexport class AcceptAllFileFilter implements FileFilter {\n  public accept(_file: SourceFile): boolean {\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AndConstraint.html":{"url":"classes/AndConstraint.html","title":"class - AndConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AndConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/file-filter/constraint/conditional/and.constraint.ts\n        \n\n\n            \n                Description\n            \n            \n                Conjunction Constraint.\n\n            \n\n            \n                Extends\n            \n            \n                        Constraint\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _constraints\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    \n                                inConstraint\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(constraints: Constraint[])\n                    \n                \n                        \n                            \n                                Defined in packages/ast-to-mmd/src/app/file-filter/constraint/conditional/and.constraint.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        constraints\n                                                  \n                                                        \n                                                                        Constraint[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _constraints\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Constraint[]\n\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/file-filter/constraint/conditional/and.constraint.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                        inConstraint\n                        \n                    \n                \n            \n            \n                \n                    \n                    inConstraint(value: string)\n                \n            \n\n\n            \n                \n                    Inherited from         Constraint\n\n                \n            \n            \n                \n                        Defined in         Constraint:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Constraint } from '../constraint';\n\n/**\n * Conjunction {@link Constraint}.\n */\nexport class AndConstraint extends Constraint {\n\n  private readonly _constraints: Constraint[];\n\n  constructor(...constraints: Constraint[]) {\n    super();\n\n    this._constraints = constraints;\n  }\n\n  public override inConstraint(value: string): boolean {\n    return this._constraints.every((constraint: Constraint) => constraint.inConstraint(value));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BlockIdGenerator.html":{"url":"interfaces/BlockIdGenerator.html","title":"interface - BlockIdGenerator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BlockIdGenerator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/block-id-generator/block-id-generator.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface describing method for GraphBlock ID generator\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        generate\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generate\n                        \n                    \n                \n            \n            \n                \ngenerate()\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/block-id-generator/block-id-generator.ts:10\n                \n            \n\n\n            \n                \n                    Generates ID.\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Unique ID.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface BlockIdGenerator {\n  /**\n   * Generates ID.\n   *\n   * @returns {string} Unique ID.\n   */\n  generate(): string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigConstraintFactory.html":{"url":"classes/ConfigConstraintFactory.html","title":"class - ConfigConstraintFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigConstraintFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/file-filter/impl/builder/config-constraint.factory.ts\n        \n\n\n            \n                Description\n            \n            \n                Class representing configuration constraint builder.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                build\n                            \n                            \n                                    Protected\n                                buildConstraint\n                            \n                            \n                                    Protected\n                                recursiveBuild\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        build\n                        \n                    \n                \n            \n            \n                \n                    \n                    build(config: FileFilterConfigType)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/file-filter/impl/builder/config-constraint.factory.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                FileFilterConfigType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Constraint\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        buildConstraint\n                        \n                    \n                \n            \n            \n                \n                    \n                    buildConstraint(config: FileFilterConfigType, constraintName: FileFilterConfigKey)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/file-filter/impl/builder/config-constraint.factory.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                FileFilterConfigType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    constraintName\n                                    \n                                                FileFilterConfigKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Constraint\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        recursiveBuild\n                        \n                    \n                \n            \n            \n                \n                    \n                    recursiveBuild(config: FileFilterConfigType[])\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/file-filter/impl/builder/config-constraint.factory.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                FileFilterConfigType[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Constraint[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  AndConstraint,\n  Constraint,\n  ContainsConstraint,\n  EndsWithConstraint,\n  NotConstraint,\n  OrConstraint, StartsWithConstraint\n} from '../../constraint';\nimport { FileFilterConfigKey, FileFilterConfigType } from '../../file-filter.config';\n\n/**\n * Class representing configuration constraint builder.\n */\nexport class ConfigConstraintFactory {\n\n  public build(config: FileFilterConfigType): Constraint {\n    return new AndConstraint(...this.recursiveBuild(config));\n  }\n\n  protected recursiveBuild(...config: FileFilterConfigType[]): Constraint[] {\n    const constraints: Constraint[] = [];\n\n    for (const constraint of config) {\n      const constraintNames = Object.keys(constraint);\n      for (const constraintName of constraintNames) {\n        constraints.push(this.buildConstraint(constraint, constraintName as FileFilterConfigKey));\n      }\n    }\n\n    return constraints;\n  }\n\n  protected buildConstraint(config: FileFilterConfigType, constraintName: FileFilterConfigKey): Constraint {\n    const configElement = config[constraintName];\n    switch (constraintName) {\n      case 'and':\n        return new AndConstraint(...this.recursiveBuild(...configElement as FileFilterConfigType[]));\n      case 'or':\n        return new OrConstraint(...this.recursiveBuild(...configElement as FileFilterConfigType[]));\n      case 'not':\n        return new NotConstraint(this.recursiveBuild(...configElement as FileFilterConfigType[])[0]);\n      case 'contains':\n        return new ContainsConstraint(configElement as string);\n      case 'startsWith':\n        return new StartsWithConstraint(configElement as string);\n      case 'endsWith':\n        return new EndsWithConstraint(configElement as string);\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Constraint.html":{"url":"classes/Constraint.html","title":"class - Constraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Constraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/file-filter/constraint/constraint.ts\n        \n\n\n            \n                Description\n            \n            \n                Base class representing constraint.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                inConstraint\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        inConstraint\n                        \n                    \n                \n            \n            \n                \n                    \n                    inConstraint(value: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/file-filter/constraint/constraint.ts:12\n                \n            \n\n\n            \n                \n                    Test whether the value is in Constraint.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Tested value.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        True, when the value is in {@link Constraint}, False otherwise.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export abstract class Constraint {\n\n  /**\n   * Test whether the value is in {@link Constraint}.\n   *\n   * @param value {string} Tested value.\n   * @returns True, when the value is in {@link Constraint}, False otherwise.\n   */\n  public abstract inConstraint(value: string): boolean;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConstraintFileFilter.html":{"url":"classes/ConstraintFileFilter.html","title":"class - ConstraintFileFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConstraintFileFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/file-filter/impl/constraint.file-filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Implementation of FileFilter where conditions are defined constraint.\n\n            \n\n\n            \n                Implements\n            \n            \n                            FileFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                CONFIG_CONSTRAINT_FACTORY\n                            \n                            \n                                    Private\n                                    Readonly\n                                constraint\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                accept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fileFilterConfig: FileFilterConfigType)\n                    \n                \n                        \n                            \n                                Defined in packages/ast-to-mmd/src/app/file-filter/impl/constraint.file-filter.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileFilterConfig\n                                                  \n                                                        \n                                                                        FileFilterConfigType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        CONFIG_CONSTRAINT_FACTORY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigConstraintFactory\n\n                    \n                \n                \n                    \n                        Default value : new ConfigConstraintFactory()\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/file-filter/impl/constraint.file-filter.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        constraint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Constraint\n\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/file-filter/impl/constraint.file-filter.ts:15\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        accept\n                        \n                    \n                \n            \n            \n                \n                    \n                    accept(file: SourceFile)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/file-filter/impl/constraint.file-filter.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            SourceFile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SourceFile } from 'ts-morph';\n\nimport { Constraint } from '../constraint';\nimport { FileFilter } from '../file-filter';\nimport { FileFilterConfigType } from '../file-filter.config';\nimport { ConfigConstraintFactory } from './builder/config-constraint.factory';\n\n/**\n * Implementation of {@link FileFilter} where conditions are defined constraint.\n */\nexport class ConstraintFileFilter implements FileFilter {\n\n  private static readonly CONFIG_CONSTRAINT_FACTORY: ConfigConstraintFactory = new ConfigConstraintFactory();\n\n  private readonly constraint: Constraint;\n\n  constructor(private readonly fileFilterConfig: FileFilterConfigType) {\n    this.constraint = ConstraintFileFilter.CONFIG_CONSTRAINT_FACTORY.build(fileFilterConfig);\n  }\n\n  public accept(file: SourceFile): boolean {\n    return this.constraint.inConstraint(file.getFilePath());\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContainsConstraint.html":{"url":"classes/ContainsConstraint.html","title":"class - ContainsConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContainsConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/file-filter/constraint/impl/contains.constraint.ts\n        \n\n\n            \n                Description\n            \n            \n                Constraint which check whether the tested value contains specific value.\n\n            \n\n            \n                Extends\n            \n            \n                        Constraint\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    \n                                inConstraint\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(contains: string)\n                    \n                \n                        \n                            \n                                Defined in packages/ast-to-mmd/src/app/file-filter/constraint/impl/contains.constraint.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        contains\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                        inConstraint\n                        \n                    \n                \n            \n            \n                \n                    \n                    inConstraint(value: string)\n                \n            \n\n\n            \n                \n                    Inherited from         Constraint\n\n                \n            \n            \n                \n                        Defined in         Constraint:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Constraint } from '../constraint';\n\n/**\n * {@link Constraint} which check whether the tested value contains specific value.\n */\nexport class ContainsConstraint extends Constraint {\n  constructor(private readonly contains: string) {\n    super();\n  }\n\n  public override inConstraint(value: string): boolean {\n    return value.includes(this.contains);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Convertor.html":{"url":"classes/Convertor.html","title":"class - Convertor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Convertor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/convertor.ts\n        \n\n\n            \n                Description\n            \n            \n                Class responsible for converting defined source files to graph.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                codeParser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                convert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sourceFiles: SourceFile[], fileFilter: FileFilter, idGenerator: BlockIdGenerator)\n                    \n                \n                        \n                            \n                                Defined in packages/ast-to-mmd/src/app/convertor.ts:22\n                            \n                        \n\n                \n                    \n                            Creates new instance of Convertor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sourceFiles\n                                                  \n                                                        \n                                                                    SourceFile[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                []SourceFile Array of source files to process.\n\n                                                        \n                                                \n                                                \n                                                        fileFilter\n                                                  \n                                                        \n                                                                        FileFilter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FileFilter Filter of processed files.\n\n                                                        \n                                                \n                                                \n                                                        idGenerator\n                                                  \n                                                        \n                                                                        BlockIdGenerator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                BlockIdGenerator Generator of block IDs.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        codeParser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CodeParser\n\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/convertor.ts:22\n                        \n                    \n\n            \n                \n                    Instance of CodeParser\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        convert\n                        \n                    \n                \n            \n            \n                \n                    \n                    convert()\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/convertor.ts:38\n                \n            \n\n\n            \n                \n                    Iterates through source files and generates graph for each file.\n\n\n                    \n                        Returns :         GraphResult[]\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ClassDeclaration, FunctionDeclaration, SourceFile } from 'ts-morph';\n\nimport { BlockIdGenerator } from './block-id-generator';\nimport { FileFilter } from './file-filter';\nimport {\n  GraphBlock,\n  GraphParentGraphBlock,\n  NamedBlockDeclarationGraphBlock,\n  ParallelBlockDeclarationGraphBlock,\n} from './graph-blocks';\nimport { CodeParser } from './graph-parser';\nimport { GraphResult } from './graph-result';\n\n/**\n * Class responsible for converting defined source files to graph.\n */\nexport class Convertor {\n\n  /**\n   * Instance of {@link CodeParser}\n   */\n  private readonly codeParser: CodeParser;\n\n  /**\n   * Creates new instance of {@link Convertor}.\n   *\n   * @param sourceFiles {@link SourceFile[]} Array of source files to process.\n   * @param fileFilter {@link FileFilter} Filter of processed files.\n   * @param idGenerator {@link BlockIdGenerator} Generator of block IDs.\n   */\n  constructor(private readonly sourceFiles: SourceFile[], private readonly fileFilter: FileFilter, private readonly idGenerator: BlockIdGenerator) {\n    this.codeParser = new CodeParser(idGenerator);\n  }\n\n  /**\n   * Iterates through source files and generates graph for each file.\n   */\n  public convert(): GraphResult[] {\n    const graphs: GraphResult[] = [];\n    for (const sourceFile of this.sourceFiles) {\n      if (!this.fileFilter.accept(sourceFile)) {\n        continue;\n      }\n\n      const functions: FunctionDeclaration[] = sourceFile.getFunctions();\n      const classes: ClassDeclaration[] = sourceFile.getClasses();\n\n      const functionBlocks: GraphBlock = this.codeParser.processFunctions(functions);\n      const classBlocks: GraphBlock = this.codeParser.processClasses(classes);\n\n      const parentFunctionsBlock: GraphBlock = new NamedBlockDeclarationGraphBlock(\n        this.idGenerator.generate(),\n        [functionBlocks],\n        'Functions'\n      );\n      const parentClassesBlock: GraphBlock = new NamedBlockDeclarationGraphBlock(\n        this.idGenerator.generate(),\n        [classBlocks],\n        'Classes'\n      );\n      const parallelBlock: GraphBlock = new ParallelBlockDeclarationGraphBlock(this.idGenerator.generate(), [\n        parentFunctionsBlock,\n        parentClassesBlock,\n      ]);\n\n      graphs.push({\n        sourceFile,\n        graph: new GraphParentGraphBlock(this.idGenerator.generate(), parallelBlock),\n      });\n    }\n\n    return graphs;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EndsWithConstraint.html":{"url":"classes/EndsWithConstraint.html","title":"class - EndsWithConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EndsWithConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/file-filter/constraint/impl/ends-with.constraint.ts\n        \n\n\n            \n                Description\n            \n            \n                Constraint which check whether the value ends with specific value.\n\n            \n\n            \n                Extends\n            \n            \n                        Constraint\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    \n                                inConstraint\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(endsWith: string)\n                    \n                \n                        \n                            \n                                Defined in packages/ast-to-mmd/src/app/file-filter/constraint/impl/ends-with.constraint.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        endsWith\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                        inConstraint\n                        \n                    \n                \n            \n            \n                \n                    \n                    inConstraint(value: string)\n                \n            \n\n\n            \n                \n                    Inherited from         Constraint\n\n                \n            \n            \n                \n                        Defined in         Constraint:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Constraint } from '../constraint';\n\n/**\n * {@link Constraint} which check whether the value ends with specific value.\n */\nexport class EndsWithConstraint extends Constraint {\n  constructor(private readonly endsWith: string) {\n    super();\n  }\n\n  public override inConstraint(value: string): boolean {\n    return value.endsWith(this.endsWith);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Exporter.html":{"url":"classes/Exporter.html","title":"class - Exporter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Exporter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/exporter.ts\n        \n\n\n            \n                Description\n            \n            \n                Class responsible for exporting generated graph to correct output.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                export\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(outputRootPath: string)\n                    \n                \n                        \n                            \n                                Defined in packages/ast-to-mmd/src/app/exporter.ts:10\n                            \n                        \n\n                \n                    \n                            Initialize new instance of Exporter.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        outputRootPath\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Path to root of output path.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        export\n                        \n                    \n                \n            \n            \n                \n                    \n                    export(graphResults: GraphResult[])\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/exporter.ts:24\n                \n            \n\n\n            \n                \n                    Exports graph results to defined output path.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    graphResults\n                                    \n                                                GraphResult[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        []GraphResult Graph results for export.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { writeFileSync } from 'fs';\nimport * as path from 'path';\n\nimport { GraphResult } from './graph-result';\n\n\n/**\n * Class responsible for exporting generated graph to correct output.\n */\nexport class Exporter {\n\n  /**\n   * Initialize new instance of {@link Exporter}.\n   *\n   * @param outputRootPath {string} Path to root of output path.\n   */\n  constructor(private readonly outputRootPath: string) {}\n\n  /**\n   * Exports graph results to defined output path.\n   *\n   * @param graphResults {@link GraphResult[]} Graph results for export.\n   */\n  public export(graphResults: GraphResult[]): void {\n    console.log(`Found: ${graphResults.length} graphs.`);\n\n    for (const {graph, sourceFile} of graphResults) {\n      const mmdPath = path.resolve(sourceFile.getDirectoryPath(), sourceFile.getBaseNameWithoutExtension()) + '.mmd';\n      console.log(`Writing content with graph into the file: ${mmdPath}.`);\n      const fileContent = graph.render(0);\n      writeFileSync(mmdPath, fileContent, { encoding: 'utf-8' });\n      console.log('\\tGraph rendered into the file.');\n    }\n\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExternalFileFilter.html":{"url":"classes/ExternalFileFilter.html","title":"class - ExternalFileFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExternalFileFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/file-filter/impl/external.file-filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Implementation of FileFilter which accept file based on external logic.\n\n            \n\n\n            \n                Implements\n            \n            \n                            FileFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                externalFileFilter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                accept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(externalFileFilterPath: string)\n                    \n                \n                        \n                            \n                                Defined in packages/ast-to-mmd/src/app/file-filter/impl/external.file-filter.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        externalFileFilterPath\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        externalFileFilter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileFilter\n\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/file-filter/impl/external.file-filter.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        accept\n                        \n                    \n                \n            \n            \n                \n                    \n                    accept(file: SourceFile)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/file-filter/impl/external.file-filter.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            SourceFile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SourceFile } from 'ts-morph';\n\nimport { FileFilter } from '../file-filter';\n\n/**\n * Implementation of {@link FileFilter} which accept file based on external logic.\n */\nexport class ExternalFileFilter implements FileFilter {\n\n  private readonly externalFileFilter: FileFilter;\n\n  constructor(externalFileFilterPath: string) {\n    this.externalFileFilter = require(externalFileFilterPath);\n  }\n\n  public accept(file: SourceFile): boolean {\n    return this.externalFileFilter.accept(file);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileFilter.html":{"url":"interfaces/FileFilter.html","title":"interface - FileFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/file-filter/file-filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface represents File filter for filtering unwanted files.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        accept\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        accept\n                        \n                    \n                \n            \n            \n                \naccept(file: SourceFile)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/file-filter/file-filter.ts:14\n                \n            \n\n\n            \n                \n                    Decides, whether to accept file or not based on internal conditions.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            SourceFile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        SourceFile.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        True, when file is accepted, False otherwise.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { SourceFile } from 'ts-morph';\n\n/**\n * Interface represents File filter for filtering unwanted files.\n */\nexport interface FileFilter {\n\n  /**\n   * Decides, whether to accept file or not based on internal conditions.\n   *\n   * @param file {@link SourceFile}.\n   * @returns True, when file is accepted, False otherwise.\n   */\n  accept(file: SourceFile): boolean;\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileFilterFactory.html":{"url":"classes/FileFilterFactory.html","title":"class - FileFilterFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileFilterFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/file-filter/file-filter.factory.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(cwd: string, configPath: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/file-filter/file-filter.factory.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cwd\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    configPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FileFilter\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as fs from 'fs';\nimport * as path from 'path';\n\nimport { FileFilter } from './file-filter';\nimport { AcceptAllFileFilter } from './impl/accept-all.file-filter';\nimport { ConstraintFileFilter } from './impl/constraint.file-filter';\nimport { ExternalFileFilter } from './impl/external.file-filter';\n\nexport class FileFilterFactory {\n\n  public create(cwd: string, configPath: string): FileFilter {\n    if (!configPath) {\n      return new AcceptAllFileFilter();\n    }\n\n    const absoluteConfigPath = path.join(cwd, configPath);\n    if (!fs.existsSync(absoluteConfigPath)) {\n      throw new Error('File on config path does not exists!')\n    }\n\n    if (absoluteConfigPath.endsWith('.json')) {\n      const fileContent = fs.readFileSync(absoluteConfigPath, { encoding: 'utf-8' });\n      return new ConstraintFileFilter(JSON.parse(fileContent));\n    }\n\n    if (absoluteConfigPath.endsWith('.js')) {\n      return new ExternalFileFilter(absoluteConfigPath);\n    }\n\n    throw new Error('Unsupported file!')\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphResult.html":{"url":"interfaces/GraphResult.html","title":"interface - GraphResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GraphResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/graph-result.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing one Graph result\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            graph\n                                        \n                                \n                                \n                                        \n                                            sourceFile\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        graph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        graph:         GraphBlock\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GraphBlock\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceFile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sourceFile:     SourceFile\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SourceFile\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SourceFile } from 'ts-morph';\n\nimport { GraphBlock } from './graph-blocks';\n\n/**\n * Interface representing one Graph result\n */\nexport interface GraphResult {\n  sourceFile: SourceFile;\n  graph: GraphBlock;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IncrementalBlockIdGenerator.html":{"url":"classes/IncrementalBlockIdGenerator.html","title":"class - IncrementalBlockIdGenerator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IncrementalBlockIdGenerator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/block-id-generator/incremental-block-id-generator.ts\n        \n\n\n            \n                Description\n            \n            \n                Implementation of BlockIdGenerator\nThe ID is generated by linear incrementation of shared counter.\n\n            \n\n\n            \n                Implements\n            \n            \n                            BlockIdGenerator\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                counter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        counter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/block-id-generator/incremental-block-id-generator.ts:13\n                        \n                    \n\n            \n                \n                    Counter of generated IDs\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generate\n                        \n                    \n                \n            \n            \n                \ngenerate()\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/block-id-generator/incremental-block-id-generator.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BlockIdGenerator } from './block-id-generator';\n\n/**\n * Implementation of {@link BlockIdGenerator}\n *\n *\n * The ID is generated by linear incrementation of shared counter.\n */\nexport class IncrementalBlockIdGenerator implements BlockIdGenerator {\n  /**\n   * Counter of generated IDs\n   */\n  private counter = 0;\n\n  generate(): string {\n    return `${this.counter++}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LineRenderer.html":{"url":"classes/LineRenderer.html","title":"class - LineRenderer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LineRenderer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts\n        \n\n\n            \n                Description\n            \n            \n                Class represents renderer of line between two nodes.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _connectionDescription\n                            \n                            \n                                    Private\n                                _lhsHead\n                            \n                            \n                                    Private\n                                _lineLength\n                            \n                            \n                                    Private\n                                _lineStyle\n                            \n                            \n                                    Private\n                                _lineWidth\n                            \n                            \n                                    Private\n                                _rhsHead\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                dot\n                            \n                            \n                                render\n                            \n                            \n                                setConnectionDescription\n                            \n                            \n                                setLhsHead\n                            \n                            \n                                setLineLength\n                            \n                            \n                                setLineStyle\n                            \n                            \n                                setLineWidth\n                            \n                            \n                                setRhsHead\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    linePiece\n                                \n                                \n                                    lhsHead\n                                \n                                \n                                    rhsHead\n                                \n                                \n                                    isDotted\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(lhsId: string, rhsId: string)\n                    \n                \n                        \n                            \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:65\n                            \n                        \n\n                \n                    \n                            Creates new instance of the LineRenderer.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        lhsId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ID of left node.\n\n                                                        \n                                                \n                                                \n                                                        rhsId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ID of right node.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _connectionDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:45\n                        \n                    \n\n            \n                \n                    Optional description on the line.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _lhsHead\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LINE_HEAD\n\n                    \n                \n                \n                    \n                        Default value : LINE_HEAD.NONE\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:49\n                        \n                    \n\n            \n                \n                    Type of head on left side of the line.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _lineLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:65\n                        \n                    \n\n            \n                \n                    Length of the line.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _lineStyle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LINE_STYLE\n\n                    \n                \n                \n                    \n                        Default value : LINE_STYLE.NORMAL\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:57\n                        \n                    \n\n            \n                \n                    LINE_STYLE Style of the line.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _lineWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LINE_WIDTH\n\n                    \n                \n                \n                    \n                        Default value : LINE_WIDTH.NORMAL\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:61\n                        \n                    \n\n            \n                \n                    LINE_WIDTH Width of the line.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _rhsHead\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LINE_HEAD\n\n                    \n                \n                \n                    \n                        Default value : LINE_HEAD.NONE\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:53\n                        \n                    \n\n            \n                \n                    Type of head on right side of the line.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        dot\n                        \n                    \n                \n            \n            \n                \n                    \n                    dot()\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:205\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        render\n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:144\n                \n            \n\n\n            \n                \n                    Render line with defined options.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setConnectionDescription\n                        \n                    \n                \n            \n            \n                \nsetConnectionDescription(value: string, append)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:81\n                \n            \n\n\n            \n                \n                    Set connection description on the line.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Connection description.\n\n                                    \n                                \n                                \n                                    append\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        True, when description should be appended to existing one, False otherwise.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LineRenderer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLhsHead\n                        \n                    \n                \n            \n            \n                \nsetLhsHead(value: LINE_HEAD)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:96\n                \n            \n\n\n            \n                \n                    Set type of head on left side the line.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                LINE_HEAD\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        LINE_HEAD Type of head.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LineRenderer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLineLength\n                        \n                    \n                \n            \n            \n                \nsetLineLength(value: number)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:136\n                \n            \n\n\n            \n                \n                    Set length of the line.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Length of the line.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LineRenderer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLineStyle\n                        \n                    \n                \n            \n            \n                \nsetLineStyle(value: LINE_STYLE)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:116\n                \n            \n\n\n            \n                \n                    Set style of the line.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                LINE_STYLE\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        LINE_STYLE Style of the line.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LineRenderer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLineWidth\n                        \n                    \n                \n            \n            \n                \nsetLineWidth(value: LINE_WIDTH)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:126\n                \n            \n\n\n            \n                \n                    Set width of the line.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                LINE_WIDTH\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        LINE_WIDTH Width of the line.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LineRenderer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRhsHead\n                        \n                    \n                \n            \n            \n                \nsetRhsHead(value: LINE_HEAD)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:106\n                \n            \n\n\n            \n                \n                    Set type of head on right side the line.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                LINE_HEAD\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        LINE_HEAD Type of head.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LineRenderer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        linePiece\n                    \n                \n\n                \n                    \n                        getlinePiece()\n                    \n                \n                            \n                                \n                                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:173\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        lhsHead\n                    \n                \n\n                \n                    \n                        getlhsHead()\n                    \n                \n                            \n                                \n                                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:179\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        rhsHead\n                    \n                \n\n                \n                    \n                        getrhsHead()\n                    \n                \n                            \n                                \n                                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:192\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isDotted\n                    \n                \n\n                \n                    \n                        getisDotted()\n                    \n                \n                            \n                                \n                                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:209\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        export enum LINE_HEAD {\n  NONE,\n  ARROW,\n  POINT,\n  CROSS,\n}\n\n/**\n * Style of the line.\n *\n * - NORMAL: ---\n * - DOTTED: ...\n */\nexport enum LINE_STYLE {\n  NORMAL,\n  DOTTED,\n}\n\n/**\n * Width of the line.\n *\n * - NORMAL:  ---\n * - THICK: ===\n */\nexport enum LINE_WIDTH {\n  NORMAL,\n  THICK,\n}\n\n/**\n * Class represents renderer of line between two nodes.\n */\nexport class LineRenderer {\n  /**\n   * Optional description on the line.\n   */\n  private _connectionDescription?: string;\n  /**\n   * Type of head on left side of the line.\n   */\n  private _lhsHead: LINE_HEAD = LINE_HEAD.NONE;\n  /**\n   * Type of head on right side of the line.\n   */\n  private _rhsHead: LINE_HEAD = LINE_HEAD.NONE;\n  /**\n   * {@link LINE_STYLE} Style of the line.\n   */\n  private _lineStyle: LINE_STYLE = LINE_STYLE.NORMAL;\n  /**\n   * {@link LINE_WIDTH} Width of the line.\n   */\n  private _lineWidth: LINE_WIDTH = LINE_WIDTH.NORMAL;\n  /**\n   * Length of the line.\n   */\n  private _lineLength = 1;\n\n  /**\n   * Creates new instance of the {@link LineRenderer}.\n   *\n   * @param lhsId {string} ID of left node.\n   * @param rhsId {string} ID of right node.\n   */\n  constructor(private readonly lhsId: string, private readonly rhsId: string) {}\n\n  /**\n   * Set connection description on the line.\n   *\n   * @param value {string} Connection description.\n   * @param append {boolean} True, when description should be appended to existing one, False otherwise.\n   */\n  setConnectionDescription(value: string, append = false): LineRenderer {\n    if (!this._connectionDescription) {\n      this._connectionDescription = value;\n      return this;\n    }\n\n    this._connectionDescription = append ? `${this._connectionDescription}${value}` : value;\n    return this;\n  }\n\n  /**\n   * Set type of head on left side the line.\n   *\n   * @param value {@link LINE_HEAD} Type of head.\n   */\n  setLhsHead(value: LINE_HEAD): LineRenderer {\n    this._lhsHead = value;\n    return this;\n  }\n\n  /**\n   * Set type of head on right side the line.\n   *\n   * @param value {@link LINE_HEAD} Type of head.\n   */\n  setRhsHead(value: LINE_HEAD): LineRenderer {\n    this._rhsHead = value;\n    return this;\n  }\n\n  /**\n   * Set style of the line.\n   *\n   * @param value {@link LINE_STYLE} Style of the line.\n   */\n  setLineStyle(value: LINE_STYLE): LineRenderer {\n    this._lineStyle = value;\n    return this;\n  }\n\n  /**\n   * Set width of the line.\n   *\n   * @param value {@link LINE_WIDTH} Width of the line.\n   */\n  setLineWidth(value: LINE_WIDTH): LineRenderer {\n    this._lineWidth = value;\n    return this;\n  }\n\n  /**\n   * Set length of the line.\n   *\n   * @param value {number} Length of the line.\n   */\n  setLineLength(value: number): LineRenderer {\n    this._lineLength = value;\n    return this;\n  }\n\n  /**\n   * Render line with defined options.\n   */\n  render(): string {\n    let result = `${this.lhsId} `;\n\n    result += this.lhsHead;\n    result += this.linePiece;\n    if (this.isDotted) result += this.dot();\n\n    if (this._connectionDescription) {\n      if (this.isDotted) {\n        result += ` \"${this._connectionDescription}\" `;\n      } else {\n        result += `${this.linePiece} \"${this._connectionDescription}\" ${this.linePiece}`;\n      }\n    } else {\n      const tmpLineLength = this._lineLength;\n      this._lineLength = 1;\n      result += this.linePiece;\n      this._lineLength = tmpLineLength;\n    }\n\n    if (this.isDotted) result += this.dot();\n    result += this.linePiece;\n    result += this.rhsHead;\n\n    result += ` ${this.rhsId}`;\n\n    return result;\n  }\n\n  protected get linePiece(): string {\n    let repeat = this._lineLength;\n    if (this.isDotted) repeat = 1;\n    return (this._lineWidth === LINE_WIDTH.THICK ? '=' : '-').repeat(repeat);\n  }\n\n  protected get lhsHead(): string {\n    switch (this._lhsHead) {\n      case LINE_HEAD.ARROW:\n        return '';\n      case LINE_HEAD.CROSS:\n        return 'x';\n      case LINE_HEAD.POINT:\n        return 'o';\n      default:\n        return '';\n    }\n  }\n\n  protected dot(): string {\n    return '.'.repeat(this._lineLength);\n  }\n\n  protected get isDotted(): boolean {\n    return this._lineStyle === LINE_STYLE.DOTTED;\n  }\n}\n\n/**\n * Modifier of existing {@link LineRenderer}\n */\nexport type LineRendererModifier = (builder: LineRenderer) => LineRenderer;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotConstraint.html":{"url":"classes/NotConstraint.html","title":"class - NotConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/file-filter/constraint/conditional/not.constraint.ts\n        \n\n\n            \n                Description\n            \n            \n                Negation Constraint.\n\n            \n\n            \n                Extends\n            \n            \n                        Constraint\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    \n                                inConstraint\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(constraint: Constraint)\n                    \n                \n                        \n                            \n                                Defined in packages/ast-to-mmd/src/app/file-filter/constraint/conditional/not.constraint.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        constraint\n                                                  \n                                                        \n                                                                        Constraint\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                        inConstraint\n                        \n                    \n                \n            \n            \n                \n                    \n                    inConstraint(value: string)\n                \n            \n\n\n            \n                \n                    Inherited from         Constraint\n\n                \n            \n            \n                \n                        Defined in         Constraint:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Constraint } from '../constraint';\n\n/**\n * Negation {@link Constraint}.\n */\nexport class NotConstraint extends Constraint {\n  constructor(private readonly constraint: Constraint) {\n    super();\n  }\n\n  public override inConstraint(value: string): boolean {\n    return !this.constraint.inConstraint(value);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotEmptyBlockSiblingCondition.html":{"url":"classes/NotEmptyBlockSiblingCondition.html","title":"class - NotEmptyBlockSiblingCondition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotEmptyBlockSiblingCondition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/conditions/impl/not-empty-block.sibling-condition.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            SiblingCondition\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isValid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isValid\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValid(sibling: GraphBlock)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/conditions/impl/not-empty-block.sibling-condition.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sibling\n                                    \n                                                GraphBlock\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BlockKind } from '../../block.kind';\nimport { GraphBlock } from '../../graph-blocks';\nimport { SiblingCondition } from '../sibling.condition';\n\nexport class NotEmptyBlockSiblingCondition  implements SiblingCondition {\n\n  public isValid(sibling: GraphBlock): boolean {\n    return sibling.blockKind !== BlockKind.EMPTY_DECLARATION;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OfKindSiblingCondition.html":{"url":"classes/OfKindSiblingCondition.html","title":"class - OfKindSiblingCondition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OfKindSiblingCondition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/conditions/impl/of-kind.sibling-condition.ts\n        \n\n\n            \n                Description\n            \n            \n                Implementation of SiblingCondition which checks BlockKind.\n\n            \n\n\n            \n                Implements\n            \n            \n                            SiblingCondition\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _blockKinds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isValid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(blockKinds: BlockKind[])\n                    \n                \n                        \n                            \n                                Defined in packages/ast-to-mmd/src/app/conditions/impl/of-kind.sibling-condition.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        blockKinds\n                                                  \n                                                        \n                                                                        BlockKind[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _blockKinds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BlockKind[]\n\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/conditions/impl/of-kind.sibling-condition.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isValid\n                        \n                    \n                \n            \n            \n                \nisValid(sibling: GraphBlock)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/conditions/impl/of-kind.sibling-condition.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sibling\n                                    \n                                                GraphBlock\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BlockKind } from '../../block.kind';\nimport { GraphBlock } from '../../graph-blocks';\nimport { SiblingCondition } from '../sibling.condition';\n\n/**\n * Implementation of {@link SiblingCondition} which checks {@link BlockKind}.\n */\nexport class OfKindSiblingCondition implements SiblingCondition {\n\n  private readonly _blockKinds: BlockKind[];\n\n  constructor(...blockKinds: BlockKind[]) {\n    this._blockKinds = blockKinds;\n  }\n\n  isValid(sibling: GraphBlock): boolean {\n    return this._blockKinds.some((block: BlockKind) => block === sibling.blockKind);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrConstraint.html":{"url":"classes/OrConstraint.html","title":"class - OrConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/file-filter/constraint/conditional/or.constraint.ts\n        \n\n\n            \n                Description\n            \n            \n                Disjunction Constraint.\n\n            \n\n            \n                Extends\n            \n            \n                        Constraint\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _constraints\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    \n                                inConstraint\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(constraints: Constraint[])\n                    \n                \n                        \n                            \n                                Defined in packages/ast-to-mmd/src/app/file-filter/constraint/conditional/or.constraint.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        constraints\n                                                  \n                                                        \n                                                                        Constraint[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _constraints\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Constraint[]\n\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/file-filter/constraint/conditional/or.constraint.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                        inConstraint\n                        \n                    \n                \n            \n            \n                \n                    \n                    inConstraint(value: string)\n                \n            \n\n\n            \n                \n                    Inherited from         Constraint\n\n                \n            \n            \n                \n                        Defined in         Constraint:15\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Constraint } from '../constraint';\n\n/**\n * Disjunction {@link Constraint}.\n */\nexport class OrConstraint extends Constraint {\n  private readonly _constraints: Constraint[];\n\n  constructor(...constraints: Constraint[]) {\n    super();\n\n    this._constraints = constraints;\n  }\n\n  public override inConstraint(value: string): boolean {\n    return this._constraints.some((constraint: Constraint) => constraint.inConstraint(value));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PositiveSiblingCondition.html":{"url":"classes/PositiveSiblingCondition.html","title":"class - PositiveSiblingCondition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PositiveSiblingCondition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/conditions/impl/positive.sibling-condition.ts\n        \n\n\n            \n                Description\n            \n            \n                Positive implementation of SiblingCondition.\nThe condition is always met.\n\n            \n\n\n            \n                Implements\n            \n            \n                            SiblingCondition\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isValid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isValid\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValid(_sibling: GraphBlock)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/conditions/impl/positive.sibling-condition.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _sibling\n                                    \n                                                GraphBlock\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { GraphBlock } from '../../graph-blocks';\nimport { SiblingCondition } from '../sibling.condition';\n\n/**\n * Positive implementation of {@link SiblingCondition}.\n * The condition is always met.\n */\nexport class PositiveSiblingCondition implements SiblingCondition {\n\n  public isValid(_sibling: GraphBlock): boolean {\n    return true;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShapeRenderer.html":{"url":"classes/ShapeRenderer.html","title":"class - ShapeRenderer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShapeRenderer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/graph-blocks/renderer/shape-renderer.ts\n        \n\n\n            \n                Description\n            \n            \n                Class represents renderer of supported shapes by Mermaid.js\nhttps://mermaid-js.github.io/mermaid/#/flowchart?id=node-shapes\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                TEXT_PLACEHOLDER\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        TEXT_PLACEHOLDER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '$TEXT$'\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/shape-renderer.ts:63\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        render\n                        \n                    \n                \n            \n            \n                \nrender(text: string, shape: Shape)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/shape-renderer.ts:71\n                \n            \n\n\n            \n                \n                    Render defined shape with text.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Text in the shape.\n\n                                    \n                                \n                                \n                                    shape\n                                    \n                                                Shape\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Shape Type of the shape.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export enum Shape {\n  DEFAULT = '$TEXT$',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-node-with-round-edges}\n   */\n  ROUND_EDGES = '($TEXT$)',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-node-with-text}\n   */\n  SHARP_EDGES = '[$TEXT$]',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-stadium-shaped-node}\n   */\n  STADIUM_SHAPED = '([$TEXT$])',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-node-in-a-subroutine-shape}\n   */\n  SUBROUTINE = '[[$TEXT$]]',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-node-in-a-cylindrical-shape}\n   */\n  CYLINDER = '[($TEXT$)]',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-node-in-the-form-of-a-circle}\n   */\n  CIRCLE = '(($TEXT$))',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-node-in-an-asymmetric-shape}\n   */\n  ASYMETRIC_RIGHT = '>$TEXT$]',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-node-rhombus}\n   */\n  RHOMBUS = '{$TEXT$}',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-hexagon-node}\n   */\n  HEXAGON = '{{$TEXT$}}',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=parallelogram}\n   */\n  PARALLEOGRAM = '[/$TEXT$/]',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=parallelogram-alt}\n   */\n  PARALLEOGRAM_ALT = '[\\\\$TEXT$\\\\]',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=trapezoid}\n   */\n  TRAPEZOID = '[/$TEXT$\\\\]',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=trapezoid-alt}\n   */\n  TRAPEZOID_ALT = '[\\\\$TEXT$/]',\n}\n\n/**\n * Class represents renderer of supported shapes by Mermaid.js\n *\n * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=node-shapes}\n */\nexport class ShapeRenderer {\n  private static readonly TEXT_PLACEHOLDER = '$TEXT$';\n\n  /**\n   * Render defined shape with text.\n   *\n   * @param text {string} Text in the shape.\n   * @param shape {@link Shape} Type of the shape.\n   */\n  render(text: string, shape: Shape): string {\n    return shape.valueOf().replace(ShapeRenderer.TEXT_PLACEHOLDER, `\"${text}\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SiblingCondition.html":{"url":"interfaces/SiblingCondition.html","title":"interface - SiblingCondition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SiblingCondition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/conditions/sibling.condition.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing condition for resolving siblings of defined child;\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        isValid\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isValid\n                        \n                    \n                \n            \n            \n                \nisValid(sibling: GraphBlock)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/conditions/sibling.condition.ts:13\n                \n            \n\n\n            \n                \n                    Based on used condition is checked whether the tested sibling is valid or not.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sibling\n                                    \n                                                GraphBlock\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        GraphBlock Tested sibling.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { GraphBlock } from '../graph-blocks';\n\n/**\n * Interface representing condition for resolving siblings of defined child;\n */\nexport interface SiblingCondition {\n\n  /**\n   * Based on used condition is checked whether the tested sibling is valid or not.\n   *\n   * @param sibling {@link GraphBlock} Tested sibling.\n   */\n  isValid(sibling: GraphBlock): boolean;\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StartsWithConstraint.html":{"url":"classes/StartsWithConstraint.html","title":"class - StartsWithConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StartsWithConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/file-filter/constraint/impl/starts-with.constraint.ts\n        \n\n\n            \n                Description\n            \n            \n                Constraint which check whether the value start with specific value.\n\n            \n\n            \n                Extends\n            \n            \n                        Constraint\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    \n                                inConstraint\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(startsWith: string)\n                    \n                \n                        \n                            \n                                Defined in packages/ast-to-mmd/src/app/file-filter/constraint/impl/starts-with.constraint.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        startsWith\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                        inConstraint\n                        \n                    \n                \n            \n            \n                \n                    \n                    inConstraint(value: string)\n                \n            \n\n\n            \n                \n                    Inherited from         Constraint\n\n                \n            \n            \n                \n                        Defined in         Constraint:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Constraint } from '../constraint';\n\n/**\n * {@link Constraint} which check whether the value start with specific value.\n */\nexport class StartsWithConstraint extends Constraint {\n  constructor(private readonly startsWith: string) {\n    super();\n  }\n\n  public override inConstraint(value: string): boolean {\n    return value.startsWith(this.startsWith);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UuidBlockIdGenerator.html":{"url":"classes/UuidBlockIdGenerator.html","title":"class - UuidBlockIdGenerator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UuidBlockIdGenerator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/block-id-generator/uuid-block-id-generator.ts\n        \n\n\n            \n                Description\n            \n            \n                Implementation of BlockIdGenerator\nThe ID is generated by calling randomUUID function from 'crypto'\npackage\n\n            \n\n\n            \n                Implements\n            \n            \n                            BlockIdGenerator\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generate\n                        \n                    \n                \n            \n            \n                \ngenerate()\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/block-id-generator/uuid-block-id-generator.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { randomUUID } from 'crypto';\n\nimport { BlockIdGenerator } from './block-id-generator';\n\n/**\n * Implementation of {@link BlockIdGenerator}\n *\n *\n * The ID is generated by calling {@link randomUUID} function from 'crypto'\n * package\n */\nexport class UuidBlockIdGenerator implements BlockIdGenerator {\n  generate(): string {\n    return randomUUID().replace(/-/g, '_');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                packages/ast-to-mmd/src/app/block-id-generator/block-id-generator.ts\n            \n            interface\n            BlockIdGenerator\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/block-id-generator/incremental-block-id-generator.ts\n            \n            class\n            IncrementalBlockIdGenerator\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/block-id-generator/uuid-block-id-generator.ts\n            \n            class\n            UuidBlockIdGenerator\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/block.kind.ts\n            \n            variable\n            CYCLE_BLOCK_KIND\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/conditions/impl/not-empty-block.sibling-condition.ts\n            \n            class\n            NotEmptyBlockSiblingCondition\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/conditions/impl/of-kind.sibling-condition.ts\n            \n            class\n            OfKindSiblingCondition\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/conditions/impl/positive.sibling-condition.ts\n            \n            class\n            PositiveSiblingCondition\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/conditions/sibling.condition.ts\n            \n            interface\n            SiblingCondition\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/convertor.ts\n            \n            class\n            Convertor\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/exporter.ts\n            \n            class\n            Exporter\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/file-filter/constraint/conditional/and.constraint.ts\n            \n            class\n            AndConstraint\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/file-filter/constraint/conditional/not.constraint.ts\n            \n            class\n            NotConstraint\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/file-filter/constraint/conditional/or.constraint.ts\n            \n            class\n            OrConstraint\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/file-filter/constraint/constraint.ts\n            \n            class\n            Constraint\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/file-filter/constraint/impl/contains.constraint.ts\n            \n            class\n            ContainsConstraint\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/file-filter/constraint/impl/ends-with.constraint.ts\n            \n            class\n            EndsWithConstraint\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/file-filter/constraint/impl/starts-with.constraint.ts\n            \n            class\n            StartsWithConstraint\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/file-filter/file-filter.factory.ts\n            \n            class\n            FileFilterFactory\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/file-filter/file-filter.ts\n            \n            interface\n            FileFilter\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/file-filter/impl/accept-all.file-filter.ts\n            \n            class\n            AcceptAllFileFilter\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/file-filter/impl/builder/config-constraint.factory.ts\n            \n            class\n            ConfigConstraintFactory\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/file-filter/impl/constraint.file-filter.ts\n            \n            class\n            ConstraintFileFilter\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/file-filter/impl/external.file-filter.ts\n            \n            class\n            ExternalFileFilter\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/base-cycle-declaration-graph.block.ts\n            \n            class\n            BaseCycleDeclarationGraphBlock\n            \n                62 %\n                (23/37)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/base-exit-declaration.graph-block.ts\n            \n            class\n            BaseExitDeclarationGraphBlock\n            \n                86 %\n                (25/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/binary-expression-declaration.graph-block.ts\n            \n            class\n            BinaryExpressionDeclarationGraphBlock\n            \n                82 %\n                (24/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/block-declaration.graph-block.ts\n            \n            class\n            BlockDeclarationGraphBlock\n            \n                74 %\n                (23/31)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/break-declaration.graph-block.ts\n            \n            class\n            BreakDeclarationGraphBlock\n            \n                82 %\n                (24/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/case-declaration.graph-block.ts\n            \n            class\n            CaseDeclarationGraphBlock\n            \n                71 %\n                (23/32)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/continue-declaration.graph-block.ts\n            \n            class\n            ContinueDeclarationGraphBlock\n            \n                82 %\n                (24/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/empty.graph-block.ts\n            \n            class\n            EmptyGraphBlock\n            \n                82 %\n                (24/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/for-declaration.graph-block.ts\n            \n            class\n            ForDeclarationGraphBlock\n            \n                62 %\n                (23/37)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/for-in-declaration.graph-block.ts\n            \n            class\n            ForInDeclarationGraphBlock\n            \n                62 %\n                (23/37)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/for-of-declaration.graph-block.ts\n            \n            class\n            ForOfDeclarationGraphBlock\n            \n                62 %\n                (23/37)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/for-x-declaration.graph-block.ts\n            \n            class\n            ForXDeclarationGraphBlock\n            \n                62 %\n                (23/37)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/graph-block.ts\n            \n            class\n            GraphBlock\n            \n                93 %\n                (27/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/graph-parent.graph-block.ts\n            \n            class\n            GraphParentGraphBlock\n            \n                74 %\n                (23/31)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/if-else-declaration.graph-block.ts\n            \n            class\n            IfElseDeclarationGraphBlock\n            \n                60 %\n                (23/38)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/method-call.graph-block.ts\n            \n            class\n            MethodCallGraphBlock\n            \n                82 %\n                (24/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/named-block-declaration.graph-block.ts\n            \n            class\n            NamedBlockDeclarationGraphBlock\n            \n                71 %\n                (23/32)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/parallel-block-declaration.graph-block.ts\n            \n            class\n            ParallelBlockDeclarationGraphBlock\n            \n                74 %\n                (23/31)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts\n            \n            class\n            LineRenderer\n            \n                93 %\n                (15/16)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/renderer/shape-renderer.ts\n            \n            class\n            ShapeRenderer\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/return-declaration.graph-block.ts\n            \n            class\n            ReturnDeclarationGraphBlock\n            \n                82 %\n                (24/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/switch-declaration.graph-block.ts\n            \n            class\n            SwitchDeclarationGraphBlock\n            \n                69 %\n                (23/33)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/text.graph-block.ts\n            \n            class\n            TextGraphBlock\n            \n                82 %\n                (24/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/throw-declaration.graph-block.ts\n            \n            class\n            ThrowDeclarationGraphBlock\n            \n                82 %\n                (24/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/try-catch-declaration.graph-block.ts\n            \n            class\n            TryCatchDeclarationGraphBlock\n            \n                55 %\n                (24/43)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/variable-declaration-list.graph-block.ts\n            \n            class\n            VariableDeclarationListGraphBlock\n            \n                82 %\n                (24/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/variable-declaration.graph-block.ts\n            \n            class\n            VariableDeclarationGraphBlock\n            \n                82 %\n                (24/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-parser/parser.ts\n            \n            class\n            CodeParser\n            \n                100 %\n                (28/28)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-result.ts\n            \n            interface\n            GraphResult\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            convertor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            cwd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            exporter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            fileFilter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            fileFilterFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            graphResults\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            idGenerator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            options\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            project\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            tsMorphOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            version\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @mermaid-js/mermaid-cli : ^8.13.10\n        \n            chalk : ^5.0.0\n        \n            clear : ^0.1.0\n        \n            commander : ^9.0.0\n        \n            figlet : ^1.5.2\n        \n            path : ^0.12.7\n        \n            ts-morph : ^13.0.3\n        \n            tslib : ^2.0.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BlockKind   (packages/.../block.kind.ts)\n                        \n                        \n                            LINE_HEAD   (packages/.../line-renderer.ts)\n                        \n                        \n                            LINE_STYLE   (packages/.../line-renderer.ts)\n                        \n                        \n                            LINE_WIDTH   (packages/.../line-renderer.ts)\n                        \n                        \n                            Shape   (packages/.../shape-renderer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/ast-to-mmd/src/app/block.kind.ts\n    \n        \n            \n                \n                    \n                        \n                        BlockKind\n                    \n                \n                        \n                            \n                                 BINARY_EXPRESSION_DECLARATION\n                            \n                        \n                        \n                            \n                                 BLOCK_DECLARATION\n                            \n                        \n                        \n                            \n                                 BREAK_DECLARATION\n                            \n                        \n                        \n                            \n                                 CONTINUE_DECLARATION\n                            \n                        \n                        \n                            \n                                 EMPTY_DECLARATION\n                            \n                        \n                        \n                            \n                                 FOR_DECLARATION\n                            \n                        \n                        \n                            \n                                 FOR_IN_DECLARATION\n                            \n                        \n                        \n                            \n                                 FOR_OF_DECLARATION\n                            \n                        \n                        \n                            \n                                 PARENT_DECLARATION\n                            \n                        \n                        \n                            \n                                 IF_ELSE_DECLARATION\n                            \n                        \n                        \n                            \n                                 SWITCH_DECLARATION\n                            \n                        \n                        \n                            \n                                 CASE_DECLARATION\n                            \n                        \n                        \n                            \n                                 METHOD_CALL_DECLARATION\n                            \n                        \n                        \n                            \n                                 NAMED_BLOCK_DECLARATION\n                            \n                        \n                        \n                            \n                                 PARALLEL_BLOCK_DECLARATION\n                            \n                        \n                        \n                            \n                                 RETURN_DECLARATION\n                            \n                        \n                        \n                            \n                                 TEXT_DECLARATION\n                            \n                        \n                        \n                            \n                                 THROW_DECLARATION\n                            \n                        \n                        \n                            \n                                 TRY_CATCH_DECLARATION\n                            \n                        \n                        \n                            \n                                 VARIABLE_DECLARATION\n                            \n                        \n                        \n                            \n                                 VARIABLE_LIST_DECLARATION\n                            \n                        \n            \n        \n\n    packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts\n    \n        \n            \n                \n                    \n                        \n                        LINE_HEAD\n                    \n                \n                    \n                        \n                            Style of head of the line.\n\nNONE: ---\nARROR: -->\nPOINT: --O\nCROSS: --X\n\n\n                        \n                    \n                        \n                            \n                                 NONE\n                            \n                        \n                        \n                            \n                                 ARROW\n                            \n                        \n                        \n                            \n                                 POINT\n                            \n                        \n                        \n                            \n                                 CROSS\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        LINE_STYLE\n                    \n                \n                    \n                        \n                            Style of the line.\n\nNORMAL: ---\nDOTTED: ...\n\n\n                        \n                    \n                        \n                            \n                                 NORMAL\n                            \n                        \n                        \n                            \n                                 DOTTED\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        LINE_WIDTH\n                    \n                \n                    \n                        \n                            Width of the line.\n\nNORMAL:  ---\nTHICK: ===\n\n\n                        \n                    \n                        \n                            \n                                 NORMAL\n                            \n                        \n                        \n                            \n                                 THICK\n                            \n                        \n            \n        \n\n    packages/ast-to-mmd/src/app/graph-blocks/renderer/shape-renderer.ts\n    \n        \n            \n                \n                    \n                        \n                        Shape\n                    \n                \n                        \n                            \n                                 DEFAULT\n                            \n                        \n                        \n                            \n                                Value : $TEXT$\n                            \n                        \n                        \n                            \n                                 ROUND_EDGES\n                            \n                        \n                        \n                            \n                                Value : ($TEXT$)\n                            \n                        \n                        \n                            \n                                 SHARP_EDGES\n                            \n                        \n                        \n                            \n                                Value : [$TEXT$]\n                            \n                        \n                        \n                            \n                                 STADIUM_SHAPED\n                            \n                        \n                        \n                            \n                                Value : ([$TEXT$])\n                            \n                        \n                        \n                            \n                                 SUBROUTINE\n                            \n                        \n                        \n                            \n                                Value : [[$TEXT$]]\n                            \n                        \n                        \n                            \n                                 CYLINDER\n                            \n                        \n                        \n                            \n                                Value : [($TEXT$)]\n                            \n                        \n                        \n                            \n                                 CIRCLE\n                            \n                        \n                        \n                            \n                                Value : (($TEXT$))\n                            \n                        \n                        \n                            \n                                 ASYMETRIC_RIGHT\n                            \n                        \n                        \n                            \n                                Value : >$TEXT$]\n                            \n                        \n                        \n                            \n                                 RHOMBUS\n                            \n                        \n                        \n                            \n                                Value : {$TEXT$}\n                            \n                        \n                        \n                            \n                                 HEXAGON\n                            \n                        \n                        \n                            \n                                Value : {{$TEXT$}}\n                            \n                        \n                        \n                            \n                                 PARALLEOGRAM\n                            \n                        \n                        \n                            \n                                Value : [/$TEXT$/]\n                            \n                        \n                        \n                            \n                                 PARALLEOGRAM_ALT\n                            \n                        \n                        \n                            \n                                Value : [\\$TEXT$\\]\n                            \n                        \n                        \n                            \n                                 TRAPEZOID\n                            \n                        \n                        \n                            \n                                Value : [/$TEXT$\\]\n                            \n                        \n                        \n                            \n                                 TRAPEZOID_ALT\n                            \n                        \n                        \n                            \n                                Value : [\\$TEXT$/]\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAST-to-MMD\nSimple utility to transform your TS code to MermaidJS syntax for flowcharts.\nNew file *.mmd is generated next to each TS file which fulfilled condition.\nUsage\nInstall utility as dev dependency: npm install --dev @stechy1/ast-to-mmd.\nRun it with npx @stechy1/ast-to-mmd.\nOptions\n\n-p, --path : Defines path where to find (one) source file,\n-d, --directory : Defines path to directory where to find source files,\n-ts, --tsConfig : Defines path to project ts-config.json file,\n-g, --idGenerator : Defines type of ID generator ('uuid' | 'incremental'), default='incremental',\n-f, --fileFilter : Defines path to file with filter rules.\n\nSupported constructs\n\nfunction call\nconditions\nreturn\nbreak\nthrow\n\n\nfor cycles\ncontinue\nreturn\nbreak\nthrow\n\n\ntry-catch-finaly\nreturn\nbreak\nthrow\n\n\nswitch-case\nreturn\nbreak\nthrow\n\n\n\nExample of rendered code\nsource code\nfunction fun() {\n  foo();\n\n  for (let i = 0; i transformed to mmd syntax\nflowchart TD\nsubgraph 600 [\"Functions\"]\ndirection TB\n   subgraph 580 [\"fun\"]\n    direction TB\n      581[[\"foo()\"]]\n      subgraph 595_16 [\"CYCLE_16\"]\n       direction TB\n        595[/\"i = 0; i  582\n         583 -. \"loop_16\" .-> 595\n         582 ---> 583\n      end\n      596[[\"fooBar()\"]]\n       581 ---> 595\n       583 ---> 596\n   end\nend\nsubgraph 601 [\"Classes\"]\n   direction TB\nendrendered result\n\nFilter conditions\nJSON conditions\nSupported logical condition constructs:\n\nand: all conditions must be fulfilled\nor: some of the conditions must be fulfilled\nnot: negate condition\nSupported functional condition constructs:\ncontains: tested file path must contain defined string\nendsWith: tested file path must ends with defined string\n\nExample of simmple JSON conditions:\n{\n  \"and\": [\n    {\n      \"endsWith\": \"handler.ts\",\n      \"contains\": \"event\",\n      \"not\": {\n        \"contains\": \"entity\"\n      }\n    }\n  ]\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    47 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CaseMap   (packages/.../switch-declaration.graph-block.ts)\n                        \n                        \n                            FileFilterConfig   (packages/.../file-filter.config.ts)\n                        \n                        \n                            FileFilterConfigKey   (packages/.../file-filter.config.ts)\n                        \n                        \n                            FileFilterConfigType   (packages/.../file-filter.config.ts)\n                        \n                        \n                            LineRendererModifier   (packages/.../line-renderer.ts)\n                        \n                        \n                            RecursivePartial   (packages/.../file-filter.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/ast-to-mmd/src/app/graph-blocks/switch-declaration.graph-block.ts\n    \n    \n        \n            \n                \n                    \n                    CaseMap\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    packages/ast-to-mmd/src/app/file-filter/file-filter.config.ts\n    \n    \n        \n            \n                \n                    \n                    FileFilterConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FileFilterConfigKey\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FileFilterConfigType\n                \n            \n            \n                \n                            RecursivePartial\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RecursivePartial\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts\n    \n    \n        \n            \n                \n                    \n                    LineRendererModifier\n                \n            \n            \n                \n                    Modifier of existing LineRenderer\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            convertor   (packages/.../index.ts)\n                        \n                        \n                            cwd   (packages/.../index.ts)\n                        \n                        \n                            CYCLE_BLOCK_KIND   (packages/.../block.kind.ts)\n                        \n                        \n                            exporter   (packages/.../index.ts)\n                        \n                        \n                            fileFilter   (packages/.../index.ts)\n                        \n                        \n                            fileFilterFactory   (packages/.../index.ts)\n                        \n                        \n                            graphResults   (packages/.../index.ts)\n                        \n                        \n                            idGenerator   (packages/.../index.ts)\n                        \n                        \n                            options   (packages/.../index.ts)\n                        \n                        \n                            project   (packages/.../index.ts)\n                        \n                        \n                            tsMorphOptions   (packages/.../index.ts)\n                        \n                        \n                            version   (packages/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/ast-to-mmd/src/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        convertor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Convertor(project.getSourceFiles(), fileFilter, idGenerator)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cwd\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.cwd()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exporter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Exporter(options['output'])\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileFilter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileFilter\n\n                    \n                \n                \n                    \n                        Default value : fileFilterFactory.create(cwd, options['fileFilter'])\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileFilterFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FileFilterFactory()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        graphResults\n                        \n                    \n                \n            \n                \n                    \n                        Default value : convertor.convert()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        idGenerator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new UuidBlockIdGenerator()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Default value : program.opts()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        project\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Project(tsMorphOptions)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tsMorphOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProjectOptions\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Default value : JSON.parse(\n  readFileSync(path.resolve(__dirname, '../../../../', 'package.json'), { encoding: 'utf-8' })\n).version\n                    \n                \n\n\n        \n    \n\n    packages/ast-to-mmd/src/app/block.kind.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CYCLE_BLOCK_KIND\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BlockKind[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  BlockKind.FOR_DECLARATION,\n  BlockKind.FOR_IN_DECLARATION,\n  BlockKind.FOR_OF_DECLARATION,\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
