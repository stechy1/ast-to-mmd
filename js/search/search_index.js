var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AcceptAllFileFilter.html",[0,0.2,1,2.122]],["body/classes/AcceptAllFileFilter.html",[0,0.236,1,3.221,2,0.539,3,0.387,4,0.387,5,0.51,6,0.216,7,1.279,8,4.144,9,3.615,10,2.259,11,0.435,12,2.419,13,2.472,14,3.759,15,2.222,16,0.168,17,0.56,18,1.305,19,4.946,20,2.823,21,0.387,22,3.845,23,0.539,24,0.03,25,0.539,26,0.294,27,0.539,28,3.845,29,0.387,30,1.181,31,0.765,32,1.88,33,1.88,34,2.055,35,0.653,36,0.387,37,0.714,38,2.259,39,0.023,40,0.023]],["title/classes/AndConstraint.html",[0,0.2,41,2.122]],["body/classes/AndConstraint.html",[0,0.215,2,0.49,3,0.351,4,0.351,5,0.309,6,0.228,7,1.349,11,0.396,16,0.153,17,0.526,18,1.246,21,0.525,23,0.652,24,0.03,25,0.652,26,0.4,27,0.652,29,0.351,30,1.109,31,0.54,35,0.593,36,0.351,37,0.649,39,0.021,40,0.021,41,3.025,42,2.927,43,4.645,44,2.276,45,2.483,46,1.775,47,2.16,48,1.578,49,4.372,50,2.272,51,1.142,52,2.927,53,4.645,54,3.396,55,2.272,56,1.246,57,1.867,58,3.493,59,1.057,60,2.927,61,1.867,62,2.927,63,1.867,64,3.493,65,2.927]],["title/interfaces/BlockIdGenerator.html",[66,1.349,67,1.741]],["body/interfaces/BlockIdGenerator.html",[3,0.416,4,0.416,5,0.365,6,0.226,11,0.468,16,0.181,17,0.587,21,0.416,24,0.03,29,0.521,36,0.416,39,0.024,40,0.024,56,1.35,66,2.145,67,2.769,68,2.43,69,3.374,70,3.445,71,4.341,72,2.694,73,4.137,74,4.137,75,1.859,76,2.694,77,4.334,78,4.137,79,4.341,80,5.181]],["title/classes/ConfigConstraintFactory.html",[0,0.2,81,2.122]],["body/classes/ConfigConstraintFactory.html",[0,0.279,2,0.378,3,0.271,4,0.271,5,0.343,6,0.217,7,1.287,11,0.305,16,0.118,17,0.44,18,1.086,21,0.457,23,0.638,24,0.03,25,0.638,26,0.348,27,0.638,29,0.457,31,0.6,36,0.271,37,1.076,39,0.018,40,0.018,41,1.755,44,2.165,54,2.837,56,1.086,81,2.528,82,4.169,83,2.258,84,2.528,85,3.881,86,3.252,87,3.881,88,4.601,89,3.881,90,3.881,91,3.881,92,4.479,93,2.696,94,4.169,95,3.881,96,5.492,97,4.418,98,2.696,99,2.696,100,2.696,101,1.755,102,1.755,103,1.755,104,1.755,105,1.755,106,2.258,107,2.543,108,2.696,109,2.696,110,3.098,111,3.881,112,2.696,113,2.696,114,2.696,115,2.696,116,2.258,117,4.601,118,2.696,119,2.696,120,2.696,121,2.696,122,2.258,123,2.696,124,2.258,125,2.696,126,2.258,127,2.696]],["title/classes/Constraint.html",[0,0.2,44,1.151]],["body/classes/Constraint.html",[0,0.299,2,0.525,3,0.376,4,0.376,5,0.331,6,0.212,7,1.257,11,0.551,16,0.164,17,0.551,18,1.289,21,0.376,23,0.525,24,0.03,25,0.525,26,0.287,27,0.525,29,0.489,30,1.161,35,0.917,36,0.376,38,2.856,39,0.022,40,0.022,44,2.183,50,2.378,55,2.378,56,1.364,59,1.894,84,2.439,128,3.137,129,3.745,130,5.714,131,3.745,132,4.862,133,2.378,134,3.554,135,3.554,136,3.554,137,1.831]],["title/classes/ConstraintFileFilter.html",[0,0.2,138,2.122]],["body/classes/ConstraintFileFilter.html",[0,0.181,2,0.414,3,0.297,4,0.297,5,0.458,6,0.239,7,1.412,10,1.735,11,0.334,12,2.025,13,2.26,14,2.697,15,1.861,16,0.129,17,0.469,18,1.142,20,2.535,21,0.569,23,0.581,24,0.03,25,0.581,26,0.397,27,0.581,29,0.297,30,0.989,31,0.845,32,1.444,33,1.444,34,1.578,35,0.501,36,0.297,37,0.548,39,0.019,40,0.019,44,2.13,46,1.583,47,2.343,48,1.758,51,0.965,59,0.893,81,3.555,92,3.79,106,2.474,107,1.861,138,2.697,139,4.574,140,3.47,141,4.007,142,4.783,143,2.953,144,4.141,145,3.47,146,1.578,147,2.953,148,3.027,149,2.953,150,2.953,151,2.953,152,1.327,153,2.953,154,2.953,155,2.953]],["title/classes/ContainsConstraint.html",[0,0.2,101,2.122]],["body/classes/ContainsConstraint.html",[0,0.222,2,0.507,3,0.363,4,0.363,5,0.319,6,0.208,7,1.229,11,0.409,16,0.158,17,0.538,18,1.267,21,0.478,23,0.666,24,0.03,25,0.666,26,0.364,27,0.666,29,0.363,30,1.134,31,0.559,35,0.614,36,0.363,37,0.671,39,0.022,40,0.022,44,2.165,45,2.539,48,1.093,50,2.323,51,1.181,55,2.323,56,1.435,57,1.932,59,1.771,61,1.932,63,1.932,101,3.094,122,4.723,133,2.323,134,3.473,152,1.624,156,3.028,157,3.473,158,3.473,159,3.615,160,3.615,161,2.354,162,3.615]],["title/classes/Convertor.html",[0,0.2,163,2.122]],["body/classes/Convertor.html",[0,0.248,2,0.566,3,0.221,4,0.533,5,0.398,6,0.197,11,0.378,13,2.361,16,0.096,17,0.378,18,0.963,20,2.671,21,0.487,23,0.308,24,0.031,25,0.308,26,0.256,27,0.308,29,0.221,31,0.789,32,1.075,33,1.075,34,2.157,35,0.823,36,0.221,37,0.408,39,0.015,40,0.015,46,1.276,47,2.006,48,1.543,51,0.719,67,2.726,70,1.175,75,2.292,76,2.628,79,2.797,107,2.382,110,3.286,137,1.974,152,0.988,163,2.934,164,1.842,165,2.797,166,3.338,167,4.575,168,2.454,169,4.575,170,4.506,171,2.199,172,3.294,173,3.338,174,2.797,175,3.294,176,4.035,177,3.338,178,3.338,179,3.338,180,2.371,181,2.797,182,2.199,183,3.338,184,3.338,185,3.338,186,2.647,187,2.797,188,3.338,189,1.842,190,3.381,191,1.842,192,1.175,193,2.199,194,1.432,195,2.199,196,2.199,197,2.797,198,2.199,199,2.199,200,2.199,201,2.44,202,2.199,203,2.199,204,3.338,205,2.199,206,3.338,207,2.199,208,3.338,209,3.338,210,3.338,211,3.338,212,2.199,213,2.199,214,2.199]],["title/classes/EndsWithConstraint.html",[0,0.2,102,2.122]],["body/classes/EndsWithConstraint.html",[0,0.222,2,0.507,3,0.363,4,0.363,5,0.319,6,0.208,7,1.229,11,0.409,16,0.158,17,0.538,18,1.267,21,0.478,23,0.666,24,0.03,25,0.666,26,0.364,27,0.666,29,0.363,30,1.134,31,0.559,35,0.614,36,0.363,37,0.671,39,0.022,40,0.022,44,2.165,45,2.539,48,1.093,50,2.323,51,1.181,55,2.323,56,1.435,57,1.932,59,1.771,61,1.932,63,1.932,102,3.094,126,3.98,133,2.323,152,1.624,157,3.473,158,3.473,161,2.354,215,3.98,216,2.642,217,4.751,218,3.615,219,3.028,220,3.615]],["title/classes/Exporter.html",[0,0.2,221,2.122]],["body/classes/Exporter.html",[0,0.288,2,0.4,3,0.287,4,0.287,5,0.414,6,0.205,11,0.531,16,0.125,17,0.457,18,1.12,20,1.394,21,0.513,23,0.567,24,0.03,25,0.567,26,0.309,27,0.567,29,0.287,31,0.726,35,0.686,36,0.542,39,0.026,40,0.018,48,0.862,51,0.932,56,1.218,107,1.815,110,2.756,137,1.975,152,1.281,165,3.384,168,2.686,175,2.952,186,3.287,194,1.856,197,2.388,221,3.323,222,2.388,223,4.039,224,2.63,225,4.039,226,5.595,227,2.85,228,2.85,229,4.039,230,4.691,231,4.297,232,4.039,233,4.039,234,2.85,235,4.039,236,3.429,237,4.039,238,2.85,239,2.388,240,2.85,241,2.85,242,4.039,243,2.85,244,2.85,245,2.083,246,2.85,247,2.85,248,3.384,249,2.85,250,2.85,251,2.083,252,2.083,253,2.083,254,2.85,255,2.85]],["title/classes/ExternalFileFilter.html",[0,0.2,256,2.122]],["body/classes/ExternalFileFilter.html",[0,0.205,2,0.467,3,0.335,4,0.335,5,0.503,6,0.238,7,1.411,10,1.957,11,0.377,12,2.2,13,2.485,14,3.553,15,2.021,16,0.146,17,0.509,18,1.216,20,2.668,21,0.512,23,0.631,24,0.03,25,0.631,26,0.39,27,0.631,29,0.335,30,1.074,31,0.696,32,1.629,33,1.629,34,1.78,35,0.566,36,0.335,37,0.619,39,0.021,40,0.021,46,1.72,47,2.109,48,1.541,51,1.089,56,1.216,148,3.289,256,3.711,257,4.571,258,2.93,259,4.499,260,4.499,261,4.499,262,4.499,263,3.331,264,3.331,265,3.331,266,3.331,267,3.331]],["title/interfaces/FileFilter.html",[13,1.349,66,1.349]],["body/interfaces/FileFilter.html",[3,0.359,4,0.359,5,0.554,6,0.206,7,1.218,10,2.097,11,0.534,13,1.951,14,3.653,16,0.156,17,0.534,20,2.929,21,0.359,23,0.501,24,0.03,25,0.501,26,0.273,27,0.501,29,0.474,30,1.125,31,0.552,32,1.746,33,1.746,34,2.518,35,0.606,36,0.359,38,2.768,39,0.022,40,0.022,66,2.184,68,2.097,133,2.304,135,3.444,136,3.444,137,1.746,140,3.948,148,3.444,167,3.948,258,3.068,268,3.068,269,3.444,270,4.712,271,4.712,272,3.569,273,4.712,274,4.712,275,4.712]],["title/classes/FileFilterFactory.html",[0,0.2,276,2.122]],["body/classes/FileFilterFactory.html",[0,0.202,1,2.901,2,0.46,3,0.33,4,0.33,5,0.447,6,0.195,7,1.152,9,2.4,13,2.094,16,0.143,17,0.504,18,1.207,21,0.33,23,0.46,24,0.031,25,0.46,26,0.251,27,0.46,29,0.33,31,0.905,34,2.899,36,0.33,37,0.939,39,0.02,40,0.02,56,1.396,94,2.751,107,2.548,110,2.618,138,2.138,231,3.697,239,3.733,248,2.751,251,2.4,252,2.4,253,2.4,256,2.138,268,2.901,276,2.901,277,2.751,278,4.455,279,4.455,280,5.67,281,3.283,282,2.4,283,3.283,284,3.283,285,3.283,286,3.283,287,3.283,288,3.283,289,4.455,290,3.283,291,3.283,292,3.283,293,3.283,294,3.283,295,3.283,296,3.283,297,3.283]],["title/interfaces/GraphResult.html",[66,1.349,186,1.914]],["body/interfaces/GraphResult.html",[3,0.41,4,0.41,5,0.36,6,0.178,11,0.462,16,0.178,20,3.117,24,0.03,26,0.393,31,0.794,32,1.994,33,1.994,36,0.41,39,0.023,40,0.023,46,1.962,66,2.327,68,2.396,75,2.65,84,3.344,168,2.831,186,3.016,192,2.18,194,3.344,298,1.832,299,3.417,300,4.302]],["title/classes/IncrementalBlockIdGenerator.html",[0,0.2,301,2.382]],["body/classes/IncrementalBlockIdGenerator.html",[0,0.213,2,0.487,3,0.349,4,0.349,5,0.307,6,0.227,11,0.393,12,2.262,15,2.079,16,0.152,17,0.524,21,0.465,24,0.03,26,0.266,29,0.349,31,0.537,35,0.59,36,0.349,37,0.645,39,0.021,40,0.021,46,1.768,47,2.154,56,1.104,59,1.05,67,3.089,69,3.388,70,3.335,72,2.261,76,2.261,77,4.056,146,1.856,180,3.26,181,3.876,224,3.613,301,3.382,302,4.359,303,4.626,304,4.626,305,4.626,306,6.067,307,2.909,308,3.876,309,2.909,310,3.472,311,3.472]],["title/classes/LineRenderer.html",[0,0.2,312,2.122]],["body/classes/LineRenderer.html",[0,0.147,2,0.146,3,0.105,4,0.105,5,0.092,6,0.236,11,0.58,16,0.045,17,0.205,21,0.549,23,0.537,24,0.031,25,0.537,26,0.436,27,0.642,29,0.408,30,0.432,35,0.689,36,0.327,37,0.934,38,1.063,39,0.008,40,0.008,46,0.691,47,2.21,48,0.547,51,0.34,56,1.289,59,1.709,70,1.533,86,0.872,88,2.987,107,0.813,110,0.611,116,0.872,117,2.011,135,2.097,136,1.322,137,2.08,146,2.048,152,0.467,174,1.516,175,1.322,194,3.066,269,1.322,298,2.427,300,1.516,307,2.723,312,3.477,313,3.517,314,0.611,315,1.516,316,5.017,317,1.809,318,1.809,319,1.809,320,2.4,321,2.4,322,2.4,323,2.4,324,2.4,325,2.4,326,2.869,327,2.987,328,1.809,329,1.809,330,1.809,331,1.809,332,1.809,333,1.809,334,1.809,335,2.4,336,2.4,337,1.809,338,2.4,339,1.04,340,2.869,341,1.809,342,2.4,343,3.566,344,2.404,345,3.566,346,1.04,347,4.215,348,2.869,349,1.04,350,3.945,351,4.058,352,2.869,353,3.566,354,3.707,355,1.809,356,1.04,357,3.21,358,3.707,359,1.809,360,1.04,361,3.21,362,1.04,363,1.04,364,1.04,365,1.322,366,1.809,367,3.25,368,1.04,369,4.708,370,2.869,371,1.809,372,2.011,373,1.809,374,1.04,375,1.809,376,1.04,377,1.809,378,1.04,379,1.809,380,1.04,381,1.809,382,1.04,383,1.04,384,1.04,385,1.04,386,1.04,387,1.04,388,1.04,389,1.04,390,1.04,391,2.011,392,0.872,393,0.872,394,0.872,395,0.872,396,2.404,397,1.516,398,1.516,399,3.566,400,1.04,401,1.809,402,1.04,403,1.809,404,1.809,405,3.25,406,1.04,407,1.04,408,3.25,409,2.869,410,1.809,411,1.809,412,1.04,413,1.04,414,1.809,415,1.04,416,1.04,417,1.04,418,1.04,419,0.76,420,1.04,421,0.872,422,1.04,423,1.04,424,0.872,425,0.872]],["title/classes/NotConstraint.html",[0,0.2,103,2.122]],["body/classes/NotConstraint.html",[0,0.231,2,0.527,3,0.378,4,0.378,5,0.332,6,0.213,7,1.26,11,0.425,16,0.164,17,0.552,18,1.291,21,0.49,23,0.683,24,0.03,25,0.683,26,0.373,27,0.683,29,0.378,30,1.163,31,0.581,35,0.638,36,0.378,37,0.698,39,0.022,40,0.022,44,2.288,45,2.604,48,1.136,50,2.383,51,1.228,55,2.383,56,1.291,57,2.008,59,1.136,61,2.008,63,2.008,103,3.173,152,1.688,161,2.447,426,3.148,427,4.872,428,3.757,429,3.757,430,3.757]],["title/classes/NotEmptyBlockSiblingCondition.html",[0,0.2,431,2.382]],["body/classes/NotEmptyBlockSiblingCondition.html",[0,0.242,2,0.552,3,0.396,4,0.396,5,0.348,6,0.219,15,2.256,16,0.172,17,0.569,18,1.32,21,0.396,23,0.552,24,0.03,25,0.552,26,0.301,27,0.552,29,0.396,30,1.199,31,0.855,36,0.396,37,0.731,39,0.023,40,0.023,75,2.617,168,1.769,192,2.105,431,3.671,432,4.207,433,4.207,434,4.207,435,2.564,436,2.955,437,3.27,438,3.671,439,3.938,440,2.878,441,2.564,442,3.299,443,2.878,444,3.299,445,3.938]],["title/classes/OfKindSiblingCondition.html",[0,0.2,446,2.382]],["body/classes/OfKindSiblingCondition.html",[0,0.204,2,0.466,3,0.334,4,0.334,5,0.293,6,0.238,11,0.376,12,2.196,15,2.017,16,0.145,17,0.508,21,0.511,23,0.63,24,0.03,25,0.63,26,0.389,27,0.63,29,0.334,30,1.072,31,0.787,35,0.763,36,0.334,37,0.617,39,0.021,40,0.021,46,1.716,47,2.106,48,1.539,51,1.086,75,2.448,168,1.492,180,1.951,192,1.775,435,2.163,436,3.043,437,2.924,438,3.282,440,2.428,441,4.027,442,2.782,443,2.428,444,2.782,446,3.282,447,4.566,448,4.566,449,4.49,450,5.087,451,3.321,452,3.762,453,4.49,454,3.321,455,3.321,456,3.321,457,3.321]],["title/classes/OrConstraint.html",[0,0.2,104,2.122]],["body/classes/OrConstraint.html",[0,0.215,2,0.49,3,0.351,4,0.351,5,0.309,6,0.228,7,1.349,11,0.396,16,0.153,17,0.526,18,1.246,21,0.525,23,0.652,24,0.03,25,0.652,26,0.4,27,0.652,29,0.351,30,1.109,31,0.54,35,0.593,36,0.351,37,0.649,39,0.021,40,0.021,44,2.276,45,2.483,46,1.775,47,2.16,48,1.578,49,4.372,50,2.272,51,1.142,52,2.927,54,3.396,55,2.272,56,1.246,57,1.867,59,1.057,60,2.927,61,1.867,62,2.927,63,1.867,65,2.927,104,3.025,458,2.927,459,4.645,460,4.645,461,3.493,462,3.493]],["title/classes/PositiveSiblingCondition.html",[0,0.2,463,2.382]],["body/classes/PositiveSiblingCondition.html",[0,0.236,2,0.539,3,0.387,4,0.387,5,0.34,6,0.216,11,0.435,12,2.419,15,2.222,16,0.168,17,0.56,18,1.305,21,0.387,23,0.539,24,0.03,25,0.539,26,0.294,27,0.539,29,0.387,30,1.181,31,0.765,35,0.653,36,0.387,37,0.714,38,2.259,39,0.023,40,0.023,75,2.593,168,1.728,192,2.055,435,2.504,436,3.192,437,3.221,443,2.811,452,3.222,463,3.615,464,4.144,465,4.946,466,4.144,467,4.946,468,4.946,469,4.946,470,3.845]],["title/classes/ShapeRenderer.html",[0,0.2,471,2.382]],["body/classes/ShapeRenderer.html",[0,0.252,2,0.318,3,0.228,4,0.228,5,0.2,6,0.179,11,0.386,16,0.099,17,0.386,21,0.46,23,0.318,24,0.031,25,0.318,26,0.35,27,0.318,29,0.228,35,1.035,36,0.343,37,0.42,39,0.016,40,0.016,46,1.305,47,1.701,48,1.242,56,1.278,59,0.685,137,1.669,141,3.442,146,1.824,269,2.495,298,1.846,314,1.33,315,2.859,327,3.832,344,4.724,391,1.897,471,2.495,472,3.003,473,3.413,474,4.573,475,3.413,476,6.093,477,3.413,478,4.108,479,5.347,480,2.264,481,3.413,482,5.238,483,2.264,484,5.639,485,2.264,486,2.264,487,1.897,488,1.897,489,2.264,490,2.264,491,1.897,492,2.859,493,2.264,494,1.897,495,2.264,496,2.859,497,2.264,498,1.897,499,2.859,500,2.859,501,3.413,502,1.897,503,3.413,504,1.897,505,3.413,506,1.897,507,1.897,508,2.264]],["title/interfaces/SiblingCondition.html",[66,1.349,436,1.741]],["body/interfaces/SiblingCondition.html",[3,0.37,4,0.37,5,0.325,6,0.21,11,0.545,16,0.161,17,0.545,21,0.539,23,0.517,24,0.03,25,0.517,26,0.282,27,0.517,29,0.37,30,1.149,31,0.57,35,0.626,36,0.37,39,0.022,40,0.022,66,2.218,68,2.165,75,2.715,84,3.133,133,2.353,134,4.151,137,1.802,168,1.655,192,1.969,258,3.133,436,2.571,437,3.133,438,3.517,440,4.417,466,4.758,509,3.087,510,4.811,511,4.811,512,4.811,513,3.684,514,4.811,515,4.811,516,4.811]],["title/classes/StartsWithConstraint.html",[0,0.2,105,2.122]],["body/classes/StartsWithConstraint.html",[0,0.222,2,0.507,3,0.363,4,0.363,5,0.319,6,0.208,7,1.229,11,0.409,16,0.158,17,0.538,18,1.267,21,0.478,23,0.666,24,0.03,25,0.666,26,0.364,27,0.666,29,0.363,30,1.134,31,0.559,35,0.614,36,0.363,37,0.671,39,0.022,40,0.022,44,2.165,45,2.539,48,1.093,50,2.323,51,1.181,55,2.323,56,1.435,57,1.932,59,1.771,61,1.932,63,1.932,105,3.094,124,3.98,133,2.323,152,1.624,157,3.473,158,3.473,161,2.354,216,2.642,219,3.028,517,3.98,518,4.751,519,3.615,520,3.615]],["title/classes/UuidBlockIdGenerator.html",[0,0.2,521,2.122]],["body/classes/UuidBlockIdGenerator.html",[0,0.229,2,0.524,3,0.375,4,0.375,5,0.33,6,0.212,11,0.423,12,2.373,15,2.18,16,0.163,17,0.549,21,0.375,24,0.03,29,0.375,31,0.751,35,0.824,36,0.375,37,0.693,39,0.022,40,0.022,56,1.158,67,3.162,69,3.159,70,3.3,72,2.431,76,2.431,77,4.172,180,3.167,224,3.159,309,3.127,521,3.159,522,4.065,523,4.852,524,5.39,525,3.547,526,5.39,527,4.065,528,3.732,529,3.732,530,3.732]],["title/coverage.html",[531,3.713]],["body/coverage.html",[0,0.391,1,0.905,5,0.123,6,0.286,7,1.371,8,1.165,9,1.016,10,2.039,13,0.959,24,0.03,26,0.106,39,0.011,40,0.011,41,0.905,42,1.165,44,0.491,66,1.437,67,0.743,69,1.938,70,2.226,71,1.165,72,1.938,75,0.625,81,0.905,82,1.165,83,1.165,101,0.905,102,0.905,103,0.905,104,0.905,105,0.905,107,0.625,128,1.165,138,0.905,139,1.165,156,1.165,163,1.508,164,1.165,169,1.165,172,1.016,180,2.039,186,0.817,189,1.165,190,1.165,191,1.165,215,1.165,216,1.693,221,1.508,222,1.165,236,1.016,256,0.905,257,1.165,268,1.508,276,1.508,277,1.165,282,1.016,298,2.769,299,1.165,301,1.016,302,1.165,308,4.754,312,0.905,313,0.905,314,1.36,365,1.016,419,1.016,426,1.165,431,1.016,432,1.165,433,1.165,434,1.165,435,1.938,436,0.743,446,1.016,447,1.165,448,1.165,458,1.165,463,1.016,464,1.165,471,1.016,472,1.016,509,1.165,517,1.165,521,0.905,522,1.165,525,2.176,531,1.165,532,1.39,533,1.39,534,1.39,535,4.626,536,3.471,537,2.316,538,2.316,539,2.976,540,2.976,541,1.016,542,5.394,543,1.165,544,5.548,545,2.316,546,3.856,547,3.856,548,1.39,549,1.39,550,3.856,551,3.856,552,1.39,553,1.39,554,2.316,555,1.39,556,2.316,557,1.39,558,1.39,559,3.856,560,3.856,561,1.39,562,5.548,563,5.867,564,1.39,565,1.39,566,1.39,567,1.39,568,1.39,569,1.39,570,4.955,571,4.955,572,1.39,573,1.39,574,2.976,575,2.976,576,1.39,577,1.39,578,1.39,579,1.39,580,1.39,581,1.39,582,3.471,583,1.39,584,1.39,585,1.39,586,1.39,587,2.316,588,2.316,589,1.39,590,1.39,591,1.39,592,1.39,593,1.39,594,1.39,595,1.39,596,1.39,597,1.39,598,1.39,599,1.39,600,1.39,601,1.39,602,1.39,603,1.39,604,1.39,605,1.39,606,1.39,607,1.39,608,1.39,609,1.39,610,1.39,611,1.39,612,1.39,613,1.39,614,2.316,615,1.39,616,1.39,617,1.39,618,2.511,619,2.511,620,1.165,621,1.39,622,1.165,623,1.165,624,1.165,625,1.165,626,1.39,627,1.39,628,4.262,629,1.165,630,1.165,631,1.165,632,1.39,633,1.39]],["title/dependencies.html",[527,2.285,634,3.28]],["body/dependencies.html",[24,0.03,32,2.251,33,2.251,39,0.025,40,0.025,231,3.364,634,3.856,635,4.602,636,4.602,637,4.602,638,4.602,639,4.602,640,4.602,641,4.602,642,4.602,643,4.602,644,4.602,645,4.602,646,4.602,647,4.602,648,4.602,649,4.602,650,4.602]],["title/miscellaneous/enumerations.html",[651,1.226,652,3.28]],["body/miscellaneous/enumerations.html",[6,0.229,16,0.133,24,0.03,39,0.019,40,0.019,59,1.92,146,1.624,298,2.182,313,1.979,314,3.355,316,4.069,347,3.54,350,2.546,354,3.54,357,3.54,358,3.54,361,2.546,392,3.54,393,2.546,394,3.54,395,3.54,396,4.398,397,3.54,398,3.54,419,2.222,421,2.546,441,2.751,472,2.222,479,5.319,482,3.54,487,2.546,488,2.546,491,2.546,492,2.546,494,2.546,496,2.546,498,2.546,499,2.546,500,2.546,502,2.546,504,2.546,506,2.546,507,2.546,541,2.222,618,1.979,619,3.163,651,1.365,652,2.546,653,2.546,654,3.54,655,3.089,656,3.54,657,4.069,658,3.039,659,3.039,660,3.039,661,3.039,662,3.039,663,3.039,664,3.039,665,3.039,666,3.039,667,3.039,668,3.039,669,3.039,670,3.039,671,3.039,672,3.039,673,3.039,674,3.039,675,3.039,676,3.039,677,3.039,678,2.546,679,3.54,680,3.039,681,3.039,682,3.039,683,2.546,684,2.546,685,2.546,686,3.039]],["title/miscellaneous/functions.html",[201,2.862,651,1.226]],["body/miscellaneous/functions.html",[0,0.313,6,0.176,11,0.455,16,0.176,21,0.404,23,0.783,24,0.029,25,0.783,26,0.39,27,0.783,29,0.512,39,0.023,40,0.023,133,1.966,168,1.806,187,4.917,201,2.939,224,2.618,245,2.939,258,2.618,298,1.806,618,2.618,619,3.822,620,4.263,622,4.263,623,4.263,651,1.806,654,3.369,655,4.081,656,3.369,687,4.021,688,5.089,689,5.089,690,4.021,691,4.021,692,5.089,693,4.021]],["title/index.html",[16,0.119,694,2.728,695,2.728]],["body/index.html",[24,0.027,39,0.027,40,0.027,245,3.757,696,5.139]],["title/modules.html",[697,3.713]],["body/modules.html",[24,0.027,39,0.027,40,0.027,697,4.325]],["title/overview.html",[698,3.713]],["body/overview.html",[2,0.711,24,0.027,39,0.027,40,0.027,68,2.979,698,4.249,699,5.071,700,5.071]],["title/miscellaneous/typealiases.html",[651,1.226,701,3.915]],["body/miscellaneous/typealiases.html",[6,0.235,7,1.14,16,0.193,24,0.025,26,0.413,39,0.025,40,0.025,92,3.939,97,4.514,145,4.514,268,2.87,298,1.98,312,2.87,313,2.87,314,3.166,372,3.693,424,3.693,425,4.514,525,3.222,651,1.98,657,3.693,702,4.407,703,6.062,704,6.218,705,5.82,706,4.407]],["title/miscellaneous/variables.html",[651,1.226,707,3.28]],["body/miscellaneous/variables.html",[6,0.209,13,2.146,16,0.129,24,0.03,26,0.418,39,0.019,40,0.019,59,1.912,107,2.453,146,3.379,163,2.697,172,3.496,221,2.697,236,3.027,251,2.159,252,2.159,253,2.159,276,3.115,282,3.027,298,1.327,365,3.027,441,1.923,521,1.923,541,2.159,543,3.47,618,1.923,619,3.115,624,3.47,625,3.47,628,2.474,629,3.47,630,3.47,631,4.007,651,1.327,653,2.474,655,3.027,678,2.474,679,3.47,683,2.474,684,2.474,685,2.474,707,2.474,708,6.174,709,2.953,710,2.953,711,2.953,712,2.953,713,2.953,714,2.953,715,2.953,716,2.953,717,2.953,718,2.953,719,2.953,720,2.953,721,2.953,722,2.953,723,2.953,724,4.141,725,2.953,726,2.953,727,2.953,728,2.953,729,2.953,730,2.953,731,2.953,732,2.953,733,2.953,734,2.953,735,2.953,736,2.953]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"interfaces/BlockIdGenerator.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":308,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{},"coverage.html":{}}}],["0.1.0",{"_index":642,"title":{},"body":{"dependencies.html":{}}}],["0.12.7",{"_index":647,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":544,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":545,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":352,"title":{},"body":{"classes/LineRenderer.html":{}}}],["1.5.2",{"_index":646,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":621,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":540,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":551,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":547,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":553,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":535,"title":{},"body":{"coverage.html":{}}}],["13.0.3",{"_index":648,"title":{},"body":{"dependencies.html":{}}}],["15/16",{"_index":602,"title":{},"body":{"coverage.html":{}}}],["2.0.0",{"_index":650,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":536,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":538,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":552,"title":{},"body":{"coverage.html":{}}}],["23/31",{"_index":575,"title":{},"body":{"coverage.html":{}}}],["23/32",{"_index":600,"title":{},"body":{"coverage.html":{}}}],["23/37",{"_index":560,"title":{},"body":{"coverage.html":{}}}],["23/38",{"_index":594,"title":{},"body":{"coverage.html":{}}}],["24/29",{"_index":571,"title":{},"body":{"coverage.html":{}}}],["24/43",{"_index":613,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":546,"title":{},"body":{"coverage.html":{}}}],["25/29",{"_index":566,"title":{},"body":{"coverage.html":{}}}],["26/26",{"_index":627,"title":{},"body":{"coverage.html":{}}}],["27/29",{"_index":589,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":549,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":550,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":700,"title":{},"body":{"overview.html":{}}}],["4/4",{"_index":548,"title":{},"body":{"coverage.html":{}}}],["45",{"_index":699,"title":{},"body":{"overview.html":{}}}],["5.0.0",{"_index":640,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":539,"title":{},"body":{"coverage.html":{}}}],["55",{"_index":612,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":593,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":559,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":537,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":599,"title":{},"body":{"coverage.html":{}}}],["74",{"_index":574,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":253,"title":{},"body":{"classes/Exporter.html":{},"classes/FileFilterFactory.html":{},"miscellaneous/variables.html":{}}}],["8.13.10",{"_index":638,"title":{},"body":{"dependencies.html":{}}}],["82",{"_index":570,"title":{},"body":{"coverage.html":{}}}],["86",{"_index":565,"title":{},"body":{"coverage.html":{}}}],["9.0.0",{"_index":644,"title":{},"body":{"dependencies.html":{}}}],["93",{"_index":588,"title":{},"body":{"coverage.html":{}}}],["_",{"_index":530,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{}}}],["_blockkinds",{"_index":450,"title":{},"body":{"classes/OfKindSiblingCondition.html":{}}}],["_connectiondescription",{"_index":320,"title":{},"body":{"classes/LineRenderer.html":{}}}],["_constraints",{"_index":49,"title":{},"body":{"classes/AndConstraint.html":{},"classes/OrConstraint.html":{}}}],["_file",{"_index":28,"title":{},"body":{"classes/AcceptAllFileFilter.html":{}}}],["_lhshead",{"_index":321,"title":{},"body":{"classes/LineRenderer.html":{}}}],["_linelength",{"_index":322,"title":{},"body":{"classes/LineRenderer.html":{}}}],["_linestyle",{"_index":323,"title":{},"body":{"classes/LineRenderer.html":{}}}],["_linewidth",{"_index":324,"title":{},"body":{"classes/LineRenderer.html":{}}}],["_rhshead",{"_index":325,"title":{},"body":{"classes/LineRenderer.html":{}}}],["_sibling",{"_index":470,"title":{},"body":{"classes/PositiveSiblingCondition.html":{}}}],["absoluteconfigpath",{"_index":286,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["absoluteconfigpath.endswith('.js",{"_index":295,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["absoluteconfigpath.endswith('.json",{"_index":292,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["abstract",{"_index":130,"title":{},"body":{"classes/Constraint.html":{}}}],["accept",{"_index":14,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/ConstraintFileFilter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{}}}],["accept(_file",{"_index":19,"title":{},"body":{"classes/AcceptAllFileFilter.html":{}}}],["accept(file",{"_index":148,"title":{},"body":{"classes/ConstraintFileFilter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{}}}],["acceptallfilefilter",{"_index":1,"title":{"classes/AcceptAllFileFilter.html":{}},"body":{"classes/AcceptAllFileFilter.html":{},"classes/FileFilterFactory.html":{},"coverage.html":{}}}],["accepted",{"_index":275,"title":{},"body":{"interfaces/FileFilter.html":{}}}],["accessors",{"_index":334,"title":{},"body":{"classes/LineRenderer.html":{}}}],["aliases",{"_index":702,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["all.file",{"_index":9,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/FileFilterFactory.html":{},"coverage.html":{}}}],["alt",{"_index":503,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["always",{"_index":467,"title":{},"body":{"classes/PositiveSiblingCondition.html":{}}}],["analyzed",{"_index":688,"title":{},"body":{"miscellaneous/functions.html":{}}}],["analyzedclass",{"_index":689,"title":{},"body":{"miscellaneous/functions.html":{}}}],["andconstraint",{"_index":41,"title":{"classes/AndConstraint.html":{}},"body":{"classes/AndConstraint.html":{},"classes/ConfigConstraintFactory.html":{},"coverage.html":{}}}],["andconstraint(...this.recursivebuild(...configelement",{"_index":118,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["andconstraint(...this.recursivebuild(config",{"_index":108,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["append",{"_index":367,"title":{},"body":{"classes/LineRenderer.html":{}}}],["appended",{"_index":371,"title":{},"body":{"classes/LineRenderer.html":{}}}],["array",{"_index":177,"title":{},"body":{"classes/Convertor.html":{}}}],["arror",{"_index":686,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["arrow",{"_index":393,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["ast",{"_index":696,"title":{},"body":{"index.html":{}}}],["asymetric_right",{"_index":498,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["asymmetric",{"_index":497,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["base",{"_index":129,"title":{},"body":{"classes/Constraint.html":{}}}],["basecycledeclarationgraphblock",{"_index":558,"title":{},"body":{"coverage.html":{}}}],["based",{"_index":258,"title":{},"body":{"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"interfaces/SiblingCondition.html":{},"miscellaneous/functions.html":{}}}],["baseexitdeclarationgraphblock",{"_index":564,"title":{},"body":{"coverage.html":{}}}],["between",{"_index":317,"title":{},"body":{"classes/LineRenderer.html":{}}}],["binary_expression_declaration",{"_index":659,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["binaryexpressiondeclarationgraphblock",{"_index":569,"title":{},"body":{"coverage.html":{}}}],["block",{"_index":180,"title":{},"body":{"classes/Convertor.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/OfKindSiblingCondition.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{}}}],["block.kind",{"_index":442,"title":{},"body":{"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{}}}],["block.sibling",{"_index":434,"title":{},"body":{"classes/NotEmptyBlockSiblingCondition.html":{},"coverage.html":{}}}],["block.ts",{"_index":563,"title":{},"body":{"coverage.html":{}}}],["block_declaration",{"_index":660,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["blockdeclarationgraphblock",{"_index":573,"title":{},"body":{"coverage.html":{}}}],["blockidgenerator",{"_index":67,"title":{"interfaces/BlockIdGenerator.html":{}},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{}}}],["blockkind",{"_index":441,"title":{},"body":{"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["blockkind.empty_declaration",{"_index":445,"title":{},"body":{"classes/NotEmptyBlockSiblingCondition.html":{}}}],["blockkind.for_declaration",{"_index":721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blockkind.for_in_declaration",{"_index":722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blockkind.for_of_declaration",{"_index":723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blockkinds",{"_index":453,"title":{},"body":{"classes/OfKindSiblingCondition.html":{}}}],["blocks",{"_index":192,"title":{},"body":{"classes/Convertor.html":{},"interfaces/GraphResult.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"interfaces/SiblingCondition.html":{}}}],["blocks/base",{"_index":554,"title":{},"body":{"coverage.html":{}}}],["blocks/binary",{"_index":567,"title":{},"body":{"coverage.html":{}}}],["blocks/block",{"_index":572,"title":{},"body":{"coverage.html":{}}}],["blocks/break",{"_index":576,"title":{},"body":{"coverage.html":{}}}],["blocks/continue",{"_index":578,"title":{},"body":{"coverage.html":{}}}],["blocks/empty.graph",{"_index":580,"title":{},"body":{"coverage.html":{}}}],["blocks/for",{"_index":582,"title":{},"body":{"coverage.html":{}}}],["blocks/graph",{"_index":587,"title":{},"body":{"coverage.html":{}}}],["blocks/if",{"_index":591,"title":{},"body":{"coverage.html":{}}}],["blocks/method",{"_index":595,"title":{},"body":{"coverage.html":{}}}],["blocks/named",{"_index":598,"title":{},"body":{"coverage.html":{}}}],["blocks/parallel",{"_index":601,"title":{},"body":{"coverage.html":{}}}],["blocks/renderer/line",{"_index":313,"title":{},"body":{"classes/LineRenderer.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["blocks/renderer/shape",{"_index":472,"title":{},"body":{"classes/ShapeRenderer.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["blocks/return",{"_index":603,"title":{},"body":{"coverage.html":{}}}],["blocks/text.graph",{"_index":605,"title":{},"body":{"coverage.html":{}}}],["blocks/throw",{"_index":607,"title":{},"body":{"coverage.html":{}}}],["blocks/try",{"_index":609,"title":{},"body":{"coverage.html":{}}}],["blocks/variable",{"_index":614,"title":{},"body":{"coverage.html":{}}}],["boolean",{"_index":30,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/EndsWithConstraint.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{}}}],["break_declaration",{"_index":661,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["breakdeclarationgraphblock",{"_index":577,"title":{},"body":{"coverage.html":{}}}],["build",{"_index":87,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["build(config",{"_index":91,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["buildconstraint",{"_index":89,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["buildconstraint(config",{"_index":95,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["builder",{"_index":86,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"classes/LineRenderer.html":{}}}],["builder/config",{"_index":150,"title":{},"body":{"classes/ConstraintFileFilter.html":{}}}],["call.graph",{"_index":596,"title":{},"body":{"coverage.html":{}}}],["calling",{"_index":523,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{}}}],["case",{"_index":117,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"classes/LineRenderer.html":{}}}],["catch",{"_index":610,"title":{},"body":{"coverage.html":{}}}],["chalk",{"_index":639,"title":{},"body":{"dependencies.html":{}}}],["check",{"_index":157,"title":{},"body":{"classes/ContainsConstraint.html":{},"classes/EndsWithConstraint.html":{},"classes/StartsWithConstraint.html":{}}}],["checked",{"_index":515,"title":{},"body":{"interfaces/SiblingCondition.html":{}}}],["checks",{"_index":449,"title":{},"body":{"classes/OfKindSiblingCondition.html":{}}}],["child",{"_index":512,"title":{},"body":{"interfaces/SiblingCondition.html":{}}}],["circle",{"_index":496,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["class",{"_index":0,"title":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"classes/FileFilterFactory.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{}},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"classes/FileFilterFactory.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["classblocks",{"_index":206,"title":{},"body":{"classes/Convertor.html":{}}}],["classdeclaration",{"_index":187,"title":{},"body":{"classes/Convertor.html":{},"miscellaneous/functions.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"classes/FileFilterFactory.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{},"overview.html":{}}}],["clear",{"_index":641,"title":{},"body":{"dependencies.html":{}}}],["cli",{"_index":637,"title":{},"body":{"dependencies.html":{}}}],["codeparser",{"_index":169,"title":{},"body":{"classes/Convertor.html":{},"coverage.html":{}}}],["codeparser(idgenerator",{"_index":196,"title":{},"body":{"classes/Convertor.html":{}}}],["command_handler",{"_index":680,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["commander",{"_index":643,"title":{},"body":{"dependencies.html":{}}}],["commandhandler",{"_index":727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["condition",{"_index":466,"title":{},"body":{"classes/PositiveSiblingCondition.html":{},"interfaces/SiblingCondition.html":{}}}],["condition.ts",{"_index":435,"title":{},"body":{"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"coverage.html":{}}}],["condition.ts:10",{"_index":452,"title":{},"body":{"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{}}}],["condition.ts:16",{"_index":454,"title":{},"body":{"classes/OfKindSiblingCondition.html":{}}}],["condition.ts:7",{"_index":439,"title":{},"body":{"classes/NotEmptyBlockSiblingCondition.html":{}}}],["conditions",{"_index":140,"title":{},"body":{"classes/ConstraintFileFilter.html":{},"interfaces/FileFilter.html":{}}}],["config",{"_index":94,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"classes/FileFilterFactory.html":{}}}],["config[constraintname",{"_index":115,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["config_constraint_factory",{"_index":142,"title":{},"body":{"classes/ConstraintFileFilter.html":{}}}],["configconstraintfactory",{"_index":81,"title":{"classes/ConfigConstraintFactory.html":{}},"body":{"classes/ConfigConstraintFactory.html":{},"classes/ConstraintFileFilter.html":{},"coverage.html":{}}}],["configelement",{"_index":114,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["configpath",{"_index":280,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["configuration",{"_index":85,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["conjunction",{"_index":43,"title":{},"body":{"classes/AndConstraint.html":{}}}],["connection",{"_index":370,"title":{},"body":{"classes/LineRenderer.html":{}}}],["console.log('\\tgraph",{"_index":254,"title":{},"body":{"classes/Exporter.html":{}}}],["console.log(`found",{"_index":240,"title":{},"body":{"classes/Exporter.html":{}}}],["console.log(`writing",{"_index":246,"title":{},"body":{"classes/Exporter.html":{}}}],["const",{"_index":110,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/FileFilterFactory.html":{},"classes/LineRenderer.html":{}}}],["constraint",{"_index":44,"title":{"classes/Constraint.html":{}},"body":{"classes/AndConstraint.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/EndsWithConstraint.html":{},"classes/NotConstraint.html":{},"classes/OrConstraint.html":{},"classes/StartsWithConstraint.html":{},"coverage.html":{}}}],["constraint.factory",{"_index":151,"title":{},"body":{"classes/ConstraintFileFilter.html":{}}}],["constraint.factory.ts",{"_index":83,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"coverage.html":{}}}],["constraint.factory.ts:16",{"_index":93,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["constraint.factory.ts:20",{"_index":100,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["constraint.factory.ts:33",{"_index":98,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["constraint.inconstraint(value",{"_index":65,"title":{},"body":{"classes/AndConstraint.html":{},"classes/OrConstraint.html":{}}}],["constraint:11",{"_index":161,"title":{},"body":{"classes/ContainsConstraint.html":{},"classes/EndsWithConstraint.html":{},"classes/NotConstraint.html":{},"classes/StartsWithConstraint.html":{}}}],["constraint:15",{"_index":461,"title":{},"body":{"classes/OrConstraint.html":{}}}],["constraint:16",{"_index":58,"title":{},"body":{"classes/AndConstraint.html":{}}}],["constraintfilefilter",{"_index":138,"title":{"classes/ConstraintFileFilter.html":{}},"body":{"classes/ConstraintFileFilter.html":{},"classes/FileFilterFactory.html":{},"coverage.html":{}}}],["constraintfilefilter(json.parse(filecontent",{"_index":294,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["constraintfilefilter.config_constraint_factory.build(filefilterconfig",{"_index":154,"title":{},"body":{"classes/ConstraintFileFilter.html":{}}}],["constraintname",{"_index":96,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["constraintnames",{"_index":111,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["constraints",{"_index":54,"title":{},"body":{"classes/AndConstraint.html":{},"classes/ConfigConstraintFactory.html":{},"classes/OrConstraint.html":{}}}],["constraints.push(this.buildconstraint(constraint",{"_index":113,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["constructor",{"_index":51,"title":{},"body":{"classes/AndConstraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/StartsWithConstraint.html":{}}}],["constructor(...blockkinds",{"_index":455,"title":{},"body":{"classes/OfKindSiblingCondition.html":{}}}],["constructor(...constraints",{"_index":60,"title":{},"body":{"classes/AndConstraint.html":{},"classes/OrConstraint.html":{}}}],["constructor(blockkinds",{"_index":451,"title":{},"body":{"classes/OfKindSiblingCondition.html":{}}}],["constructor(constraint",{"_index":428,"title":{},"body":{"classes/NotConstraint.html":{}}}],["constructor(constraints",{"_index":52,"title":{},"body":{"classes/AndConstraint.html":{},"classes/OrConstraint.html":{}}}],["constructor(contains",{"_index":159,"title":{},"body":{"classes/ContainsConstraint.html":{}}}],["constructor(endswith",{"_index":218,"title":{},"body":{"classes/EndsWithConstraint.html":{}}}],["constructor(externalfilefilterpath",{"_index":261,"title":{},"body":{"classes/ExternalFileFilter.html":{}}}],["constructor(filefilterconfig",{"_index":143,"title":{},"body":{"classes/ConstraintFileFilter.html":{}}}],["constructor(lhsid",{"_index":339,"title":{},"body":{"classes/LineRenderer.html":{}}}],["constructor(outputrootpath",{"_index":227,"title":{},"body":{"classes/Exporter.html":{}}}],["constructor(private",{"_index":152,"title":{},"body":{"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/StartsWithConstraint.html":{}}}],["constructor(sourcefiles",{"_index":171,"title":{},"body":{"classes/Convertor.html":{}}}],["constructor(startswith",{"_index":519,"title":{},"body":{"classes/StartsWithConstraint.html":{}}}],["contains",{"_index":122,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"classes/ContainsConstraint.html":{}}}],["containsconstraint",{"_index":101,"title":{"classes/ContainsConstraint.html":{}},"body":{"classes/ConfigConstraintFactory.html":{},"classes/ContainsConstraint.html":{},"coverage.html":{}}}],["containsconstraint(configelement",{"_index":123,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["content",{"_index":247,"title":{},"body":{"classes/Exporter.html":{}}}],["continue",{"_index":200,"title":{},"body":{"classes/Convertor.html":{}}}],["continue_declaration",{"_index":662,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["continuedeclarationgraphblock",{"_index":579,"title":{},"body":{"coverage.html":{}}}],["controller",{"_index":679,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["convert",{"_index":170,"title":{},"body":{"classes/Convertor.html":{}}}],["converting",{"_index":166,"title":{},"body":{"classes/Convertor.html":{}}}],["convertor",{"_index":163,"title":{"classes/Convertor.html":{}},"body":{"classes/Convertor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["convertor(project.getsourcefiles",{"_index":709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["convertor.convert",{"_index":714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["correct",{"_index":225,"title":{},"body":{"classes/Exporter.html":{}}}],["counter",{"_index":306,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{}}}],["coverage",{"_index":531,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":278,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["create(cwd",{"_index":279,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["creates",{"_index":174,"title":{},"body":{"classes/Convertor.html":{},"classes/LineRenderer.html":{}}}],["cross",{"_index":395,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["crypto",{"_index":526,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{}}}],["cwd",{"_index":282,"title":{},"body":{"classes/FileFilterFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cycle",{"_index":555,"title":{},"body":{"coverage.html":{}}}],["cycle_block_kind",{"_index":543,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cylinder",{"_index":494,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["cylindrical",{"_index":493,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["decides",{"_index":273,"title":{},"body":{"interfaces/FileFilter.html":{}}}],["declaration",{"_index":556,"title":{},"body":{"coverage.html":{}}}],["declaration.graph",{"_index":562,"title":{},"body":{"coverage.html":{}}}],["decorators",{"_index":691,"title":{},"body":{"miscellaneous/functions.html":{}}}],["decoratortype",{"_index":654,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["decoratortype.command_handler",{"_index":728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decoratortype.controller",{"_index":726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decoratortype.event_handler",{"_index":732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decoratortype.injectable",{"_index":725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decoratortype.query_handler",{"_index":730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decoratortypemap",{"_index":624,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["default",{"_index":146,"title":{},"body":{"classes/ConstraintFileFilter.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":21,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"interfaces/BlockIdGenerator.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{},"miscellaneous/functions.html":{}}}],["dependencies",{"_index":634,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["describing",{"_index":73,"title":{},"body":{"interfaces/BlockIdGenerator.html":{}}}],["description",{"_index":11,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"interfaces/BlockIdGenerator.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{},"miscellaneous/functions.html":{}}}],["disjunction",{"_index":459,"title":{},"body":{"classes/OrConstraint.html":{}}}],["documentation",{"_index":532,"title":{},"body":{"coverage.html":{}}}],["dot",{"_index":326,"title":{},"body":{"classes/LineRenderer.html":{}}}],["dotted",{"_index":397,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["each",{"_index":185,"title":{},"body":{"classes/Convertor.html":{}}}],["edges",{"_index":486,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["empty",{"_index":433,"title":{},"body":{"classes/NotEmptyBlockSiblingCondition.html":{},"coverage.html":{}}}],["empty_declaration",{"_index":663,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["emptygraphblock",{"_index":581,"title":{},"body":{"coverage.html":{}}}],["encoding",{"_index":251,"title":{},"body":{"classes/Exporter.html":{},"classes/FileFilterFactory.html":{},"miscellaneous/variables.html":{}}}],["ends",{"_index":217,"title":{},"body":{"classes/EndsWithConstraint.html":{}}}],["endswith",{"_index":126,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"classes/EndsWithConstraint.html":{}}}],["endswithconstraint",{"_index":102,"title":{"classes/EndsWithConstraint.html":{}},"body":{"classes/ConfigConstraintFactory.html":{},"classes/EndsWithConstraint.html":{},"coverage.html":{}}}],["endswithconstraint(configelement",{"_index":127,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["enum",{"_index":391,"title":{},"body":{"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{}}}],["enumerations",{"_index":652,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error('file",{"_index":290,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["error('unsupported",{"_index":297,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["event_handler",{"_index":682,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["eventhandler",{"_index":731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["existing",{"_index":372,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/typealiases.html":{}}}],["exists",{"_index":291,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["exit",{"_index":561,"title":{},"body":{"coverage.html":{}}}],["export",{"_index":36,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"interfaces/BlockIdGenerator.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["export(graphresults",{"_index":233,"title":{},"body":{"classes/Exporter.html":{}}}],["exporter",{"_index":221,"title":{"classes/Exporter.html":{}},"body":{"classes/Exporter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["exporter(options['output",{"_index":711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exporting",{"_index":223,"title":{},"body":{"classes/Exporter.html":{}}}],["exports",{"_index":235,"title":{},"body":{"classes/Exporter.html":{}}}],["expression",{"_index":568,"title":{},"body":{"coverage.html":{}}}],["extends",{"_index":45,"title":{},"body":{"classes/AndConstraint.html":{},"classes/ContainsConstraint.html":{},"classes/EndsWithConstraint.html":{},"classes/NotConstraint.html":{},"classes/OrConstraint.html":{},"classes/StartsWithConstraint.html":{}}}],["external",{"_index":259,"title":{},"body":{"classes/ExternalFileFilter.html":{}}}],["externalfilefilter",{"_index":256,"title":{"classes/ExternalFileFilter.html":{}},"body":{"classes/ExternalFileFilter.html":{},"classes/FileFilterFactory.html":{},"coverage.html":{}}}],["externalfilefilter(absoluteconfigpath",{"_index":296,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["externalfilefilterpath",{"_index":263,"title":{},"body":{"classes/ExternalFileFilter.html":{}}}],["facade",{"_index":683,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":135,"title":{},"body":{"classes/Constraint.html":{},"interfaces/FileFilter.html":{},"classes/LineRenderer.html":{}}}],["figlet",{"_index":645,"title":{},"body":{"dependencies.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"interfaces/BlockIdGenerator.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{}}}],["file.ts",{"_index":619,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["filecontent",{"_index":248,"title":{},"body":{"classes/Exporter.html":{},"classes/FileFilterFactory.html":{}}}],["filefilter",{"_index":13,"title":{"interfaces/FileFilter.html":{}},"body":{"classes/AcceptAllFileFilter.html":{},"classes/ConstraintFileFilter.html":{},"classes/Convertor.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filefilterconfig",{"_index":145,"title":{},"body":{"classes/ConstraintFileFilter.html":{},"miscellaneous/typealiases.html":{}}}],["filefilterconfigkey",{"_index":97,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"miscellaneous/typealiases.html":{}}}],["filefilterconfigtype",{"_index":92,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"classes/ConstraintFileFilter.html":{},"miscellaneous/typealiases.html":{}}}],["filefilterconfigtype[])[0",{"_index":121,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["filefilterfactory",{"_index":276,"title":{"classes/FileFilterFactory.html":{}},"body":{"classes/FileFilterFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filefilterfactory.create(cwd",{"_index":712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["files",{"_index":167,"title":{},"body":{"classes/Convertor.html":{},"interfaces/FileFilter.html":{}}}],["filetype",{"_index":656,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["filetype.controller",{"_index":733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filetype.facade",{"_index":734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filetype.handler",{"_index":736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filetype.service",{"_index":735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filetypemap",{"_index":625,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["filter",{"_index":34,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/ConstraintFileFilter.html":{},"classes/Convertor.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{}}}],["filter.config",{"_index":106,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"classes/ConstraintFileFilter.html":{}}}],["filter.config.ts",{"_index":704,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["filter.factory.ts",{"_index":277,"title":{},"body":{"classes/FileFilterFactory.html":{},"coverage.html":{}}}],["filter.factory.ts:11",{"_index":281,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["filter.ts",{"_index":10,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/ConstraintFileFilter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"coverage.html":{}}}],["filter.ts:10",{"_index":262,"title":{},"body":{"classes/ExternalFileFilter.html":{}}}],["filter.ts:13",{"_index":147,"title":{},"body":{"classes/ConstraintFileFilter.html":{}}}],["filter.ts:14",{"_index":272,"title":{},"body":{"interfaces/FileFilter.html":{}}}],["filter.ts:15",{"_index":144,"title":{},"body":{"classes/ConstraintFileFilter.html":{}}}],["filter.ts:16",{"_index":264,"title":{},"body":{"classes/ExternalFileFilter.html":{}}}],["filter.ts:21",{"_index":149,"title":{},"body":{"classes/ConstraintFileFilter.html":{}}}],["filter.ts:9",{"_index":22,"title":{},"body":{"classes/AcceptAllFileFilter.html":{}}}],["filter/constraint/conditional/and.constraint.ts",{"_index":42,"title":{},"body":{"classes/AndConstraint.html":{},"coverage.html":{}}}],["filter/constraint/conditional/and.constraint.ts:8",{"_index":53,"title":{},"body":{"classes/AndConstraint.html":{}}}],["filter/constraint/conditional/not.constraint.ts",{"_index":426,"title":{},"body":{"classes/NotConstraint.html":{},"coverage.html":{}}}],["filter/constraint/conditional/not.constraint.ts:6",{"_index":429,"title":{},"body":{"classes/NotConstraint.html":{}}}],["filter/constraint/conditional/or.constraint.ts",{"_index":458,"title":{},"body":{"classes/OrConstraint.html":{},"coverage.html":{}}}],["filter/constraint/conditional/or.constraint.ts:7",{"_index":460,"title":{},"body":{"classes/OrConstraint.html":{}}}],["filter/constraint/constraint.ts",{"_index":128,"title":{},"body":{"classes/Constraint.html":{},"coverage.html":{}}}],["filter/constraint/constraint.ts:12",{"_index":131,"title":{},"body":{"classes/Constraint.html":{}}}],["filter/constraint/impl/contains.constraint.ts",{"_index":156,"title":{},"body":{"classes/ContainsConstraint.html":{},"coverage.html":{}}}],["filter/constraint/impl/contains.constraint.ts:6",{"_index":160,"title":{},"body":{"classes/ContainsConstraint.html":{}}}],["filter/constraint/impl/ends",{"_index":215,"title":{},"body":{"classes/EndsWithConstraint.html":{},"coverage.html":{}}}],["filter/constraint/impl/starts",{"_index":517,"title":{},"body":{"classes/StartsWithConstraint.html":{},"coverage.html":{}}}],["filter/file",{"_index":268,"title":{},"body":{"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["filter/impl/accept",{"_index":8,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"coverage.html":{}}}],["filter/impl/builder/config",{"_index":82,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"coverage.html":{}}}],["filter/impl/constraint.file",{"_index":139,"title":{},"body":{"classes/ConstraintFileFilter.html":{},"coverage.html":{}}}],["filter/impl/external.file",{"_index":257,"title":{},"body":{"classes/ExternalFileFilter.html":{},"coverage.html":{}}}],["filtering",{"_index":270,"title":{},"body":{"interfaces/FileFilter.html":{}}}],["for_declaration",{"_index":664,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["for_in_declaration",{"_index":665,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["for_of_declaration",{"_index":666,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fordeclarationgraphblock",{"_index":583,"title":{},"body":{"coverage.html":{}}}],["forindeclarationgraphblock",{"_index":584,"title":{},"body":{"coverage.html":{}}}],["form",{"_index":495,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["forofdeclarationgraphblock",{"_index":585,"title":{},"body":{"coverage.html":{}}}],["forxdeclarationgraphblock",{"_index":586,"title":{},"body":{"coverage.html":{}}}],["fs",{"_index":239,"title":{},"body":{"classes/Exporter.html":{},"classes/FileFilterFactory.html":{}}}],["fs.existssync(absoluteconfigpath",{"_index":288,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["fs.readfilesync(absoluteconfigpath",{"_index":293,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["function",{"_index":525,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functionblocks",{"_index":204,"title":{},"body":{"classes/Convertor.html":{}}}],["functiondeclaration",{"_index":188,"title":{},"body":{"classes/Convertor.html":{}}}],["functions",{"_index":201,"title":{"miscellaneous/functions.html":{}},"body":{"classes/Convertor.html":{},"miscellaneous/functions.html":{}}}],["g",{"_index":529,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{}}}],["generate",{"_index":77,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["generated",{"_index":224,"title":{},"body":{"classes/Exporter.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{},"miscellaneous/functions.html":{}}}],["generates",{"_index":79,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{}}}],["generator",{"_index":76,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["generator.ts",{"_index":72,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{}}}],["generator.ts:10",{"_index":78,"title":{},"body":{"interfaces/BlockIdGenerator.html":{}}}],["generator.ts:13",{"_index":309,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["generator.ts:15",{"_index":310,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{}}}],["generator/block",{"_index":71,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"coverage.html":{}}}],["generator/incremental",{"_index":302,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{},"coverage.html":{}}}],["generator/uuid",{"_index":522,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{},"coverage.html":{}}}],["getisdotted",{"_index":389,"title":{},"body":{"classes/LineRenderer.html":{}}}],["getlhshead",{"_index":385,"title":{},"body":{"classes/LineRenderer.html":{}}}],["getlinepiece",{"_index":383,"title":{},"body":{"classes/LineRenderer.html":{}}}],["getrhshead",{"_index":387,"title":{},"body":{"classes/LineRenderer.html":{}}}],["getting",{"_index":694,"title":{"index.html":{}},"body":{}}],["graph",{"_index":168,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"interfaces/SiblingCondition.html":{},"miscellaneous/functions.html":{}}}],["graph.block.ts",{"_index":557,"title":{},"body":{"coverage.html":{}}}],["graph.render(0",{"_index":249,"title":{},"body":{"classes/Exporter.html":{}}}],["graphblock",{"_index":75,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"interfaces/GraphResult.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"interfaces/SiblingCondition.html":{},"coverage.html":{}}}],["graphparentgraphblock",{"_index":189,"title":{},"body":{"classes/Convertor.html":{},"coverage.html":{}}}],["graphparentgraphblock(this.idgenerator.generate",{"_index":214,"title":{},"body":{"classes/Convertor.html":{}}}],["graphresult",{"_index":186,"title":{"interfaces/GraphResult.html":{}},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"coverage.html":{}}}],["graphresults",{"_index":236,"title":{},"body":{"classes/Exporter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["graphresults.length",{"_index":241,"title":{},"body":{"classes/Exporter.html":{}}}],["graphs",{"_index":197,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{}}}],["graphs.push",{"_index":213,"title":{},"body":{"classes/Convertor.html":{}}}],["handler",{"_index":685,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["head",{"_index":350,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["hexagon",{"_index":500,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["https://mermaid",{"_index":476,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["id",{"_index":70,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{}}}],["identifier",{"_index":533,"title":{},"body":{"coverage.html":{}}}],["idgenerator",{"_index":172,"title":{},"body":{"classes/Convertor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ids",{"_index":181,"title":{},"body":{"classes/Convertor.html":{},"classes/IncrementalBlockIdGenerator.html":{}}}],["if_else_declaration",{"_index":668,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ifelsedeclarationgraphblock",{"_index":592,"title":{},"body":{"coverage.html":{}}}],["impl/accept",{"_index":283,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["impl/constraint.file",{"_index":284,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["impl/external.file",{"_index":285,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["implementation",{"_index":12,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/ConstraintFileFilter.html":{},"classes/ExternalFileFilter.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["implements",{"_index":15,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/ConstraintFileFilter.html":{},"classes/ExternalFileFilter.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["import",{"_index":31,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"classes/ConfigConstraintFactory.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["includefile",{"_index":620,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["includefile(analyzedclass",{"_index":687,"title":{},"body":{"miscellaneous/functions.html":{}}}],["inconstraint",{"_index":50,"title":{},"body":{"classes/AndConstraint.html":{},"classes/Constraint.html":{},"classes/ContainsConstraint.html":{},"classes/EndsWithConstraint.html":{},"classes/NotConstraint.html":{},"classes/OrConstraint.html":{},"classes/StartsWithConstraint.html":{}}}],["inconstraint(value",{"_index":55,"title":{},"body":{"classes/AndConstraint.html":{},"classes/Constraint.html":{},"classes/ContainsConstraint.html":{},"classes/EndsWithConstraint.html":{},"classes/NotConstraint.html":{},"classes/OrConstraint.html":{},"classes/StartsWithConstraint.html":{}}}],["incrementalblockidgenerator",{"_index":301,"title":{"classes/IncrementalBlockIdGenerator.html":{}},"body":{"classes/IncrementalBlockIdGenerator.html":{},"coverage.html":{}}}],["incrementation",{"_index":304,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"interfaces/BlockIdGenerator.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"interfaces/BlockIdGenerator.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["inherited",{"_index":57,"title":{},"body":{"classes/AndConstraint.html":{},"classes/ContainsConstraint.html":{},"classes/EndsWithConstraint.html":{},"classes/NotConstraint.html":{},"classes/OrConstraint.html":{},"classes/StartsWithConstraint.html":{}}}],["initialize",{"_index":229,"title":{},"body":{"classes/Exporter.html":{}}}],["injectable",{"_index":678,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["instance",{"_index":175,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/LineRenderer.html":{}}}],["interface",{"_index":66,"title":{"interfaces/BlockIdGenerator.html":{},"interfaces/FileFilter.html":{},"interfaces/GraphResult.html":{},"interfaces/SiblingCondition.html":{}},"body":{"interfaces/BlockIdGenerator.html":{},"interfaces/FileFilter.html":{},"interfaces/GraphResult.html":{},"interfaces/SiblingCondition.html":{},"coverage.html":{}}}],["interfaces",{"_index":68,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"interfaces/FileFilter.html":{},"interfaces/GraphResult.html":{},"interfaces/SiblingCondition.html":{},"overview.html":{}}}],["internal",{"_index":274,"title":{},"body":{"interfaces/FileFilter.html":{}}}],["isdotted",{"_index":338,"title":{},"body":{"classes/LineRenderer.html":{}}}],["isvalid",{"_index":437,"title":{},"body":{"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"interfaces/SiblingCondition.html":{}}}],["isvalid(_sibling",{"_index":469,"title":{},"body":{"classes/PositiveSiblingCondition.html":{}}}],["isvalid(sibling",{"_index":438,"title":{},"body":{"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"interfaces/SiblingCondition.html":{}}}],["iterates",{"_index":183,"title":{},"body":{"classes/Convertor.html":{}}}],["js.github.io/mermaid/#/flowchart?id=a",{"_index":484,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["js.github.io/mermaid/#/flowchart?id=node",{"_index":477,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["js.github.io/mermaid/#/flowchart?id=parallelogram",{"_index":501,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["js.github.io/mermaid/#/flowchart?id=trapezoid",{"_index":505,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["js/mermaid",{"_index":636,"title":{},"body":{"dependencies.html":{}}}],["json.parse",{"_index":718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kind.sibling",{"_index":448,"title":{},"body":{"classes/OfKindSiblingCondition.html":{},"coverage.html":{}}}],["left",{"_index":343,"title":{},"body":{"classes/LineRenderer.html":{}}}],["length",{"_index":353,"title":{},"body":{"classes/LineRenderer.html":{}}}],["lhshead",{"_index":336,"title":{},"body":{"classes/LineRenderer.html":{}}}],["lhsid",{"_index":342,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line",{"_index":316,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["line_head",{"_index":347,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["line_head.arrow",{"_index":417,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line_head.cross",{"_index":418,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line_head.none",{"_index":348,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line_head.point",{"_index":420,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line_style",{"_index":354,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["line_style.dotted",{"_index":423,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line_style.normal",{"_index":355,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line_width",{"_index":358,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["line_width.normal",{"_index":359,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line_width.thick",{"_index":415,"title":{},"body":{"classes/LineRenderer.html":{}}}],["linear",{"_index":303,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{}}}],["linepiece",{"_index":335,"title":{},"body":{"classes/LineRenderer.html":{}}}],["linerenderer",{"_index":312,"title":{"classes/LineRenderer.html":{}},"body":{"classes/LineRenderer.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["linerenderermodifier",{"_index":425,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/typealiases.html":{}}}],["link",{"_index":35,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["list.graph",{"_index":615,"title":{},"body":{"coverage.html":{}}}],["literal",{"_index":706,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["logic",{"_index":260,"title":{},"body":{"classes/ExternalFileFilter.html":{}}}],["matching",{"_index":40,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"interfaces/BlockIdGenerator.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mermaid",{"_index":635,"title":{},"body":{"dependencies.html":{}}}],["mermaid.js",{"_index":475,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["met",{"_index":468,"title":{},"body":{"classes/PositiveSiblingCondition.html":{}}}],["method",{"_index":74,"title":{},"body":{"interfaces/BlockIdGenerator.html":{}}}],["method_call_declaration",{"_index":669,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["methodcallgraphblock",{"_index":597,"title":{},"body":{"coverage.html":{}}}],["methods",{"_index":17,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"interfaces/BlockIdGenerator.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["miscellaneous",{"_index":651,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mmd",{"_index":245,"title":{},"body":{"classes/Exporter.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["mmd/src/app/block",{"_index":69,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{}}}],["mmd/src/app/block.kind.ts",{"_index":541,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mmd/src/app/conditions/impl/not",{"_index":432,"title":{},"body":{"classes/NotEmptyBlockSiblingCondition.html":{},"coverage.html":{}}}],["mmd/src/app/conditions/impl/of",{"_index":447,"title":{},"body":{"classes/OfKindSiblingCondition.html":{},"coverage.html":{}}}],["mmd/src/app/conditions/impl/positive.sibling",{"_index":464,"title":{},"body":{"classes/PositiveSiblingCondition.html":{},"coverage.html":{}}}],["mmd/src/app/conditions/sibling.condition.ts",{"_index":509,"title":{},"body":{"interfaces/SiblingCondition.html":{},"coverage.html":{}}}],["mmd/src/app/conditions/sibling.condition.ts:13",{"_index":513,"title":{},"body":{"interfaces/SiblingCondition.html":{}}}],["mmd/src/app/convertor.ts",{"_index":164,"title":{},"body":{"classes/Convertor.html":{},"coverage.html":{}}}],["mmd/src/app/convertor.ts:22",{"_index":173,"title":{},"body":{"classes/Convertor.html":{}}}],["mmd/src/app/convertor.ts:38",{"_index":182,"title":{},"body":{"classes/Convertor.html":{}}}],["mmd/src/app/exporter.ts",{"_index":222,"title":{},"body":{"classes/Exporter.html":{},"coverage.html":{}}}],["mmd/src/app/exporter.ts:10",{"_index":228,"title":{},"body":{"classes/Exporter.html":{}}}],["mmd/src/app/exporter.ts:24",{"_index":234,"title":{},"body":{"classes/Exporter.html":{}}}],["mmd/src/app/file",{"_index":7,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/EndsWithConstraint.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"classes/NotConstraint.html":{},"classes/OrConstraint.html":{},"classes/StartsWithConstraint.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["mmd/src/app/graph",{"_index":298,"title":{},"body":{"interfaces/GraphResult.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mmd/src/index.ts",{"_index":628,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mmdpath",{"_index":242,"title":{},"body":{"classes/Exporter.html":{}}}],["modifier",{"_index":424,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/typealiases.html":{}}}],["modules",{"_index":697,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["morph",{"_index":33,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/ConstraintFileFilter.html":{},"classes/Convertor.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"interfaces/GraphResult.html":{},"dependencies.html":{}}}],["name",{"_index":25,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"miscellaneous/functions.html":{}}}],["named_block_declaration",{"_index":670,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["namedblockdeclarationgraphblock",{"_index":190,"title":{},"body":{"classes/Convertor.html":{},"coverage.html":{}}}],["negation",{"_index":427,"title":{},"body":{"classes/NotConstraint.html":{}}}],["new",{"_index":107,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"classes/ConstraintFileFilter.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/FileFilterFactory.html":{},"classes/LineRenderer.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["node",{"_index":344,"title":{},"body":{"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{}}}],["nodes",{"_index":319,"title":{},"body":{"classes/LineRenderer.html":{}}}],["none",{"_index":392,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["normal",{"_index":396,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["notconstraint",{"_index":103,"title":{"classes/NotConstraint.html":{}},"body":{"classes/ConfigConstraintFactory.html":{},"classes/NotConstraint.html":{},"coverage.html":{}}}],["notconstraint(this.recursivebuild(...configelement",{"_index":120,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["notemptyblocksiblingcondition",{"_index":431,"title":{"classes/NotEmptyBlockSiblingCondition.html":{}},"body":{"classes/NotEmptyBlockSiblingCondition.html":{},"coverage.html":{}}}],["number",{"_index":307,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{}}}],["o",{"_index":421,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["object.keys(constraint",{"_index":112,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["ofkindsiblingcondition",{"_index":446,"title":{"classes/OfKindSiblingCondition.html":{}},"body":{"classes/OfKindSiblingCondition.html":{},"coverage.html":{}}}],["one",{"_index":300,"title":{},"body":{"interfaces/GraphResult.html":{},"classes/LineRenderer.html":{}}}],["optional",{"_index":27,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":365,"title":{},"body":{"classes/LineRenderer.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["options['filefilter",{"_index":713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["orconstraint",{"_index":104,"title":{"classes/OrConstraint.html":{}},"body":{"classes/ConfigConstraintFactory.html":{},"classes/OrConstraint.html":{},"coverage.html":{}}}],["orconstraint(...this.recursivebuild(...configelement",{"_index":119,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["otherwise",{"_index":136,"title":{},"body":{"classes/Constraint.html":{},"interfaces/FileFilter.html":{},"classes/LineRenderer.html":{}}}],["output",{"_index":226,"title":{},"body":{"classes/Exporter.html":{}}}],["outputrootpath",{"_index":230,"title":{},"body":{"classes/Exporter.html":{}}}],["override",{"_index":63,"title":{},"body":{"classes/AndConstraint.html":{},"classes/ContainsConstraint.html":{},"classes/EndsWithConstraint.html":{},"classes/NotConstraint.html":{},"classes/OrConstraint.html":{},"classes/StartsWithConstraint.html":{}}}],["overview",{"_index":698,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":527,"title":{"dependencies.html":{}},"body":{"classes/UuidBlockIdGenerator.html":{}}}],["package.json",{"_index":720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../block.kind.ts",{"_index":653,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["packages/.../file",{"_index":703,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../include",{"_index":655,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["packages/.../index.ts",{"_index":708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../line",{"_index":657,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["packages/.../shape",{"_index":658,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["packages/ast",{"_index":6,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"interfaces/BlockIdGenerator.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["parallel_block_declaration",{"_index":671,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["parallelblock",{"_index":211,"title":{},"body":{"classes/Convertor.html":{}}}],["parallelblockdeclarationgraphblock",{"_index":191,"title":{},"body":{"classes/Convertor.html":{},"coverage.html":{}}}],["parallelblockdeclarationgraphblock(this.idgenerator.generate",{"_index":212,"title":{},"body":{"classes/Convertor.html":{}}}],["paralleogram",{"_index":502,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["paralleogram_alt",{"_index":504,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["param",{"_index":137,"title":{},"body":{"classes/Constraint.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/FileFilter.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{}}}],["parameters",{"_index":23,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"miscellaneous/functions.html":{}}}],["parent.graph",{"_index":590,"title":{},"body":{"coverage.html":{}}}],["parent_declaration",{"_index":667,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["parentclassesblock",{"_index":210,"title":{},"body":{"classes/Convertor.html":{}}}],["parentfunctionsblock",{"_index":208,"title":{},"body":{"classes/Convertor.html":{}}}],["parser",{"_index":193,"title":{},"body":{"classes/Convertor.html":{}}}],["parser/include",{"_index":618,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["parser/parser.ts",{"_index":626,"title":{},"body":{"coverage.html":{}}}],["path",{"_index":231,"title":{},"body":{"classes/Exporter.html":{},"classes/FileFilterFactory.html":{},"dependencies.html":{}}}],["path.join(cwd",{"_index":287,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["path.resolve(sourcefile.getdirectorypath",{"_index":243,"title":{},"body":{"classes/Exporter.html":{}}}],["point",{"_index":394,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["positive",{"_index":465,"title":{},"body":{"classes/PositiveSiblingCondition.html":{}}}],["positivesiblingcondition",{"_index":463,"title":{"classes/PositiveSiblingCondition.html":{}},"body":{"classes/PositiveSiblingCondition.html":{},"coverage.html":{}}}],["private",{"_index":47,"title":{},"body":{"classes/AndConstraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/Convertor.html":{},"classes/ExternalFileFilter.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/ShapeRenderer.html":{}}}],["process",{"_index":178,"title":{},"body":{"classes/Convertor.html":{}}}],["process.cwd",{"_index":710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["processed",{"_index":179,"title":{},"body":{"classes/Convertor.html":{}}}],["program.opts",{"_index":715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":629,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["project(tsmorphoptions",{"_index":716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projectoptions",{"_index":717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properties",{"_index":46,"title":{},"body":{"classes/AndConstraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/Convertor.html":{},"classes/ExternalFileFilter.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/ShapeRenderer.html":{}}}],["protected",{"_index":88,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"classes/LineRenderer.html":{}}}],["public",{"_index":18,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"classes/FileFilterFactory.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/StartsWithConstraint.html":{}}}],["query_handler",{"_index":681,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["queryhandler",{"_index":729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["randomuuid",{"_index":524,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{}}}],["randomuuid().replace",{"_index":528,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{}}}],["readfilesync(path.resolve(__dirname",{"_index":719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["readonly",{"_index":48,"title":{},"body":{"classes/AndConstraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/ShapeRenderer.html":{},"classes/StartsWithConstraint.html":{}}}],["record",{"_index":724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["recursivebuild",{"_index":90,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["recursivebuild(...config",{"_index":109,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["recursivebuild(config",{"_index":99,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["recursivepartial",{"_index":705,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["render",{"_index":327,"title":{},"body":{"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{}}}],["render(text",{"_index":481,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["rendered",{"_index":255,"title":{},"body":{"classes/Exporter.html":{}}}],["renderer",{"_index":315,"title":{},"body":{"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{}}}],["renderer.ts",{"_index":314,"title":{},"body":{"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["renderer.ts:106",{"_index":382,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:116",{"_index":378,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:126",{"_index":380,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:136",{"_index":376,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:144",{"_index":364,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:173",{"_index":384,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:179",{"_index":386,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:192",{"_index":388,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:205",{"_index":363,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:209",{"_index":390,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:45",{"_index":346,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:49",{"_index":349,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:53",{"_index":362,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:57",{"_index":356,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:61",{"_index":360,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:63",{"_index":480,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["renderer.ts:65",{"_index":341,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:71",{"_index":483,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["renderer.ts:81",{"_index":368,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:96",{"_index":374,"title":{},"body":{"classes/LineRenderer.html":{}}}],["repeat",{"_index":414,"title":{},"body":{"classes/LineRenderer.html":{}}}],["repeat(repeat",{"_index":416,"title":{},"body":{"classes/LineRenderer.html":{}}}],["repeat(this._linelength",{"_index":422,"title":{},"body":{"classes/LineRenderer.html":{}}}],["representing",{"_index":84,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"interfaces/GraphResult.html":{},"interfaces/SiblingCondition.html":{}}}],["represents",{"_index":269,"title":{},"body":{"interfaces/FileFilter.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{}}}],["require(externalfilefilterpath",{"_index":266,"title":{},"body":{"classes/ExternalFileFilter.html":{}}}],["resolvedecoratortype",{"_index":622,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["resolvedecoratortype(decorators",{"_index":690,"title":{},"body":{"miscellaneous/functions.html":{}}}],["resolvefiletype",{"_index":623,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["resolvefiletype(analyzedclass",{"_index":693,"title":{},"body":{"miscellaneous/functions.html":{}}}],["resolving",{"_index":510,"title":{},"body":{"interfaces/SiblingCondition.html":{}}}],["responsible",{"_index":165,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{}}}],["result",{"_index":194,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"classes/LineRenderer.html":{}}}],["result.ts",{"_index":299,"title":{},"body":{"interfaces/GraphResult.html":{},"coverage.html":{}}}],["results",{"_index":39,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"interfaces/BlockIdGenerator.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":37,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"classes/ConfigConstraintFactory.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/ExternalFileFilter.html":{},"classes/FileFilterFactory.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["return_declaration",{"_index":672,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["returndeclarationgraphblock",{"_index":604,"title":{},"body":{"coverage.html":{}}}],["returns",{"_index":29,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"interfaces/BlockIdGenerator.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{},"miscellaneous/functions.html":{}}}],["rhombus",{"_index":499,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["rhshead",{"_index":337,"title":{},"body":{"classes/LineRenderer.html":{}}}],["rhsid",{"_index":340,"title":{},"body":{"classes/LineRenderer.html":{}}}],["right",{"_index":345,"title":{},"body":{"classes/LineRenderer.html":{}}}],["root",{"_index":232,"title":{},"body":{"classes/Exporter.html":{}}}],["round",{"_index":485,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["round_edges",{"_index":487,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["service",{"_index":684,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["set",{"_index":369,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setconnectiondescription",{"_index":328,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setconnectiondescription(value",{"_index":366,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlhshead",{"_index":329,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlhshead(value",{"_index":373,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlinelength",{"_index":330,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlinelength(value",{"_index":375,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlinestyle",{"_index":331,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlinestyle(value",{"_index":377,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlinewidth",{"_index":332,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlinewidth(value",{"_index":379,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setrhshead",{"_index":333,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setrhshead(value",{"_index":381,"title":{},"body":{"classes/LineRenderer.html":{}}}],["shape",{"_index":482,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["shape.valueof().replace(shaperenderer.text_placeholder",{"_index":508,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["shaped",{"_index":490,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["shaperenderer",{"_index":471,"title":{"classes/ShapeRenderer.html":{}},"body":{"classes/ShapeRenderer.html":{},"coverage.html":{}}}],["shapes",{"_index":474,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["shared",{"_index":305,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{}}}],["sharp_edges",{"_index":488,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["sibling",{"_index":440,"title":{},"body":{"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"interfaces/SiblingCondition.html":{}}}],["sibling.blockkind",{"_index":444,"title":{},"body":{"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{}}}],["sibling.condition",{"_index":443,"title":{},"body":{"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{}}}],["siblingcondition",{"_index":436,"title":{"interfaces/SiblingCondition.html":{}},"body":{"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"interfaces/SiblingCondition.html":{},"coverage.html":{}}}],["siblings",{"_index":511,"title":{},"body":{"interfaces/SiblingCondition.html":{}}}],["side",{"_index":351,"title":{},"body":{"classes/LineRenderer.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"interfaces/BlockIdGenerator.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["sourcefile",{"_index":20,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/ConstraintFileFilter.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"interfaces/GraphResult.html":{}}}],["sourcefile.getbasenamewithoutextension",{"_index":244,"title":{},"body":{"classes/Exporter.html":{}}}],["sourcefile.getclasses",{"_index":203,"title":{},"body":{"classes/Convertor.html":{}}}],["sourcefile.getfunctions",{"_index":202,"title":{},"body":{"classes/Convertor.html":{}}}],["sourcefiles",{"_index":176,"title":{},"body":{"classes/Convertor.html":{}}}],["specific",{"_index":158,"title":{},"body":{"classes/ContainsConstraint.html":{},"classes/EndsWithConstraint.html":{},"classes/StartsWithConstraint.html":{}}}],["stadium",{"_index":489,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["stadium_shaped",{"_index":491,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["start",{"_index":518,"title":{},"body":{"classes/StartsWithConstraint.html":{}}}],["started",{"_index":695,"title":{"index.html":{}},"body":{}}],["startswith",{"_index":124,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"classes/StartsWithConstraint.html":{}}}],["startswithconstraint",{"_index":105,"title":{"classes/StartsWithConstraint.html":{}},"body":{"classes/ConfigConstraintFactory.html":{},"classes/StartsWithConstraint.html":{},"coverage.html":{}}}],["startswithconstraint(configelement",{"_index":125,"title":{},"body":{"classes/ConfigConstraintFactory.html":{}}}],["statements",{"_index":534,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":141,"title":{},"body":{"classes/ConstraintFileFilter.html":{},"classes/ShapeRenderer.html":{}}}],["string",{"_index":56,"title":{},"body":{"classes/AndConstraint.html":{},"interfaces/BlockIdGenerator.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ContainsConstraint.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"classes/FileFilterFactory.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/OrConstraint.html":{},"classes/ShapeRenderer.html":{},"classes/StartsWithConstraint.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["style",{"_index":357,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["subroutine",{"_index":492,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["super",{"_index":61,"title":{},"body":{"classes/AndConstraint.html":{},"classes/ContainsConstraint.html":{},"classes/EndsWithConstraint.html":{},"classes/NotConstraint.html":{},"classes/OrConstraint.html":{},"classes/StartsWithConstraint.html":{}}}],["supported",{"_index":473,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["switch",{"_index":116,"title":{},"body":{"classes/ConfigConstraintFactory.html":{},"classes/LineRenderer.html":{}}}],["table",{"_index":633,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":632,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":132,"title":{},"body":{"classes/Constraint.html":{}}}],["tested",{"_index":134,"title":{},"body":{"classes/Constraint.html":{},"classes/ContainsConstraint.html":{},"interfaces/SiblingCondition.html":{}}}],["text",{"_index":479,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["text_declaration",{"_index":673,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["text_placeholder",{"_index":478,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["textgraphblock",{"_index":606,"title":{},"body":{"coverage.html":{}}}],["thick",{"_index":398,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["this._blockkinds",{"_index":456,"title":{},"body":{"classes/OfKindSiblingCondition.html":{}}}],["this._blockkinds.some((block",{"_index":457,"title":{},"body":{"classes/OfKindSiblingCondition.html":{}}}],["this._connectiondescription",{"_index":399,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this._connectiondescription}${value",{"_index":400,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this._constraints",{"_index":62,"title":{},"body":{"classes/AndConstraint.html":{},"classes/OrConstraint.html":{}}}],["this._constraints.every((constraint",{"_index":64,"title":{},"body":{"classes/AndConstraint.html":{}}}],["this._constraints.some((constraint",{"_index":462,"title":{},"body":{"classes/OrConstraint.html":{}}}],["this._lhshead",{"_index":401,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this._linelength",{"_index":405,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this._linestyle",{"_index":403,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this._linewidth",{"_index":404,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this._rhshead",{"_index":402,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.codeparser",{"_index":195,"title":{},"body":{"classes/Convertor.html":{}}}],["this.codeparser.processclasses(classes",{"_index":207,"title":{},"body":{"classes/Convertor.html":{}}}],["this.codeparser.processfunctions(functions",{"_index":205,"title":{},"body":{"classes/Convertor.html":{}}}],["this.constraint",{"_index":153,"title":{},"body":{"classes/ConstraintFileFilter.html":{}}}],["this.constraint.inconstraint(file.getfilepath",{"_index":155,"title":{},"body":{"classes/ConstraintFileFilter.html":{}}}],["this.constraint.inconstraint(value",{"_index":430,"title":{},"body":{"classes/NotConstraint.html":{}}}],["this.counter",{"_index":311,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{}}}],["this.dot",{"_index":410,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.externalfilefilter",{"_index":265,"title":{},"body":{"classes/ExternalFileFilter.html":{}}}],["this.externalfilefilter.accept(file",{"_index":267,"title":{},"body":{"classes/ExternalFileFilter.html":{}}}],["this.filefilter.accept(sourcefile",{"_index":199,"title":{},"body":{"classes/Convertor.html":{}}}],["this.idgenerator.generate",{"_index":209,"title":{},"body":{"classes/Convertor.html":{}}}],["this.isdotted",{"_index":409,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.lhshead",{"_index":407,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.lhsid",{"_index":406,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.linepiece",{"_index":408,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.rhshead",{"_index":412,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.rhsid",{"_index":413,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.sourcefiles",{"_index":198,"title":{},"body":{"classes/Convertor.html":{}}}],["through",{"_index":184,"title":{},"body":{"classes/Convertor.html":{}}}],["throw",{"_index":289,"title":{},"body":{"classes/FileFilterFactory.html":{}}}],["throw_declaration",{"_index":674,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["throwdeclarationgraphblock",{"_index":608,"title":{},"body":{"coverage.html":{}}}],["tmplinelength",{"_index":411,"title":{},"body":{"classes/LineRenderer.html":{}}}],["trapezoid",{"_index":506,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["trapezoid_alt",{"_index":507,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["true",{"_index":38,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/Constraint.html":{},"interfaces/FileFilter.html":{},"classes/LineRenderer.html":{},"classes/PositiveSiblingCondition.html":{}}}],["try_catch_declaration",{"_index":675,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["trycatchdeclarationgraphblock",{"_index":611,"title":{},"body":{"coverage.html":{}}}],["ts",{"_index":32,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/ConstraintFileFilter.html":{},"classes/Convertor.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"interfaces/GraphResult.html":{},"dependencies.html":{}}}],["tslib",{"_index":649,"title":{},"body":{"dependencies.html":{}}}],["tsmorphoptions",{"_index":630,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["two",{"_index":318,"title":{},"body":{"classes/LineRenderer.html":{}}}],["type",{"_index":26,"title":{},"body":{"classes/AcceptAllFileFilter.html":{},"classes/AndConstraint.html":{},"classes/ConfigConstraintFactory.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/Convertor.html":{},"classes/EndsWithConstraint.html":{},"classes/Exporter.html":{},"classes/ExternalFileFilter.html":{},"interfaces/FileFilter.html":{},"classes/FileFilterFactory.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/NotEmptyBlockSiblingCondition.html":{},"classes/OfKindSiblingCondition.html":{},"classes/OrConstraint.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":701,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["undefined",{"_index":692,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unique",{"_index":80,"title":{},"body":{"interfaces/BlockIdGenerator.html":{}}}],["unwanted",{"_index":271,"title":{},"body":{"interfaces/FileFilter.html":{}}}],["used",{"_index":514,"title":{},"body":{"interfaces/SiblingCondition.html":{}}}],["utf",{"_index":252,"title":{},"body":{"classes/Exporter.html":{},"classes/FileFilterFactory.html":{},"miscellaneous/variables.html":{}}}],["uuidblockidgenerator",{"_index":521,"title":{"classes/UuidBlockIdGenerator.html":{}},"body":{"classes/UuidBlockIdGenerator.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["valid",{"_index":516,"title":{},"body":{"interfaces/SiblingCondition.html":{}}}],["value",{"_index":59,"title":{},"body":{"classes/AndConstraint.html":{},"classes/Constraint.html":{},"classes/ConstraintFileFilter.html":{},"classes/ContainsConstraint.html":{},"classes/EndsWithConstraint.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/NotConstraint.html":{},"classes/OrConstraint.html":{},"classes/ShapeRenderer.html":{},"classes/StartsWithConstraint.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.endswith(this.endswith",{"_index":220,"title":{},"body":{"classes/EndsWithConstraint.html":{}}}],["value.includes(this.contains",{"_index":162,"title":{},"body":{"classes/ContainsConstraint.html":{}}}],["value.startswith(this.startswith",{"_index":520,"title":{},"body":{"classes/StartsWithConstraint.html":{}}}],["variable",{"_index":542,"title":{},"body":{"coverage.html":{}}}],["variable_declaration",{"_index":676,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["variable_list_declaration",{"_index":677,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["variabledeclarationgraphblock",{"_index":617,"title":{},"body":{"coverage.html":{}}}],["variabledeclarationlistgraphblock",{"_index":616,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":707,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":631,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":237,"title":{},"body":{"classes/Exporter.html":{}}}],["whether",{"_index":133,"title":{},"body":{"classes/Constraint.html":{},"classes/ContainsConstraint.html":{},"classes/EndsWithConstraint.html":{},"interfaces/FileFilter.html":{},"interfaces/SiblingCondition.html":{},"classes/StartsWithConstraint.html":{},"miscellaneous/functions.html":{}}}],["width",{"_index":361,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["with.constraint.ts",{"_index":216,"title":{},"body":{"classes/EndsWithConstraint.html":{},"classes/StartsWithConstraint.html":{},"coverage.html":{}}}],["with.constraint.ts:6",{"_index":219,"title":{},"body":{"classes/EndsWithConstraint.html":{},"classes/StartsWithConstraint.html":{}}}],["writefilesync",{"_index":238,"title":{},"body":{"classes/Exporter.html":{}}}],["writefilesync(mmdpath",{"_index":250,"title":{},"body":{"classes/Exporter.html":{}}}],["x",{"_index":419,"title":{},"body":{"classes/LineRenderer.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AcceptAllFileFilter.html":{"url":"classes/AcceptAllFileFilter.html","title":"class - AcceptAllFileFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcceptAllFileFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/file-filter/impl/accept-all.file-filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Implementation of FileFilter which accept every file.\n\n            \n\n\n            \n                Implements\n            \n            \n                            FileFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                accept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        accept\n                        \n                    \n                \n            \n            \n                \n                    \n                    accept(_file: SourceFile)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/file-filter/impl/accept-all.file-filter.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _file\n                                    \n                                            SourceFile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SourceFile } from 'ts-morph';\n\nimport { FileFilter } from '../file-filter';\n\n/**\n * Implementation of {@link FileFilter} which accept every file.\n */\nexport class AcceptAllFileFilter implements FileFilter {\n  public accept(_file: SourceFile): boolean {\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AndConstraint.html":{"url":"classes/AndConstraint.html","title":"class - AndConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AndConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/file-filter/constraint/conditional/and.constraint.ts\n        \n\n\n            \n                Description\n            \n            \n                Conjunction Constraint.\n\n            \n\n            \n                Extends\n            \n            \n                        Constraint\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _constraints\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    \n                                inConstraint\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(constraints: Constraint[])\n                    \n                \n                        \n                            \n                                Defined in packages/ast-to-mmd/src/app/file-filter/constraint/conditional/and.constraint.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        constraints\n                                                  \n                                                        \n                                                                        Constraint[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _constraints\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Constraint[]\n\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/file-filter/constraint/conditional/and.constraint.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                        inConstraint\n                        \n                    \n                \n            \n            \n                \n                    \n                    inConstraint(value: string)\n                \n            \n\n\n            \n                \n                    Inherited from         Constraint\n\n                \n            \n            \n                \n                        Defined in         Constraint:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Constraint } from '../constraint';\n\n/**\n * Conjunction {@link Constraint}.\n */\nexport class AndConstraint extends Constraint {\n\n  private readonly _constraints: Constraint[];\n\n  constructor(...constraints: Constraint[]) {\n    super();\n\n    this._constraints = constraints;\n  }\n\n  public override inConstraint(value: string): boolean {\n    return this._constraints.every((constraint: Constraint) => constraint.inConstraint(value));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BlockIdGenerator.html":{"url":"interfaces/BlockIdGenerator.html","title":"interface - BlockIdGenerator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BlockIdGenerator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/block-id-generator/block-id-generator.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface describing method for GraphBlock ID generator\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        generate\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generate\n                        \n                    \n                \n            \n            \n                \ngenerate()\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/block-id-generator/block-id-generator.ts:10\n                \n            \n\n\n            \n                \n                    Generates ID.\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Unique ID.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface BlockIdGenerator {\n  /**\n   * Generates ID.\n   *\n   * @returns {string} Unique ID.\n   */\n  generate(): string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigConstraintFactory.html":{"url":"classes/ConfigConstraintFactory.html","title":"class - ConfigConstraintFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigConstraintFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/file-filter/impl/builder/config-constraint.factory.ts\n        \n\n\n            \n                Description\n            \n            \n                Class representing configuration constraint builder.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                build\n                            \n                            \n                                    Protected\n                                buildConstraint\n                            \n                            \n                                    Protected\n                                recursiveBuild\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        build\n                        \n                    \n                \n            \n            \n                \n                    \n                    build(config: FileFilterConfigType)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/file-filter/impl/builder/config-constraint.factory.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                FileFilterConfigType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Constraint\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        buildConstraint\n                        \n                    \n                \n            \n            \n                \n                    \n                    buildConstraint(config: FileFilterConfigType, constraintName: FileFilterConfigKey)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/file-filter/impl/builder/config-constraint.factory.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                FileFilterConfigType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    constraintName\n                                    \n                                                FileFilterConfigKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Constraint\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        recursiveBuild\n                        \n                    \n                \n            \n            \n                \n                    \n                    recursiveBuild(config: FileFilterConfigType[])\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/file-filter/impl/builder/config-constraint.factory.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                FileFilterConfigType[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Constraint[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  AndConstraint,\n  Constraint,\n  ContainsConstraint,\n  EndsWithConstraint,\n  NotConstraint,\n  OrConstraint, StartsWithConstraint\n} from '../../constraint';\nimport { FileFilterConfigKey, FileFilterConfigType } from '../../file-filter.config';\n\n/**\n * Class representing configuration constraint builder.\n */\nexport class ConfigConstraintFactory {\n\n  public build(config: FileFilterConfigType): Constraint {\n    return new AndConstraint(...this.recursiveBuild(config));\n  }\n\n  protected recursiveBuild(...config: FileFilterConfigType[]): Constraint[] {\n    const constraints: Constraint[] = [];\n\n    for (const constraint of config) {\n      const constraintNames = Object.keys(constraint);\n      for (const constraintName of constraintNames) {\n        constraints.push(this.buildConstraint(constraint, constraintName as FileFilterConfigKey));\n      }\n    }\n\n    return constraints;\n  }\n\n  protected buildConstraint(config: FileFilterConfigType, constraintName: FileFilterConfigKey): Constraint {\n    const configElement = config[constraintName];\n    switch (constraintName) {\n      case 'and':\n        return new AndConstraint(...this.recursiveBuild(...configElement as FileFilterConfigType[]));\n      case 'or':\n        return new OrConstraint(...this.recursiveBuild(...configElement as FileFilterConfigType[]));\n      case 'not':\n        return new NotConstraint(this.recursiveBuild(...configElement as FileFilterConfigType[])[0]);\n      case 'contains':\n        return new ContainsConstraint(configElement as string);\n      case 'startsWith':\n        return new StartsWithConstraint(configElement as string);\n      case 'endsWith':\n        return new EndsWithConstraint(configElement as string);\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Constraint.html":{"url":"classes/Constraint.html","title":"class - Constraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Constraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/file-filter/constraint/constraint.ts\n        \n\n\n            \n                Description\n            \n            \n                Base class representing constraint.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                inConstraint\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        inConstraint\n                        \n                    \n                \n            \n            \n                \n                    \n                    inConstraint(value: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/file-filter/constraint/constraint.ts:12\n                \n            \n\n\n            \n                \n                    Test whether the value is in Constraint.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Tested value.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        True, when the value is in {@link Constraint}, False otherwise.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export abstract class Constraint {\n\n  /**\n   * Test whether the value is in {@link Constraint}.\n   *\n   * @param value {string} Tested value.\n   * @returns True, when the value is in {@link Constraint}, False otherwise.\n   */\n  public abstract inConstraint(value: string): boolean;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConstraintFileFilter.html":{"url":"classes/ConstraintFileFilter.html","title":"class - ConstraintFileFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConstraintFileFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/file-filter/impl/constraint.file-filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Implementation of FileFilter where conditions are defined constraint.\n\n            \n\n\n            \n                Implements\n            \n            \n                            FileFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                CONFIG_CONSTRAINT_FACTORY\n                            \n                            \n                                    Private\n                                    Readonly\n                                constraint\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                accept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fileFilterConfig: FileFilterConfigType)\n                    \n                \n                        \n                            \n                                Defined in packages/ast-to-mmd/src/app/file-filter/impl/constraint.file-filter.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileFilterConfig\n                                                  \n                                                        \n                                                                        FileFilterConfigType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        CONFIG_CONSTRAINT_FACTORY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigConstraintFactory\n\n                    \n                \n                \n                    \n                        Default value : new ConfigConstraintFactory()\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/file-filter/impl/constraint.file-filter.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        constraint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Constraint\n\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/file-filter/impl/constraint.file-filter.ts:15\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        accept\n                        \n                    \n                \n            \n            \n                \n                    \n                    accept(file: SourceFile)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/file-filter/impl/constraint.file-filter.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            SourceFile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SourceFile } from 'ts-morph';\n\nimport { Constraint } from '../constraint';\nimport { FileFilter } from '../file-filter';\nimport { FileFilterConfigType } from '../file-filter.config';\nimport { ConfigConstraintFactory } from './builder/config-constraint.factory';\n\n/**\n * Implementation of {@link FileFilter} where conditions are defined constraint.\n */\nexport class ConstraintFileFilter implements FileFilter {\n\n  private static readonly CONFIG_CONSTRAINT_FACTORY: ConfigConstraintFactory = new ConfigConstraintFactory();\n\n  private readonly constraint: Constraint;\n\n  constructor(private readonly fileFilterConfig: FileFilterConfigType) {\n    this.constraint = ConstraintFileFilter.CONFIG_CONSTRAINT_FACTORY.build(fileFilterConfig);\n  }\n\n  public accept(file: SourceFile): boolean {\n    return this.constraint.inConstraint(file.getFilePath());\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContainsConstraint.html":{"url":"classes/ContainsConstraint.html","title":"class - ContainsConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContainsConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/file-filter/constraint/impl/contains.constraint.ts\n        \n\n\n            \n                Description\n            \n            \n                Constraint which check whether the tested value contains specific value.\n\n            \n\n            \n                Extends\n            \n            \n                        Constraint\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    \n                                inConstraint\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(contains: string)\n                    \n                \n                        \n                            \n                                Defined in packages/ast-to-mmd/src/app/file-filter/constraint/impl/contains.constraint.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        contains\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                        inConstraint\n                        \n                    \n                \n            \n            \n                \n                    \n                    inConstraint(value: string)\n                \n            \n\n\n            \n                \n                    Inherited from         Constraint\n\n                \n            \n            \n                \n                        Defined in         Constraint:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Constraint } from '../constraint';\n\n/**\n * {@link Constraint} which check whether the tested value contains specific value.\n */\nexport class ContainsConstraint extends Constraint {\n  constructor(private readonly contains: string) {\n    super();\n  }\n\n  public override inConstraint(value: string): boolean {\n    return value.includes(this.contains);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Convertor.html":{"url":"classes/Convertor.html","title":"class - Convertor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Convertor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/convertor.ts\n        \n\n\n            \n                Description\n            \n            \n                Class responsible for converting defined source files to graph.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                codeParser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                convert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sourceFiles: SourceFile[], fileFilter: FileFilter, idGenerator: BlockIdGenerator)\n                    \n                \n                        \n                            \n                                Defined in packages/ast-to-mmd/src/app/convertor.ts:22\n                            \n                        \n\n                \n                    \n                            Creates new instance of Convertor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sourceFiles\n                                                  \n                                                        \n                                                                    SourceFile[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                []SourceFile Array of source files to process.\n\n                                                        \n                                                \n                                                \n                                                        fileFilter\n                                                  \n                                                        \n                                                                        FileFilter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FileFilter Filter of processed files.\n\n                                                        \n                                                \n                                                \n                                                        idGenerator\n                                                  \n                                                        \n                                                                        BlockIdGenerator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                BlockIdGenerator Generator of block IDs.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        codeParser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CodeParser\n\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/convertor.ts:22\n                        \n                    \n\n            \n                \n                    Instance of CodeParser\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        convert\n                        \n                    \n                \n            \n            \n                \n                    \n                    convert()\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/convertor.ts:38\n                \n            \n\n\n            \n                \n                    Iterates through source files and generates graph for each file.\n\n\n                    \n                        Returns :         GraphResult[]\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ClassDeclaration, FunctionDeclaration, SourceFile } from 'ts-morph';\n\nimport { BlockIdGenerator } from './block-id-generator';\nimport { FileFilter } from './file-filter';\nimport {\n  GraphBlock,\n  GraphParentGraphBlock,\n  NamedBlockDeclarationGraphBlock,\n  ParallelBlockDeclarationGraphBlock,\n} from './graph-blocks';\nimport { CodeParser } from './graph-parser';\nimport { GraphResult } from './graph-result';\n\n/**\n * Class responsible for converting defined source files to graph.\n */\nexport class Convertor {\n\n  /**\n   * Instance of {@link CodeParser}\n   */\n  private readonly codeParser: CodeParser;\n\n  /**\n   * Creates new instance of {@link Convertor}.\n   *\n   * @param sourceFiles {@link SourceFile[]} Array of source files to process.\n   * @param fileFilter {@link FileFilter} Filter of processed files.\n   * @param idGenerator {@link BlockIdGenerator} Generator of block IDs.\n   */\n  constructor(private readonly sourceFiles: SourceFile[], private readonly fileFilter: FileFilter, private readonly idGenerator: BlockIdGenerator) {\n    this.codeParser = new CodeParser(idGenerator);\n  }\n\n  /**\n   * Iterates through source files and generates graph for each file.\n   */\n  public convert(): GraphResult[] {\n    const graphs: GraphResult[] = [];\n    for (const sourceFile of this.sourceFiles) {\n      if (!this.fileFilter.accept(sourceFile)) {\n        continue;\n      }\n\n      const functions: FunctionDeclaration[] = sourceFile.getFunctions();\n      const classes: ClassDeclaration[] = sourceFile.getClasses();\n\n      const functionBlocks: GraphBlock = this.codeParser.processFunctions(functions);\n      const classBlocks: GraphBlock = this.codeParser.processClasses(classes);\n\n      const parentFunctionsBlock: GraphBlock = new NamedBlockDeclarationGraphBlock(\n        this.idGenerator.generate(),\n        [functionBlocks],\n        'Functions'\n      );\n      const parentClassesBlock: GraphBlock = new NamedBlockDeclarationGraphBlock(\n        this.idGenerator.generate(),\n        [classBlocks],\n        'Classes'\n      );\n      const parallelBlock: GraphBlock = new ParallelBlockDeclarationGraphBlock(this.idGenerator.generate(), [\n        parentFunctionsBlock,\n        parentClassesBlock,\n      ]);\n\n      graphs.push({\n        sourceFile,\n        graph: new GraphParentGraphBlock(this.idGenerator.generate(), parallelBlock),\n      });\n    }\n\n    return graphs;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EndsWithConstraint.html":{"url":"classes/EndsWithConstraint.html","title":"class - EndsWithConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EndsWithConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/file-filter/constraint/impl/ends-with.constraint.ts\n        \n\n\n            \n                Description\n            \n            \n                Constraint which check whether the value ends with specific value.\n\n            \n\n            \n                Extends\n            \n            \n                        Constraint\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    \n                                inConstraint\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(endsWith: string)\n                    \n                \n                        \n                            \n                                Defined in packages/ast-to-mmd/src/app/file-filter/constraint/impl/ends-with.constraint.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        endsWith\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                        inConstraint\n                        \n                    \n                \n            \n            \n                \n                    \n                    inConstraint(value: string)\n                \n            \n\n\n            \n                \n                    Inherited from         Constraint\n\n                \n            \n            \n                \n                        Defined in         Constraint:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Constraint } from '../constraint';\n\n/**\n * {@link Constraint} which check whether the value ends with specific value.\n */\nexport class EndsWithConstraint extends Constraint {\n  constructor(private readonly endsWith: string) {\n    super();\n  }\n\n  public override inConstraint(value: string): boolean {\n    return value.endsWith(this.endsWith);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Exporter.html":{"url":"classes/Exporter.html","title":"class - Exporter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Exporter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/exporter.ts\n        \n\n\n            \n                Description\n            \n            \n                Class responsible for exporting generated graph to correct output.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                export\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(outputRootPath: string)\n                    \n                \n                        \n                            \n                                Defined in packages/ast-to-mmd/src/app/exporter.ts:10\n                            \n                        \n\n                \n                    \n                            Initialize new instance of Exporter.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        outputRootPath\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Path to root of output path.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        export\n                        \n                    \n                \n            \n            \n                \n                    \n                    export(graphResults: GraphResult[])\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/exporter.ts:24\n                \n            \n\n\n            \n                \n                    Exports graph results to defined output path.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    graphResults\n                                    \n                                                GraphResult[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        []GraphResult Graph results for export.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { writeFileSync } from 'fs';\nimport * as path from 'path';\n\nimport { GraphResult } from './graph-result';\n\n\n/**\n * Class responsible for exporting generated graph to correct output.\n */\nexport class Exporter {\n\n  /**\n   * Initialize new instance of {@link Exporter}.\n   *\n   * @param outputRootPath {string} Path to root of output path.\n   */\n  constructor(private readonly outputRootPath: string) {}\n\n  /**\n   * Exports graph results to defined output path.\n   *\n   * @param graphResults {@link GraphResult[]} Graph results for export.\n   */\n  public export(graphResults: GraphResult[]): void {\n    console.log(`Found: ${graphResults.length} graphs.`);\n\n    for (const {graph, sourceFile} of graphResults) {\n      const mmdPath = path.resolve(sourceFile.getDirectoryPath(), sourceFile.getBaseNameWithoutExtension()) + '.mmd';\n      console.log(`Writing content with graph into the file: ${mmdPath}.`);\n      const fileContent = graph.render(0);\n      writeFileSync(mmdPath, fileContent, { encoding: 'utf-8' });\n      console.log('\\tGraph rendered into the file.');\n    }\n\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExternalFileFilter.html":{"url":"classes/ExternalFileFilter.html","title":"class - ExternalFileFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExternalFileFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/file-filter/impl/external.file-filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Implementation of FileFilter which accept file based on external logic.\n\n            \n\n\n            \n                Implements\n            \n            \n                            FileFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                externalFileFilter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                accept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(externalFileFilterPath: string)\n                    \n                \n                        \n                            \n                                Defined in packages/ast-to-mmd/src/app/file-filter/impl/external.file-filter.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        externalFileFilterPath\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        externalFileFilter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileFilter\n\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/file-filter/impl/external.file-filter.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        accept\n                        \n                    \n                \n            \n            \n                \n                    \n                    accept(file: SourceFile)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/file-filter/impl/external.file-filter.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            SourceFile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SourceFile } from 'ts-morph';\n\nimport { FileFilter } from '../file-filter';\n\n/**\n * Implementation of {@link FileFilter} which accept file based on external logic.\n */\nexport class ExternalFileFilter implements FileFilter {\n\n  private readonly externalFileFilter: FileFilter;\n\n  constructor(externalFileFilterPath: string) {\n    this.externalFileFilter = require(externalFileFilterPath);\n  }\n\n  public accept(file: SourceFile): boolean {\n    return this.externalFileFilter.accept(file);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileFilter.html":{"url":"interfaces/FileFilter.html","title":"interface - FileFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/file-filter/file-filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface represents File filter for filtering unwanted files.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        accept\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        accept\n                        \n                    \n                \n            \n            \n                \naccept(file: SourceFile)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/file-filter/file-filter.ts:14\n                \n            \n\n\n            \n                \n                    Decides, whether to accept file or not based on internal conditions.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            SourceFile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        SourceFile.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        True, when file is accepted, False otherwise.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { SourceFile } from 'ts-morph';\n\n/**\n * Interface represents File filter for filtering unwanted files.\n */\nexport interface FileFilter {\n\n  /**\n   * Decides, whether to accept file or not based on internal conditions.\n   *\n   * @param file {@link SourceFile}.\n   * @returns True, when file is accepted, False otherwise.\n   */\n  accept(file: SourceFile): boolean;\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileFilterFactory.html":{"url":"classes/FileFilterFactory.html","title":"class - FileFilterFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileFilterFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/file-filter/file-filter.factory.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(cwd: string, configPath: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/file-filter/file-filter.factory.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cwd\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    configPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FileFilter\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as fs from 'fs';\nimport * as path from 'path';\n\nimport { FileFilter } from './file-filter';\nimport { AcceptAllFileFilter } from './impl/accept-all.file-filter';\nimport { ConstraintFileFilter } from './impl/constraint.file-filter';\nimport { ExternalFileFilter } from './impl/external.file-filter';\n\nexport class FileFilterFactory {\n\n  public create(cwd: string, configPath: string): FileFilter {\n    if (!configPath) {\n      return new AcceptAllFileFilter();\n    }\n\n    const absoluteConfigPath = path.join(cwd, configPath);\n    if (!fs.existsSync(absoluteConfigPath)) {\n      throw new Error('File on config path does not exists!')\n    }\n\n    if (absoluteConfigPath.endsWith('.json')) {\n      const fileContent = fs.readFileSync(absoluteConfigPath, { encoding: 'utf-8' });\n      return new ConstraintFileFilter(JSON.parse(fileContent));\n    }\n\n    if (absoluteConfigPath.endsWith('.js')) {\n      return new ExternalFileFilter(absoluteConfigPath);\n    }\n\n    throw new Error('Unsupported file!')\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphResult.html":{"url":"interfaces/GraphResult.html","title":"interface - GraphResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GraphResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/graph-result.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing one Graph result\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            graph\n                                        \n                                \n                                \n                                        \n                                            sourceFile\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        graph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        graph:         GraphBlock\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GraphBlock\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceFile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sourceFile:     SourceFile\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SourceFile\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SourceFile } from 'ts-morph';\n\nimport { GraphBlock } from './graph-blocks';\n\n/**\n * Interface representing one Graph result\n */\nexport interface GraphResult {\n  sourceFile: SourceFile;\n  graph: GraphBlock;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IncrementalBlockIdGenerator.html":{"url":"classes/IncrementalBlockIdGenerator.html","title":"class - IncrementalBlockIdGenerator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IncrementalBlockIdGenerator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/block-id-generator/incremental-block-id-generator.ts\n        \n\n\n            \n                Description\n            \n            \n                Implementation of BlockIdGenerator\nThe ID is generated by linear incrementation of shared counter.\n\n            \n\n\n            \n                Implements\n            \n            \n                            BlockIdGenerator\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                counter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        counter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/block-id-generator/incremental-block-id-generator.ts:13\n                        \n                    \n\n            \n                \n                    Counter of generated IDs\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generate\n                        \n                    \n                \n            \n            \n                \ngenerate()\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/block-id-generator/incremental-block-id-generator.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BlockIdGenerator } from './block-id-generator';\n\n/**\n * Implementation of {@link BlockIdGenerator}\n *\n *\n * The ID is generated by linear incrementation of shared counter.\n */\nexport class IncrementalBlockIdGenerator implements BlockIdGenerator {\n  /**\n   * Counter of generated IDs\n   */\n  private counter = 0;\n\n  generate(): string {\n    return `${this.counter++}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LineRenderer.html":{"url":"classes/LineRenderer.html","title":"class - LineRenderer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LineRenderer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts\n        \n\n\n            \n                Description\n            \n            \n                Class represents renderer of line between two nodes.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _connectionDescription\n                            \n                            \n                                    Private\n                                _lhsHead\n                            \n                            \n                                    Private\n                                _lineLength\n                            \n                            \n                                    Private\n                                _lineStyle\n                            \n                            \n                                    Private\n                                _lineWidth\n                            \n                            \n                                    Private\n                                _rhsHead\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                dot\n                            \n                            \n                                render\n                            \n                            \n                                setConnectionDescription\n                            \n                            \n                                setLhsHead\n                            \n                            \n                                setLineLength\n                            \n                            \n                                setLineStyle\n                            \n                            \n                                setLineWidth\n                            \n                            \n                                setRhsHead\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    linePiece\n                                \n                                \n                                    lhsHead\n                                \n                                \n                                    rhsHead\n                                \n                                \n                                    isDotted\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(lhsId: string, rhsId: string)\n                    \n                \n                        \n                            \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:65\n                            \n                        \n\n                \n                    \n                            Creates new instance of the LineRenderer.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        lhsId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ID of left node.\n\n                                                        \n                                                \n                                                \n                                                        rhsId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ID of right node.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _connectionDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:45\n                        \n                    \n\n            \n                \n                    Optional description on the line.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _lhsHead\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LINE_HEAD\n\n                    \n                \n                \n                    \n                        Default value : LINE_HEAD.NONE\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:49\n                        \n                    \n\n            \n                \n                    Type of head on left side of the line.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _lineLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:65\n                        \n                    \n\n            \n                \n                    Length of the line.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _lineStyle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LINE_STYLE\n\n                    \n                \n                \n                    \n                        Default value : LINE_STYLE.NORMAL\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:57\n                        \n                    \n\n            \n                \n                    LINE_STYLE Style of the line.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _lineWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LINE_WIDTH\n\n                    \n                \n                \n                    \n                        Default value : LINE_WIDTH.NORMAL\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:61\n                        \n                    \n\n            \n                \n                    LINE_WIDTH Width of the line.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _rhsHead\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LINE_HEAD\n\n                    \n                \n                \n                    \n                        Default value : LINE_HEAD.NONE\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:53\n                        \n                    \n\n            \n                \n                    Type of head on right side of the line.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        dot\n                        \n                    \n                \n            \n            \n                \n                    \n                    dot()\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:205\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        render\n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:144\n                \n            \n\n\n            \n                \n                    Render line with defined options.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setConnectionDescription\n                        \n                    \n                \n            \n            \n                \nsetConnectionDescription(value: string, append)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:81\n                \n            \n\n\n            \n                \n                    Set connection description on the line.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Connection description.\n\n                                    \n                                \n                                \n                                    append\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        True, when description should be appended to existing one, False otherwise.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LineRenderer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLhsHead\n                        \n                    \n                \n            \n            \n                \nsetLhsHead(value: LINE_HEAD)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:96\n                \n            \n\n\n            \n                \n                    Set type of head on left side the line.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                LINE_HEAD\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        LINE_HEAD Type of head.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LineRenderer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLineLength\n                        \n                    \n                \n            \n            \n                \nsetLineLength(value: number)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:136\n                \n            \n\n\n            \n                \n                    Set length of the line.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Length of the line.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LineRenderer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLineStyle\n                        \n                    \n                \n            \n            \n                \nsetLineStyle(value: LINE_STYLE)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:116\n                \n            \n\n\n            \n                \n                    Set style of the line.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                LINE_STYLE\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        LINE_STYLE Style of the line.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LineRenderer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLineWidth\n                        \n                    \n                \n            \n            \n                \nsetLineWidth(value: LINE_WIDTH)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:126\n                \n            \n\n\n            \n                \n                    Set width of the line.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                LINE_WIDTH\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        LINE_WIDTH Width of the line.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LineRenderer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRhsHead\n                        \n                    \n                \n            \n            \n                \nsetRhsHead(value: LINE_HEAD)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:106\n                \n            \n\n\n            \n                \n                    Set type of head on right side the line.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                LINE_HEAD\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        LINE_HEAD Type of head.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LineRenderer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        linePiece\n                    \n                \n\n                \n                    \n                        getlinePiece()\n                    \n                \n                            \n                                \n                                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:173\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        lhsHead\n                    \n                \n\n                \n                    \n                        getlhsHead()\n                    \n                \n                            \n                                \n                                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:179\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        rhsHead\n                    \n                \n\n                \n                    \n                        getrhsHead()\n                    \n                \n                            \n                                \n                                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:192\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isDotted\n                    \n                \n\n                \n                    \n                        getisDotted()\n                    \n                \n                            \n                                \n                                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:209\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        export enum LINE_HEAD {\n  NONE,\n  ARROW,\n  POINT,\n  CROSS,\n}\n\n/**\n * Style of the line.\n *\n * - NORMAL: ---\n * - DOTTED: ...\n */\nexport enum LINE_STYLE {\n  NORMAL,\n  DOTTED,\n}\n\n/**\n * Width of the line.\n *\n * - NORMAL:  ---\n * - THICK: ===\n */\nexport enum LINE_WIDTH {\n  NORMAL,\n  THICK,\n}\n\n/**\n * Class represents renderer of line between two nodes.\n */\nexport class LineRenderer {\n  /**\n   * Optional description on the line.\n   */\n  private _connectionDescription?: string;\n  /**\n   * Type of head on left side of the line.\n   */\n  private _lhsHead: LINE_HEAD = LINE_HEAD.NONE;\n  /**\n   * Type of head on right side of the line.\n   */\n  private _rhsHead: LINE_HEAD = LINE_HEAD.NONE;\n  /**\n   * {@link LINE_STYLE} Style of the line.\n   */\n  private _lineStyle: LINE_STYLE = LINE_STYLE.NORMAL;\n  /**\n   * {@link LINE_WIDTH} Width of the line.\n   */\n  private _lineWidth: LINE_WIDTH = LINE_WIDTH.NORMAL;\n  /**\n   * Length of the line.\n   */\n  private _lineLength = 1;\n\n  /**\n   * Creates new instance of the {@link LineRenderer}.\n   *\n   * @param lhsId {string} ID of left node.\n   * @param rhsId {string} ID of right node.\n   */\n  constructor(private readonly lhsId: string, private readonly rhsId: string) {}\n\n  /**\n   * Set connection description on the line.\n   *\n   * @param value {string} Connection description.\n   * @param append {boolean} True, when description should be appended to existing one, False otherwise.\n   */\n  setConnectionDescription(value: string, append = false): LineRenderer {\n    if (!this._connectionDescription) {\n      this._connectionDescription = value;\n      return this;\n    }\n\n    this._connectionDescription = append ? `${this._connectionDescription}${value}` : value;\n    return this;\n  }\n\n  /**\n   * Set type of head on left side the line.\n   *\n   * @param value {@link LINE_HEAD} Type of head.\n   */\n  setLhsHead(value: LINE_HEAD): LineRenderer {\n    this._lhsHead = value;\n    return this;\n  }\n\n  /**\n   * Set type of head on right side the line.\n   *\n   * @param value {@link LINE_HEAD} Type of head.\n   */\n  setRhsHead(value: LINE_HEAD): LineRenderer {\n    this._rhsHead = value;\n    return this;\n  }\n\n  /**\n   * Set style of the line.\n   *\n   * @param value {@link LINE_STYLE} Style of the line.\n   */\n  setLineStyle(value: LINE_STYLE): LineRenderer {\n    this._lineStyle = value;\n    return this;\n  }\n\n  /**\n   * Set width of the line.\n   *\n   * @param value {@link LINE_WIDTH} Width of the line.\n   */\n  setLineWidth(value: LINE_WIDTH): LineRenderer {\n    this._lineWidth = value;\n    return this;\n  }\n\n  /**\n   * Set length of the line.\n   *\n   * @param value {number} Length of the line.\n   */\n  setLineLength(value: number): LineRenderer {\n    this._lineLength = value;\n    return this;\n  }\n\n  /**\n   * Render line with defined options.\n   */\n  render(): string {\n    let result = `${this.lhsId} `;\n\n    result += this.lhsHead;\n    result += this.linePiece;\n    if (this.isDotted) result += this.dot();\n\n    if (this._connectionDescription) {\n      if (this.isDotted) {\n        result += ` ${this._connectionDescription} `;\n      } else {\n        result += `${this.linePiece} ${this._connectionDescription} ${this.linePiece}`;\n      }\n    } else {\n      const tmpLineLength = this._lineLength;\n      this._lineLength = 1;\n      result += this.linePiece;\n      this._lineLength = tmpLineLength;\n    }\n\n    if (this.isDotted) result += this.dot();\n    result += this.linePiece;\n    result += this.rhsHead;\n\n    result += ` ${this.rhsId}`;\n\n    return result;\n  }\n\n  protected get linePiece(): string {\n    let repeat = this._lineLength;\n    if (this.isDotted) repeat = 1;\n    return (this._lineWidth === LINE_WIDTH.THICK ? '=' : '-').repeat(repeat);\n  }\n\n  protected get lhsHead(): string {\n    switch (this._lhsHead) {\n      case LINE_HEAD.ARROW:\n        return '';\n      case LINE_HEAD.CROSS:\n        return 'x';\n      case LINE_HEAD.POINT:\n        return 'o';\n      default:\n        return '';\n    }\n  }\n\n  protected dot(): string {\n    return '.'.repeat(this._lineLength);\n  }\n\n  protected get isDotted(): boolean {\n    return this._lineStyle === LINE_STYLE.DOTTED;\n  }\n}\n\n/**\n * Modifier of existing {@link LineRenderer}\n */\nexport type LineRendererModifier = (builder: LineRenderer) => LineRenderer;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotConstraint.html":{"url":"classes/NotConstraint.html","title":"class - NotConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/file-filter/constraint/conditional/not.constraint.ts\n        \n\n\n            \n                Description\n            \n            \n                Negation Constraint.\n\n            \n\n            \n                Extends\n            \n            \n                        Constraint\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    \n                                inConstraint\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(constraint: Constraint)\n                    \n                \n                        \n                            \n                                Defined in packages/ast-to-mmd/src/app/file-filter/constraint/conditional/not.constraint.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        constraint\n                                                  \n                                                        \n                                                                        Constraint\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                        inConstraint\n                        \n                    \n                \n            \n            \n                \n                    \n                    inConstraint(value: string)\n                \n            \n\n\n            \n                \n                    Inherited from         Constraint\n\n                \n            \n            \n                \n                        Defined in         Constraint:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Constraint } from '../constraint';\n\n/**\n * Negation {@link Constraint}.\n */\nexport class NotConstraint extends Constraint {\n  constructor(private readonly constraint: Constraint) {\n    super();\n  }\n\n  public override inConstraint(value: string): boolean {\n    return !this.constraint.inConstraint(value);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotEmptyBlockSiblingCondition.html":{"url":"classes/NotEmptyBlockSiblingCondition.html","title":"class - NotEmptyBlockSiblingCondition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotEmptyBlockSiblingCondition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/conditions/impl/not-empty-block.sibling-condition.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            SiblingCondition\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isValid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isValid\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValid(sibling: GraphBlock)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/conditions/impl/not-empty-block.sibling-condition.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sibling\n                                    \n                                                GraphBlock\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BlockKind } from '../../block.kind';\nimport { GraphBlock } from '../../graph-blocks';\nimport { SiblingCondition } from '../sibling.condition';\n\nexport class NotEmptyBlockSiblingCondition  implements SiblingCondition {\n\n  public isValid(sibling: GraphBlock): boolean {\n    return sibling.blockKind !== BlockKind.EMPTY_DECLARATION;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OfKindSiblingCondition.html":{"url":"classes/OfKindSiblingCondition.html","title":"class - OfKindSiblingCondition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OfKindSiblingCondition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/conditions/impl/of-kind.sibling-condition.ts\n        \n\n\n            \n                Description\n            \n            \n                Implementation of SiblingCondition which checks BlockKind.\n\n            \n\n\n            \n                Implements\n            \n            \n                            SiblingCondition\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _blockKinds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isValid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(blockKinds: BlockKind[])\n                    \n                \n                        \n                            \n                                Defined in packages/ast-to-mmd/src/app/conditions/impl/of-kind.sibling-condition.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        blockKinds\n                                                  \n                                                        \n                                                                        BlockKind[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _blockKinds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BlockKind[]\n\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/conditions/impl/of-kind.sibling-condition.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isValid\n                        \n                    \n                \n            \n            \n                \nisValid(sibling: GraphBlock)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/conditions/impl/of-kind.sibling-condition.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sibling\n                                    \n                                                GraphBlock\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BlockKind } from '../../block.kind';\nimport { GraphBlock } from '../../graph-blocks';\nimport { SiblingCondition } from '../sibling.condition';\n\n/**\n * Implementation of {@link SiblingCondition} which checks {@link BlockKind}.\n */\nexport class OfKindSiblingCondition implements SiblingCondition {\n\n  private readonly _blockKinds: BlockKind[];\n\n  constructor(...blockKinds: BlockKind[]) {\n    this._blockKinds = blockKinds;\n  }\n\n  isValid(sibling: GraphBlock): boolean {\n    return this._blockKinds.some((block: BlockKind) => block === sibling.blockKind);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrConstraint.html":{"url":"classes/OrConstraint.html","title":"class - OrConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/file-filter/constraint/conditional/or.constraint.ts\n        \n\n\n            \n                Description\n            \n            \n                Disjunction Constraint.\n\n            \n\n            \n                Extends\n            \n            \n                        Constraint\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _constraints\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    \n                                inConstraint\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(constraints: Constraint[])\n                    \n                \n                        \n                            \n                                Defined in packages/ast-to-mmd/src/app/file-filter/constraint/conditional/or.constraint.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        constraints\n                                                  \n                                                        \n                                                                        Constraint[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _constraints\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Constraint[]\n\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/file-filter/constraint/conditional/or.constraint.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                        inConstraint\n                        \n                    \n                \n            \n            \n                \n                    \n                    inConstraint(value: string)\n                \n            \n\n\n            \n                \n                    Inherited from         Constraint\n\n                \n            \n            \n                \n                        Defined in         Constraint:15\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Constraint } from '../constraint';\n\n/**\n * Disjunction {@link Constraint}.\n */\nexport class OrConstraint extends Constraint {\n  private readonly _constraints: Constraint[];\n\n  constructor(...constraints: Constraint[]) {\n    super();\n\n    this._constraints = constraints;\n  }\n\n  public override inConstraint(value: string): boolean {\n    return this._constraints.some((constraint: Constraint) => constraint.inConstraint(value));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PositiveSiblingCondition.html":{"url":"classes/PositiveSiblingCondition.html","title":"class - PositiveSiblingCondition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PositiveSiblingCondition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/conditions/impl/positive.sibling-condition.ts\n        \n\n\n            \n                Description\n            \n            \n                Positive implementation of SiblingCondition.\nThe condition is always met.\n\n            \n\n\n            \n                Implements\n            \n            \n                            SiblingCondition\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isValid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isValid\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValid(_sibling: GraphBlock)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/conditions/impl/positive.sibling-condition.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _sibling\n                                    \n                                                GraphBlock\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { GraphBlock } from '../../graph-blocks';\nimport { SiblingCondition } from '../sibling.condition';\n\n/**\n * Positive implementation of {@link SiblingCondition}.\n * The condition is always met.\n */\nexport class PositiveSiblingCondition implements SiblingCondition {\n\n  public isValid(_sibling: GraphBlock): boolean {\n    return true;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShapeRenderer.html":{"url":"classes/ShapeRenderer.html","title":"class - ShapeRenderer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShapeRenderer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/graph-blocks/renderer/shape-renderer.ts\n        \n\n\n            \n                Description\n            \n            \n                Class represents renderer of supported shapes by Mermaid.js\nhttps://mermaid-js.github.io/mermaid/#/flowchart?id=node-shapes\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                TEXT_PLACEHOLDER\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        TEXT_PLACEHOLDER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '$TEXT$'\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/shape-renderer.ts:63\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        render\n                        \n                    \n                \n            \n            \n                \nrender(text: string, shape: Shape)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/shape-renderer.ts:71\n                \n            \n\n\n            \n                \n                    Render defined shape with text.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Text in the shape.\n\n                                    \n                                \n                                \n                                    shape\n                                    \n                                                Shape\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Shape Type of the shape.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export enum Shape {\n  DEFAULT = '$TEXT$',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-node-with-round-edges}\n   */\n  ROUND_EDGES = '($TEXT$)',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-node-with-text}\n   */\n  SHARP_EDGES = '[$TEXT$]',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-stadium-shaped-node}\n   */\n  STADIUM_SHAPED = '([$TEXT$])',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-node-in-a-subroutine-shape}\n   */\n  SUBROUTINE = '[[$TEXT$]]',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-node-in-a-cylindrical-shape}\n   */\n  CYLINDER = '[($TEXT$)]',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-node-in-the-form-of-a-circle}\n   */\n  CIRCLE = '(($TEXT$))',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-node-in-an-asymmetric-shape}\n   */\n  ASYMETRIC_RIGHT = '>$TEXT$]',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-node-rhombus}\n   */\n  RHOMBUS = '{$TEXT$}',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-hexagon-node}\n   */\n  HEXAGON = '{{$TEXT$}}',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=parallelogram}\n   */\n  PARALLEOGRAM = '[/$TEXT$/]',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=parallelogram-alt}\n   */\n  PARALLEOGRAM_ALT = '[\\\\$TEXT$\\\\]',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=trapezoid}\n   */\n  TRAPEZOID = '[/$TEXT$\\\\]',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=trapezoid-alt}\n   */\n  TRAPEZOID_ALT = '[\\\\$TEXT$/]',\n}\n\n/**\n * Class represents renderer of supported shapes by Mermaid.js\n *\n * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=node-shapes}\n */\nexport class ShapeRenderer {\n  private static readonly TEXT_PLACEHOLDER = '$TEXT$';\n\n  /**\n   * Render defined shape with text.\n   *\n   * @param text {string} Text in the shape.\n   * @param shape {@link Shape} Type of the shape.\n   */\n  render(text: string, shape: Shape): string {\n    return shape.valueOf().replace(ShapeRenderer.TEXT_PLACEHOLDER, `\"${text}\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SiblingCondition.html":{"url":"interfaces/SiblingCondition.html","title":"interface - SiblingCondition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SiblingCondition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/conditions/sibling.condition.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing condition for resolving siblings of defined child;\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        isValid\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isValid\n                        \n                    \n                \n            \n            \n                \nisValid(sibling: GraphBlock)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/conditions/sibling.condition.ts:13\n                \n            \n\n\n            \n                \n                    Based on used condition is checked whether the tested sibling is valid or not.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sibling\n                                    \n                                                GraphBlock\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        GraphBlock Tested sibling.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { GraphBlock } from '../graph-blocks';\n\n/**\n * Interface representing condition for resolving siblings of defined child;\n */\nexport interface SiblingCondition {\n\n  /**\n   * Based on used condition is checked whether the tested sibling is valid or not.\n   *\n   * @param sibling {@link GraphBlock} Tested sibling.\n   */\n  isValid(sibling: GraphBlock): boolean;\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StartsWithConstraint.html":{"url":"classes/StartsWithConstraint.html","title":"class - StartsWithConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StartsWithConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/file-filter/constraint/impl/starts-with.constraint.ts\n        \n\n\n            \n                Description\n            \n            \n                Constraint which check whether the value start with specific value.\n\n            \n\n            \n                Extends\n            \n            \n                        Constraint\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    \n                                inConstraint\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(startsWith: string)\n                    \n                \n                        \n                            \n                                Defined in packages/ast-to-mmd/src/app/file-filter/constraint/impl/starts-with.constraint.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        startsWith\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                        inConstraint\n                        \n                    \n                \n            \n            \n                \n                    \n                    inConstraint(value: string)\n                \n            \n\n\n            \n                \n                    Inherited from         Constraint\n\n                \n            \n            \n                \n                        Defined in         Constraint:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Constraint } from '../constraint';\n\n/**\n * {@link Constraint} which check whether the value start with specific value.\n */\nexport class StartsWithConstraint extends Constraint {\n  constructor(private readonly startsWith: string) {\n    super();\n  }\n\n  public override inConstraint(value: string): boolean {\n    return value.startsWith(this.startsWith);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UuidBlockIdGenerator.html":{"url":"classes/UuidBlockIdGenerator.html","title":"class - UuidBlockIdGenerator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UuidBlockIdGenerator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/block-id-generator/uuid-block-id-generator.ts\n        \n\n\n            \n                Description\n            \n            \n                Implementation of BlockIdGenerator\nThe ID is generated by calling randomUUID function from 'crypto'\npackage\n\n            \n\n\n            \n                Implements\n            \n            \n                            BlockIdGenerator\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generate\n                        \n                    \n                \n            \n            \n                \ngenerate()\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/block-id-generator/uuid-block-id-generator.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { randomUUID } from 'crypto';\n\nimport { BlockIdGenerator } from './block-id-generator';\n\n/**\n * Implementation of {@link BlockIdGenerator}\n *\n *\n * The ID is generated by calling {@link randomUUID} function from 'crypto'\n * package\n */\nexport class UuidBlockIdGenerator implements BlockIdGenerator {\n  generate(): string {\n    return randomUUID().replace(/-/g, '_');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                packages/ast-to-mmd/src/app/block-id-generator/block-id-generator.ts\n            \n            interface\n            BlockIdGenerator\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/block-id-generator/incremental-block-id-generator.ts\n            \n            class\n            IncrementalBlockIdGenerator\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/block-id-generator/uuid-block-id-generator.ts\n            \n            class\n            UuidBlockIdGenerator\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/block.kind.ts\n            \n            variable\n            CYCLE_BLOCK_KIND\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/conditions/impl/not-empty-block.sibling-condition.ts\n            \n            class\n            NotEmptyBlockSiblingCondition\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/conditions/impl/of-kind.sibling-condition.ts\n            \n            class\n            OfKindSiblingCondition\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/conditions/impl/positive.sibling-condition.ts\n            \n            class\n            PositiveSiblingCondition\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/conditions/sibling.condition.ts\n            \n            interface\n            SiblingCondition\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/convertor.ts\n            \n            class\n            Convertor\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/exporter.ts\n            \n            class\n            Exporter\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/file-filter/constraint/conditional/and.constraint.ts\n            \n            class\n            AndConstraint\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/file-filter/constraint/conditional/not.constraint.ts\n            \n            class\n            NotConstraint\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/file-filter/constraint/conditional/or.constraint.ts\n            \n            class\n            OrConstraint\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/file-filter/constraint/constraint.ts\n            \n            class\n            Constraint\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/file-filter/constraint/impl/contains.constraint.ts\n            \n            class\n            ContainsConstraint\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/file-filter/constraint/impl/ends-with.constraint.ts\n            \n            class\n            EndsWithConstraint\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/file-filter/constraint/impl/starts-with.constraint.ts\n            \n            class\n            StartsWithConstraint\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/file-filter/file-filter.factory.ts\n            \n            class\n            FileFilterFactory\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/file-filter/file-filter.ts\n            \n            interface\n            FileFilter\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/file-filter/impl/accept-all.file-filter.ts\n            \n            class\n            AcceptAllFileFilter\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/file-filter/impl/builder/config-constraint.factory.ts\n            \n            class\n            ConfigConstraintFactory\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/file-filter/impl/constraint.file-filter.ts\n            \n            class\n            ConstraintFileFilter\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/file-filter/impl/external.file-filter.ts\n            \n            class\n            ExternalFileFilter\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/base-cycle-declaration-graph.block.ts\n            \n            class\n            BaseCycleDeclarationGraphBlock\n            \n                62 %\n                (23/37)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/base-exit-declaration.graph-block.ts\n            \n            class\n            BaseExitDeclarationGraphBlock\n            \n                86 %\n                (25/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/binary-expression-declaration.graph-block.ts\n            \n            class\n            BinaryExpressionDeclarationGraphBlock\n            \n                82 %\n                (24/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/block-declaration.graph-block.ts\n            \n            class\n            BlockDeclarationGraphBlock\n            \n                74 %\n                (23/31)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/break-declaration.graph-block.ts\n            \n            class\n            BreakDeclarationGraphBlock\n            \n                82 %\n                (24/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/continue-declaration.graph-block.ts\n            \n            class\n            ContinueDeclarationGraphBlock\n            \n                82 %\n                (24/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/empty.graph-block.ts\n            \n            class\n            EmptyGraphBlock\n            \n                82 %\n                (24/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/for-declaration.graph-block.ts\n            \n            class\n            ForDeclarationGraphBlock\n            \n                62 %\n                (23/37)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/for-in-declaration.graph-block.ts\n            \n            class\n            ForInDeclarationGraphBlock\n            \n                62 %\n                (23/37)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/for-of-declaration.graph-block.ts\n            \n            class\n            ForOfDeclarationGraphBlock\n            \n                62 %\n                (23/37)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/for-x-declaration.graph-block.ts\n            \n            class\n            ForXDeclarationGraphBlock\n            \n                62 %\n                (23/37)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/graph-block.ts\n            \n            class\n            GraphBlock\n            \n                93 %\n                (27/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/graph-parent.graph-block.ts\n            \n            class\n            GraphParentGraphBlock\n            \n                74 %\n                (23/31)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/if-else-declaration.graph-block.ts\n            \n            class\n            IfElseDeclarationGraphBlock\n            \n                60 %\n                (23/38)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/method-call.graph-block.ts\n            \n            class\n            MethodCallGraphBlock\n            \n                82 %\n                (24/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/named-block-declaration.graph-block.ts\n            \n            class\n            NamedBlockDeclarationGraphBlock\n            \n                71 %\n                (23/32)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/parallel-block-declaration.graph-block.ts\n            \n            class\n            ParallelBlockDeclarationGraphBlock\n            \n                74 %\n                (23/31)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts\n            \n            class\n            LineRenderer\n            \n                93 %\n                (15/16)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/renderer/shape-renderer.ts\n            \n            class\n            ShapeRenderer\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/return-declaration.graph-block.ts\n            \n            class\n            ReturnDeclarationGraphBlock\n            \n                82 %\n                (24/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/text.graph-block.ts\n            \n            class\n            TextGraphBlock\n            \n                82 %\n                (24/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/throw-declaration.graph-block.ts\n            \n            class\n            ThrowDeclarationGraphBlock\n            \n                82 %\n                (24/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/try-catch-declaration.graph-block.ts\n            \n            class\n            TryCatchDeclarationGraphBlock\n            \n                55 %\n                (24/43)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/variable-declaration-list.graph-block.ts\n            \n            class\n            VariableDeclarationListGraphBlock\n            \n                82 %\n                (24/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/variable-declaration.graph-block.ts\n            \n            class\n            VariableDeclarationGraphBlock\n            \n                82 %\n                (24/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-parser/include-file.ts\n            \n            function\n            includeFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-parser/include-file.ts\n            \n            function\n            resolveDecoratorType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-parser/include-file.ts\n            \n            function\n            resolveFileType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-parser/include-file.ts\n            \n            variable\n            decoratorTypeMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-parser/include-file.ts\n            \n            variable\n            fileTypeMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-parser/parser.ts\n            \n            class\n            CodeParser\n            \n                100 %\n                (26/26)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-result.ts\n            \n            interface\n            GraphResult\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            convertor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            cwd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            exporter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            fileFilter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            fileFilterFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            graphResults\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            idGenerator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            options\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            project\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            tsMorphOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            version\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @mermaid-js/mermaid-cli : ^8.13.10\n        \n            chalk : ^5.0.0\n        \n            clear : ^0.1.0\n        \n            commander : ^9.0.0\n        \n            figlet : ^1.5.2\n        \n            path : ^0.12.7\n        \n            ts-morph : ^13.0.3\n        \n            tslib : ^2.0.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BlockKind   (packages/.../block.kind.ts)\n                        \n                        \n                            DecoratorType   (packages/.../include-file.ts)\n                        \n                        \n                            FileType   (packages/.../include-file.ts)\n                        \n                        \n                            LINE_HEAD   (packages/.../line-renderer.ts)\n                        \n                        \n                            LINE_STYLE   (packages/.../line-renderer.ts)\n                        \n                        \n                            LINE_WIDTH   (packages/.../line-renderer.ts)\n                        \n                        \n                            Shape   (packages/.../shape-renderer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/ast-to-mmd/src/app/block.kind.ts\n    \n        \n            \n                \n                    \n                        \n                        BlockKind\n                    \n                \n                        \n                            \n                                 BINARY_EXPRESSION_DECLARATION\n                            \n                        \n                        \n                            \n                                 BLOCK_DECLARATION\n                            \n                        \n                        \n                            \n                                 BREAK_DECLARATION\n                            \n                        \n                        \n                            \n                                 CONTINUE_DECLARATION\n                            \n                        \n                        \n                            \n                                 EMPTY_DECLARATION\n                            \n                        \n                        \n                            \n                                 FOR_DECLARATION\n                            \n                        \n                        \n                            \n                                 FOR_IN_DECLARATION\n                            \n                        \n                        \n                            \n                                 FOR_OF_DECLARATION\n                            \n                        \n                        \n                            \n                                 PARENT_DECLARATION\n                            \n                        \n                        \n                            \n                                 IF_ELSE_DECLARATION\n                            \n                        \n                        \n                            \n                                 METHOD_CALL_DECLARATION\n                            \n                        \n                        \n                            \n                                 NAMED_BLOCK_DECLARATION\n                            \n                        \n                        \n                            \n                                 PARALLEL_BLOCK_DECLARATION\n                            \n                        \n                        \n                            \n                                 RETURN_DECLARATION\n                            \n                        \n                        \n                            \n                                 TEXT_DECLARATION\n                            \n                        \n                        \n                            \n                                 THROW_DECLARATION\n                            \n                        \n                        \n                            \n                                 TRY_CATCH_DECLARATION\n                            \n                        \n                        \n                            \n                                 VARIABLE_DECLARATION\n                            \n                        \n                        \n                            \n                                 VARIABLE_LIST_DECLARATION\n                            \n                        \n            \n        \n\n    packages/ast-to-mmd/src/app/graph-parser/include-file.ts\n    \n        \n            \n                \n                    \n                        \n                        DecoratorType\n                    \n                \n                        \n                            \n                                 INJECTABLE\n                            \n                        \n                        \n                            \n                                 CONTROLLER\n                            \n                        \n                        \n                            \n                                 COMMAND_HANDLER\n                            \n                        \n                        \n                            \n                                 QUERY_HANDLER\n                            \n                        \n                        \n                            \n                                 EVENT_HANDLER\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        FileType\n                    \n                \n                        \n                            \n                                 CONTROLLER\n                            \n                        \n                        \n                            \n                                 FACADE\n                            \n                        \n                        \n                            \n                                 SERVICE\n                            \n                        \n                        \n                            \n                                 HANDLER\n                            \n                        \n            \n        \n\n    packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts\n    \n        \n            \n                \n                    \n                        \n                        LINE_HEAD\n                    \n                \n                    \n                        \n                            Style of head of the line.\n\nNONE: ---\nARROR: -->\nPOINT: --O\nCROSS: --X\n\n\n                        \n                    \n                        \n                            \n                                 NONE\n                            \n                        \n                        \n                            \n                                 ARROW\n                            \n                        \n                        \n                            \n                                 POINT\n                            \n                        \n                        \n                            \n                                 CROSS\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        LINE_STYLE\n                    \n                \n                    \n                        \n                            Style of the line.\n\nNORMAL: ---\nDOTTED: ...\n\n\n                        \n                    \n                        \n                            \n                                 NORMAL\n                            \n                        \n                        \n                            \n                                 DOTTED\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        LINE_WIDTH\n                    \n                \n                    \n                        \n                            Width of the line.\n\nNORMAL:  ---\nTHICK: ===\n\n\n                        \n                    \n                        \n                            \n                                 NORMAL\n                            \n                        \n                        \n                            \n                                 THICK\n                            \n                        \n            \n        \n\n    packages/ast-to-mmd/src/app/graph-blocks/renderer/shape-renderer.ts\n    \n        \n            \n                \n                    \n                        \n                        Shape\n                    \n                \n                        \n                            \n                                 DEFAULT\n                            \n                        \n                        \n                            \n                                Value : $TEXT$\n                            \n                        \n                        \n                            \n                                 ROUND_EDGES\n                            \n                        \n                        \n                            \n                                Value : ($TEXT$)\n                            \n                        \n                        \n                            \n                                 SHARP_EDGES\n                            \n                        \n                        \n                            \n                                Value : [$TEXT$]\n                            \n                        \n                        \n                            \n                                 STADIUM_SHAPED\n                            \n                        \n                        \n                            \n                                Value : ([$TEXT$])\n                            \n                        \n                        \n                            \n                                 SUBROUTINE\n                            \n                        \n                        \n                            \n                                Value : [[$TEXT$]]\n                            \n                        \n                        \n                            \n                                 CYLINDER\n                            \n                        \n                        \n                            \n                                Value : [($TEXT$)]\n                            \n                        \n                        \n                            \n                                 CIRCLE\n                            \n                        \n                        \n                            \n                                Value : (($TEXT$))\n                            \n                        \n                        \n                            \n                                 ASYMETRIC_RIGHT\n                            \n                        \n                        \n                            \n                                Value : >$TEXT$]\n                            \n                        \n                        \n                            \n                                 RHOMBUS\n                            \n                        \n                        \n                            \n                                Value : {$TEXT$}\n                            \n                        \n                        \n                            \n                                 HEXAGON\n                            \n                        \n                        \n                            \n                                Value : {{$TEXT$}}\n                            \n                        \n                        \n                            \n                                 PARALLEOGRAM\n                            \n                        \n                        \n                            \n                                Value : [/$TEXT$/]\n                            \n                        \n                        \n                            \n                                 PARALLEOGRAM_ALT\n                            \n                        \n                        \n                            \n                                Value : [\\$TEXT$\\]\n                            \n                        \n                        \n                            \n                                 TRAPEZOID\n                            \n                        \n                        \n                            \n                                Value : [/$TEXT$\\]\n                            \n                        \n                        \n                            \n                                 TRAPEZOID_ALT\n                            \n                        \n                        \n                            \n                                Value : [\\$TEXT$/]\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            includeFile   (packages/.../include-file.ts)\n                        \n                        \n                            resolveDecoratorType   (packages/.../include-file.ts)\n                        \n                        \n                            resolveFileType   (packages/.../include-file.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/ast-to-mmd/src/app/graph-parser/include-file.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        includeFile\n                        \n                    \n                \n            \n            \n                \nincludeFile(analyzedClass: ClassDeclaration)\n                \n            \n\n\n\n\n            \n                \n                    Based on the analyzed class is defined,\nwhether the MMD graph is generated or not.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    analyzedClass\n                                    \n                                            ClassDeclaration\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Analyzed class\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolveDecoratorType\n                        \n                    \n                \n            \n            \n                \nresolveDecoratorType(decorators)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    decorators\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DecoratorType | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolveFileType\n                        \n                    \n                \n            \n            \n                \nresolveFileType(analyzedClass: ClassDeclaration)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    analyzedClass\n                                    \n                                            ClassDeclaration\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FileType | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAST-to-MMD\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    45 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FileFilterConfig   (packages/.../file-filter.config.ts)\n                        \n                        \n                            FileFilterConfigKey   (packages/.../file-filter.config.ts)\n                        \n                        \n                            FileFilterConfigType   (packages/.../file-filter.config.ts)\n                        \n                        \n                            LineRendererModifier   (packages/.../line-renderer.ts)\n                        \n                        \n                            RecursivePartial   (packages/.../file-filter.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/ast-to-mmd/src/app/file-filter/file-filter.config.ts\n    \n    \n        \n            \n                \n                    \n                    FileFilterConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FileFilterConfigKey\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FileFilterConfigType\n                \n            \n            \n                \n                            RecursivePartial\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RecursivePartial\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts\n    \n    \n        \n            \n                \n                    \n                    LineRendererModifier\n                \n            \n            \n                \n                    Modifier of existing LineRenderer\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            convertor   (packages/.../index.ts)\n                        \n                        \n                            cwd   (packages/.../index.ts)\n                        \n                        \n                            CYCLE_BLOCK_KIND   (packages/.../block.kind.ts)\n                        \n                        \n                            decoratorTypeMap   (packages/.../include-file.ts)\n                        \n                        \n                            exporter   (packages/.../index.ts)\n                        \n                        \n                            fileFilter   (packages/.../index.ts)\n                        \n                        \n                            fileFilterFactory   (packages/.../index.ts)\n                        \n                        \n                            fileTypeMap   (packages/.../include-file.ts)\n                        \n                        \n                            graphResults   (packages/.../index.ts)\n                        \n                        \n                            idGenerator   (packages/.../index.ts)\n                        \n                        \n                            options   (packages/.../index.ts)\n                        \n                        \n                            project   (packages/.../index.ts)\n                        \n                        \n                            tsMorphOptions   (packages/.../index.ts)\n                        \n                        \n                            version   (packages/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/ast-to-mmd/src/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        convertor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Convertor(project.getSourceFiles(), fileFilter, idGenerator)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cwd\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.cwd()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exporter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Exporter(options['output'])\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileFilter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileFilter\n\n                    \n                \n                \n                    \n                        Default value : fileFilterFactory.create(cwd, options['fileFilter'])\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileFilterFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FileFilterFactory()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        graphResults\n                        \n                    \n                \n            \n                \n                    \n                        Default value : convertor.convert()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        idGenerator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new UuidBlockIdGenerator()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Default value : program.opts()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        project\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Project(tsMorphOptions)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tsMorphOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProjectOptions\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Default value : JSON.parse(\n  readFileSync(path.resolve(__dirname, '../../../../', 'package.json'), { encoding: 'utf-8' })\n).version\n                    \n                \n\n\n        \n    \n\n    packages/ast-to-mmd/src/app/block.kind.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CYCLE_BLOCK_KIND\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BlockKind[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  BlockKind.FOR_DECLARATION,\n  BlockKind.FOR_IN_DECLARATION,\n  BlockKind.FOR_OF_DECLARATION,\n]\n                    \n                \n\n\n        \n    \n\n    packages/ast-to-mmd/src/app/graph-parser/include-file.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        decoratorTypeMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Record\n\n                    \n                \n                \n                    \n                        Default value : {\n  Injectable: DecoratorType.INJECTABLE,\n  Controller: DecoratorType.CONTROLLER,\n  CommandHandler: DecoratorType.COMMAND_HANDLER,\n  QueryHandler: DecoratorType.QUERY_HANDLER,\n  EventHandler: DecoratorType.EVENT_HANDLER,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileTypeMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Record\n\n                    \n                \n                \n                    \n                        Default value : {\n  Controller: FileType.CONTROLLER,\n  Facade: FileType.FACADE,\n  Service: FileType.SERVICE,\n  Handler: FileType.HANDLER,\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
