var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/BlockIdGenerator.html",[0,1.195,1,1.018]],["body/interfaces/BlockIdGenerator.html",[0,1.891,1,1.611,2,2.138,3,0.938,4,0.938,5,0.787,6,0.515,7,2.227,8,1.978,9,3.212,10,1.798,11,0.787,12,3.284,13,3.284,14,1.798,15,1.798,16,0.416,17,1.371,18,3.006,19,0.938,20,3.284,21,3.212,22,1.161,23,0.062,24,1.75,25,4.068,26,0.938,27,0.05,28,0.05]],["title/classes/Convertor.html",[29,0.168,30,1.407]],["body/classes/Convertor.html",[1,1.637,3,0.554,4,1.22,5,0.808,6,0.47,8,0.769,11,0.682,14,2.263,15,1.846,16,0.246,17,0.96,19,1.129,21,2.248,22,0.554,23,0.064,26,0.554,27,0.035,28,0.035,29,0.221,30,2.033,31,1.137,32,1.532,33,2.248,34,2.847,35,4.134,36,2.399,37,1.323,38,2.033,39,2.165,40,3.46,41,2.662,42,3.714,43,1.263,44,1.941,45,2.852,46,2.418,47,2.847,48,2.248,49,1.986,50,2.418,51,0.902,52,0.902,53,0.682,54,0.902,55,3.372,56,2.847,57,2.847,58,1.846,59,2.248,60,1.941,61,2.847,62,2.847,63,2.847,64,1.726,65,1.838,66,2.248,67,2.847,68,1.263,69,1.263,70,1.532,71,2.662,72,1.532,73,1.532,74,1.941,75,1.062,76,1.471,77,1.559,78,1.263,79,1.941,80,1.941,81,2.91,82,2.847,83,1.941,84,1.853,85,1.941,86,1.941,87,2.847,88,1.941,89,2.847,90,1.941,91,2.847,92,2.847,93,2.847,94,2.847,95,1.941,96,1.941,97,1.941,98,0.902]],["title/classes/Exporter.html",[29,0.168,99,1.407]],["body/classes/Exporter.html",[3,0.685,4,0.685,5,0.575,6,0.48,11,0.909,16,0.304,17,1.116,19,1.167,22,0.685,23,0.063,24,1.619,26,1.225,27,0.055,28,0.041,29,0.248,31,0.809,33,2.615,36,2.536,39,1.314,41,2.994,43,1.562,45,1.562,49,1.539,50,2.156,51,1.539,52,1.539,53,0.794,54,1.539,64,2.061,65,1.762,75,1.314,76,1.311,77,1.813,78,1.562,81,2.468,99,2.238,100,1.895,101,3.311,102,1.813,103,3.311,104,4.435,105,2.399,106,2.399,107,3.311,108,3.792,109,3.657,110,3.311,111,3.311,112,2.399,113,3.311,114,2.468,115,3.311,116,2.399,117,2.399,118,2.399,119,2.399,120,2.399,121,1.562,122,3.311,123,2.399,124,2.399,125,1.895,126,1.895,127,1.895]],["title/interfaces/GraphResult.html",[0,1.195,64,1.195]],["body/interfaces/GraphResult.html",[0,2.042,2,2.111,3,0.926,4,0.926,5,0.777,6,0.411,11,0.777,14,2.517,16,0.411,23,0.063,26,0.926,27,0.05,28,0.05,36,2.677,37,1.876,45,3.217,53,0.967,64,1.876,65,1.876,68,2.111,69,2.111,73,2.56,75,2.209,128,1.093,129,2.56,130,4.035,131,4.035]],["title/classes/IncrementalBlockIdGenerator.html",[29,0.168,132,1.673]],["body/classes/IncrementalBlockIdGenerator.html",[1,1.791,3,0.8,4,0.8,5,0.672,6,0.52,7,2.246,8,1.922,10,1.535,11,0.672,15,1.535,16,0.355,17,1.239,18,2.835,19,1.05,22,0.8,23,0.063,24,1.456,26,0.8,27,0.045,28,0.045,29,0.184,31,0.945,37,1.709,38,2.246,53,0.672,58,2.385,59,2.903,65,1.303,76,1.11,98,1.303,102,2.385,132,2.394,133,3.24,134,2.903,135,3.677,136,3.677,137,3.677,138,4.73,139,2.903,140,2.214,141,1.303,142,1.303,143,2.903,144,2.214,145,2.804,146,2.804]],["title/classes/LineRenderer.html",[29,0.168,147,1.673]],["body/classes/LineRenderer.html",[3,0.268,4,0.268,5,0.225,6,0.548,8,0.974,11,0.959,16,0.119,17,0.538,19,1.247,22,0.962,23,0.064,24,1.713,26,0.702,27,0.02,28,0.02,29,0.137,31,0.317,37,0.742,38,2.345,39,0.874,43,0.611,48,1.261,49,0.742,50,1.04,51,1.487,52,1.487,53,1.078,54,1.741,75,2.103,76,1.267,77,1.844,78,0.611,81,0.611,98,1.86,128,1.458,140,2.177,141,1.394,142,2.062,147,2.689,148,2.817,149,0.514,150,1.261,151,1.261,152,3.731,153,1.597,154,1.597,155,1.597,156,2.084,157,2.084,158,2.084,159,2.084,160,2.084,161,2.084,162,2.998,163,2.459,164,2.367,165,1.597,166,1.597,167,1.597,168,1.597,169,1.597,170,1.597,171,1.597,172,2.084,173,2.084,174,1.597,175,2.084,176,0.939,177,2.459,178,1.597,179,2.084,180,2.998,181,1.942,182,2.998,183,0.939,184,3.213,185,2.459,186,0.939,187,3.033,188,3.368,189,2.459,190,2.998,191,2.871,192,1.597,193,0.939,194,2.526,195,2.871,196,1.597,197,0.939,198,2.526,199,0.939,200,0.939,201,0.939,202,1.04,203,1.597,204,0.939,205,3.841,206,2.459,207,1.597,208,0.939,209,1.597,210,0.939,211,1.597,212,0.939,213,1.597,214,0.939,215,1.597,216,0.939,217,0.939,218,0.939,219,0.939,220,0.939,221,0.939,222,0.939,223,0.939,224,0.939,225,1.646,226,0.741,227,0.741,228,0.741,229,0.741,230,1.942,231,1.261,232,1.261,233,2.459,234,1.597,235,0.939,236,1.597,237,1.597,238,2.757,239,0.939,240,0.939,241,2.757,242,2.459,243,1.597,244,1.597,245,0.939,246,0.939,247,1.597,248,0.939,249,0.939,250,0.939,251,2.084,252,0.939,253,0.939,254,0.611,255,0.939,256,0.741,257,0.939,258,0.939,259,0.939]],["title/classes/ShapeRenderer.html",[29,0.168,260,1.673]],["body/classes/ShapeRenderer.html",[3,0.539,4,0.539,5,0.452,6,0.42,11,0.668,16,0.239,17,0.94,19,1.046,22,0.539,23,0.064,24,1.677,26,0.796,27,0.034,28,0.034,29,0.217,31,0.636,37,1.296,38,1.816,39,1.816,51,0.877,52,0.877,53,0.878,54,0.877,76,1.885,77,1.527,98,0.877,128,1.118,141,1.296,142,0.877,149,1.033,150,2.202,151,2.202,164,2.893,181,3.504,225,1.49,260,1.815,261,2.159,262,2.788,263,3.664,264,2.788,265,4.76,266,2.788,267,3.317,268,3.317,269,3.918,270,1.887,271,2.788,272,3.847,273,1.887,274,4.438,275,1.887,276,1.887,277,1.49,278,1.49,279,1.887,280,1.887,281,1.49,282,2.202,283,1.887,284,1.49,285,1.887,286,2.202,287,1.887,288,1.49,289,2.202,290,2.202,291,2.788,292,1.49,293,2.788,294,1.49,295,2.788,296,1.49,297,1.49,298,1.887]],["title/classes/UuidBlockIdGenerator.html",[29,0.168,299,1.407]],["body/classes/UuidBlockIdGenerator.html",[1,1.828,3,0.855,4,0.855,5,0.718,6,0.486,7,2.101,8,1.902,10,1.639,11,0.718,15,1.639,16,0.379,17,1.293,18,2.907,19,0.855,22,0.855,23,0.063,24,1.519,26,0.855,27,0.047,28,0.047,29,0.196,31,1.009,58,2.318,65,1.783,76,1.519,98,1.392,102,2.101,134,3.03,139,3.03,144,2.364,299,2.101,300,3.03,301,3.837,302,4.234,303,3.03,304,4.234,305,3.03,306,2.994,307,2.994,308,2.994]],["title/coverage.html",[309,2.74]],["body/coverage.html",[0,1.101,1,0.603,5,0.365,6,0.64,7,1.592,8,1.491,9,1.202,10,1.592,14,0.833,23,0.062,27,0.029,28,0.029,29,0.321,30,1.297,32,1.202,40,1.202,46,0.991,49,0.707,53,0.365,58,1.797,64,0.707,70,1.202,71,1.202,72,1.202,99,1.297,100,1.202,114,0.991,128,1.661,129,1.202,132,0.991,133,1.202,143,3.535,147,0.991,148,0.991,149,1.297,202,0.991,254,0.991,260,0.991,261,0.991,299,0.833,300,1.202,303,2.296,309,1.202,310,1.522,311,1.522,312,1.522,313,3.556,314,1.522,315,2.369,316,2.369,317,1.522,318,1.522,319,1.522,320,1.522,321,2.369,322,1.522,323,4.575,324,4.771,325,1.522,326,1.522,327,1.522,328,1.522,329,3.766,330,3.766,331,1.522,332,1.522,333,1.522,334,4.066,335,4.066,336,1.522,337,1.522,338,2.908,339,2.908,340,1.522,341,1.522,342,3.282,343,1.522,344,1.522,345,1.522,346,1.522,347,2.369,348,1.522,349,1.522,350,1.522,351,1.522,352,1.522,353,1.522,354,1.522,355,1.522,356,1.522,357,1.522,358,1.522,359,1.522,360,1.522,361,1.522,362,1.522,363,1.522,364,1.522,365,1.522,366,1.522,367,1.522,368,1.522,369,1.522,370,1.522,371,1.522,372,1.522,373,2.369,374,1.522,375,1.522,376,1.522,377,1.522,378,1.947,379,1.947,380,1.202,381,1.522,382,1.202,383,4.477,384,1.202,385,4.349,386,1.202,387,1.202,388,1.522,389,1.522,390,1.522,391,1.522,392,3.298,393,1.202,394,1.202,395,1.202,396,1.202,397,1.522,398,1.522]],["title/dependencies.html",[305,1.709,399,2.432]],["body/dependencies.html",[23,0.063,27,0.053,28,0.053,68,2.351,69,2.351,109,2.852,399,2.852,400,3.612,401,3.612,402,3.612,403,3.612,404,3.612,405,3.612,406,3.612,407,3.612,408,3.612,409,3.612,410,3.612,411,3.612,412,3.612,413,3.612,414,3.612,415,3.612]],["title/miscellaneous/enumerations.html",[416,0.857,417,2.432]],["body/miscellaneous/enumerations.html",[6,0.504,16,0.334,23,0.062,27,0.043,28,0.043,128,1.341,141,1.225,142,2.313,148,1.716,149,2.497,152,3.142,184,2.787,187,2.082,191,2.787,194,2.787,195,2.787,198,2.082,226,2.787,227,2.082,228,2.787,229,2.787,230,3.356,231,2.787,232,2.787,254,1.716,256,2.082,261,1.716,269,3.929,272,2.787,277,2.082,278,2.082,281,2.082,282,2.082,284,2.082,286,2.082,288,2.082,289,2.082,290,2.082,292,2.082,294,2.082,296,2.082,297,2.082,378,1.443,379,2.179,416,1.044,417,2.082,418,2.787,419,2.298,420,2.787,421,3.98,422,2.636,423,2.082,424,2.787,425,2.636,426,2.636,427,2.636,428,2.082,429,2.082,430,2.082,431,2.636]],["title/miscellaneous/functions.html",[84,2.005,416,0.857]],["body/miscellaneous/functions.html",[6,0.405,11,0.767,16,0.405,19,0.914,22,1.143,23,0.061,27,0.049,28,0.049,29,0.262,36,1.753,51,2.03,52,2.03,53,0.96,54,2.03,66,3.614,84,2.084,102,1.753,121,2.084,128,1.079,378,1.753,379,2.506,380,3.161,382,3.161,384,3.161,416,1.268,418,2.528,419,2.844,420,2.528,432,3.202,433,3.202,434,4.003,435,3.202,436,4.003,437,3.202,438,3.202,439,4.003,440,3.202]],["title/index.html",[16,0.274,441,2.164,442,2.164]],["body/index.html",[23,0.056,27,0.056,28,0.056,121,2.591,443,3.98]],["title/modules.html",[444,2.74]],["body/modules.html",[23,0.056,27,0.056,28,0.056,444,3.155]],["title/overview.html",[445,2.74]],["body/overview.html",[2,2.561,23,0.056,27,0.056,28,0.056,31,1.326,445,3.106,446,3.933,447,3.933]],["title/miscellaneous/variables.html",[416,0.857,448,2.432]],["body/miscellaneous/variables.html",[6,0.448,16,0.335,23,0.063,27,0.043,28,0.043,30,1.936,46,2.594,49,1.978,53,0.955,99,1.936,114,2.302,125,2.087,126,2.087,127,2.087,128,0.891,141,2.272,142,2.272,202,2.302,299,1.447,378,1.447,379,2.182,386,2.792,387,2.792,392,2.087,393,2.792,394,2.792,395,2.792,396,3.147,416,1.047,419,2.302,423,2.087,424,2.792,428,2.087,429,2.087,430,2.087,448,2.087,449,4.797,450,2.643,451,2.643,452,2.643,453,2.643,454,2.643,455,2.643,456,2.643,457,2.643,458,2.643,459,2.643,460,3.536,461,2.643,462,2.643,463,2.643,464,2.643,465,2.643,466,2.643,467,2.643,468,2.643,469,2.643,470,2.643,471,2.643,472,2.643]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":143,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{},"coverage.html":{}}}],["0.1.0",{"_index":407,"title":{},"body":{"dependencies.html":{}}}],["0.12.7",{"_index":412,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":383,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":189,"title":{},"body":{"classes/LineRenderer.html":{}}}],["1.5.2",{"_index":411,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":381,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":318,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":391,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":313,"title":{},"body":{"coverage.html":{}}}],["13.0.3",{"_index":413,"title":{},"body":{"dependencies.html":{}}}],["15/16",{"_index":361,"title":{},"body":{"coverage.html":{}}}],["18/25",{"_index":339,"title":{},"body":{"coverage.html":{}}}],["18/26",{"_index":358,"title":{},"body":{"coverage.html":{}}}],["18/31",{"_index":330,"title":{},"body":{"coverage.html":{}}}],["19/23",{"_index":335,"title":{},"body":{"coverage.html":{}}}],["19/37",{"_index":372,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":447,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":415,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":314,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":316,"title":{},"body":{"coverage.html":{}}}],["20/23",{"_index":327,"title":{},"body":{"coverage.html":{}}}],["22/23",{"_index":349,"title":{},"body":{"coverage.html":{}}}],["24/24",{"_index":389,"title":{},"body":{"coverage.html":{}}}],["28",{"_index":446,"title":{},"body":{"overview.html":{}}}],["3/3",{"_index":320,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":390,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":319,"title":{},"body":{"coverage.html":{}}}],["5.0.0",{"_index":405,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":317,"title":{},"body":{"coverage.html":{}}}],["51",{"_index":371,"title":{},"body":{"coverage.html":{}}}],["58",{"_index":329,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":315,"title":{},"body":{"coverage.html":{}}}],["69",{"_index":357,"title":{},"body":{"coverage.html":{}}}],["72",{"_index":338,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":127,"title":{},"body":{"classes/Exporter.html":{},"miscellaneous/variables.html":{}}}],["8.13.10",{"_index":403,"title":{},"body":{"dependencies.html":{}}}],["82",{"_index":334,"title":{},"body":{"coverage.html":{}}}],["86",{"_index":326,"title":{},"body":{"coverage.html":{}}}],["9.0.0",{"_index":409,"title":{},"body":{"dependencies.html":{}}}],["93",{"_index":360,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":348,"title":{},"body":{"coverage.html":{}}}],["_",{"_index":308,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{}}}],["_connectiondescription",{"_index":156,"title":{},"body":{"classes/LineRenderer.html":{}}}],["_lhshead",{"_index":157,"title":{},"body":{"classes/LineRenderer.html":{}}}],["_linelength",{"_index":158,"title":{},"body":{"classes/LineRenderer.html":{}}}],["_linestyle",{"_index":159,"title":{},"body":{"classes/LineRenderer.html":{}}}],["_linewidth",{"_index":160,"title":{},"body":{"classes/LineRenderer.html":{}}}],["_rhshead",{"_index":161,"title":{},"body":{"classes/LineRenderer.html":{}}}],["accessors",{"_index":171,"title":{},"body":{"classes/LineRenderer.html":{}}}],["alt",{"_index":293,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["analyzed",{"_index":434,"title":{},"body":{"miscellaneous/functions.html":{}}}],["analyzedclass",{"_index":436,"title":{},"body":{"miscellaneous/functions.html":{}}}],["array",{"_index":56,"title":{},"body":{"classes/Convertor.html":{}}}],["arror",{"_index":431,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["arrow",{"_index":227,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["ast",{"_index":443,"title":{},"body":{"index.html":{}}}],["asymetric_right",{"_index":288,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["asymmetric",{"_index":287,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["based",{"_index":433,"title":{},"body":{"miscellaneous/functions.html":{}}}],["baseexitdeclarationgraphblock",{"_index":325,"title":{},"body":{"coverage.html":{}}}],["basefordeclarationgraphblock",{"_index":328,"title":{},"body":{"coverage.html":{}}}],["between",{"_index":153,"title":{},"body":{"classes/LineRenderer.html":{}}}],["binaryexpressiondeclarationgraphblock",{"_index":333,"title":{},"body":{"coverage.html":{}}}],["block",{"_index":58,"title":{},"body":{"classes/Convertor.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{}}}],["block.ts",{"_index":324,"title":{},"body":{"coverage.html":{}}}],["blockdeclarationgraphblock",{"_index":337,"title":{},"body":{"coverage.html":{}}}],["blockidgenerator",{"_index":1,"title":{"interfaces/BlockIdGenerator.html":{}},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{}}}],["blocks",{"_index":73,"title":{},"body":{"classes/Convertor.html":{},"interfaces/GraphResult.html":{}}}],["blocks/base",{"_index":321,"title":{},"body":{"coverage.html":{}}}],["blocks/binary",{"_index":331,"title":{},"body":{"coverage.html":{}}}],["blocks/block",{"_index":336,"title":{},"body":{"coverage.html":{}}}],["blocks/empty.graph",{"_index":340,"title":{},"body":{"coverage.html":{}}}],["blocks/for",{"_index":342,"title":{},"body":{"coverage.html":{}}}],["blocks/graph",{"_index":347,"title":{},"body":{"coverage.html":{}}}],["blocks/if",{"_index":351,"title":{},"body":{"coverage.html":{}}}],["blocks/method",{"_index":353,"title":{},"body":{"coverage.html":{}}}],["blocks/named",{"_index":356,"title":{},"body":{"coverage.html":{}}}],["blocks/parallel",{"_index":359,"title":{},"body":{"coverage.html":{}}}],["blocks/renderer/line",{"_index":148,"title":{},"body":{"classes/LineRenderer.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["blocks/renderer/shape",{"_index":261,"title":{},"body":{"classes/ShapeRenderer.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["blocks/return",{"_index":362,"title":{},"body":{"coverage.html":{}}}],["blocks/text.graph",{"_index":364,"title":{},"body":{"coverage.html":{}}}],["blocks/throw",{"_index":366,"title":{},"body":{"coverage.html":{}}}],["blocks/try",{"_index":368,"title":{},"body":{"coverage.html":{}}}],["blocks/variable",{"_index":373,"title":{},"body":{"coverage.html":{}}}],["boolean",{"_index":258,"title":{},"body":{"classes/LineRenderer.html":{}}}],["call.graph",{"_index":354,"title":{},"body":{"coverage.html":{}}}],["calling",{"_index":301,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{}}}],["case",{"_index":251,"title":{},"body":{"classes/LineRenderer.html":{}}}],["catch",{"_index":369,"title":{},"body":{"coverage.html":{}}}],["chalk",{"_index":404,"title":{},"body":{"dependencies.html":{}}}],["circle",{"_index":286,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["class",{"_index":29,"title":{"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"classes/UuidBlockIdGenerator.html":{}},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["classblocks",{"_index":89,"title":{},"body":{"classes/Convertor.html":{}}}],["classdeclaration",{"_index":66,"title":{},"body":{"classes/Convertor.html":{},"miscellaneous/functions.html":{}}}],["classes",{"_index":31,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"classes/UuidBlockIdGenerator.html":{},"overview.html":{}}}],["clear",{"_index":406,"title":{},"body":{"dependencies.html":{}}}],["cli",{"_index":402,"title":{},"body":{"dependencies.html":{}}}],["codeparser",{"_index":40,"title":{},"body":{"classes/Convertor.html":{},"coverage.html":{}}}],["codeparser(idgenerator",{"_index":80,"title":{},"body":{"classes/Convertor.html":{}}}],["command_handler",{"_index":425,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["commander",{"_index":408,"title":{},"body":{"dependencies.html":{}}}],["commandhandler",{"_index":463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connection",{"_index":206,"title":{},"body":{"classes/LineRenderer.html":{}}}],["const",{"_index":81,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/LineRenderer.html":{}}}],["constructor",{"_index":43,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/LineRenderer.html":{}}}],["constructor(lhsid",{"_index":176,"title":{},"body":{"classes/LineRenderer.html":{}}}],["constructor(outputrootpath",{"_index":105,"title":{},"body":{"classes/Exporter.html":{}}}],["constructor(private",{"_index":78,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/LineRenderer.html":{}}}],["constructor(sourcefiles",{"_index":44,"title":{},"body":{"classes/Convertor.html":{}}}],["controller",{"_index":424,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["convert",{"_index":42,"title":{},"body":{"classes/Convertor.html":{}}}],["converting",{"_index":34,"title":{},"body":{"classes/Convertor.html":{}}}],["convertor",{"_index":30,"title":{"classes/Convertor.html":{}},"body":{"classes/Convertor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["convertor(project.getsourcefiles",{"_index":450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["convertor.convert",{"_index":453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["correct",{"_index":103,"title":{},"body":{"classes/Exporter.html":{}}}],["counter",{"_index":138,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{}}}],["coverage",{"_index":309,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creates",{"_index":48,"title":{},"body":{"classes/Convertor.html":{},"classes/LineRenderer.html":{}}}],["cross",{"_index":229,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["crypto",{"_index":304,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{}}}],["cwd",{"_index":393,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cylinder",{"_index":284,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["cylindrical",{"_index":283,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["declaration",{"_index":374,"title":{},"body":{"coverage.html":{}}}],["declaration.graph",{"_index":323,"title":{},"body":{"coverage.html":{}}}],["decorators",{"_index":438,"title":{},"body":{"miscellaneous/functions.html":{}}}],["decoratortype",{"_index":418,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["decoratortype.command_handler",{"_index":464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decoratortype.controller",{"_index":462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decoratortype.event_handler",{"_index":468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decoratortype.injectable",{"_index":461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decoratortype.query_handler",{"_index":466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decoratortypemap",{"_index":386,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["default",{"_index":141,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":19,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"classes/UuidBlockIdGenerator.html":{},"miscellaneous/functions.html":{}}}],["dependencies",{"_index":399,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["describing",{"_index":12,"title":{},"body":{"interfaces/BlockIdGenerator.html":{}}}],["description",{"_index":11,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"classes/UuidBlockIdGenerator.html":{},"miscellaneous/functions.html":{}}}],["documentation",{"_index":310,"title":{},"body":{"coverage.html":{}}}],["dot",{"_index":163,"title":{},"body":{"classes/LineRenderer.html":{}}}],["dotted",{"_index":231,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["each",{"_index":63,"title":{},"body":{"classes/Convertor.html":{}}}],["edges",{"_index":276,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["emptygraphblock",{"_index":341,"title":{},"body":{"coverage.html":{}}}],["encoding",{"_index":125,"title":{},"body":{"classes/Exporter.html":{},"miscellaneous/variables.html":{}}}],["enum",{"_index":225,"title":{},"body":{"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{}}}],["enumerations",{"_index":417,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["event_handler",{"_index":427,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["eventhandler",{"_index":467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exit",{"_index":322,"title":{},"body":{"coverage.html":{}}}],["export",{"_index":26,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["export(graphresults",{"_index":111,"title":{},"body":{"classes/Exporter.html":{}}}],["exporter",{"_index":99,"title":{"classes/Exporter.html":{}},"body":{"classes/Exporter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["exporter(options['output",{"_index":452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exporting",{"_index":101,"title":{},"body":{"classes/Exporter.html":{}}}],["exports",{"_index":113,"title":{},"body":{"classes/Exporter.html":{}}}],["expression",{"_index":332,"title":{},"body":{"coverage.html":{}}}],["facade",{"_index":428,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["figlet",{"_index":410,"title":{},"body":{"dependencies.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{}}}],["file.ts",{"_index":379,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["filecontent",{"_index":122,"title":{},"body":{"classes/Exporter.html":{}}}],["files",{"_index":35,"title":{},"body":{"classes/Convertor.html":{}}}],["filetype",{"_index":420,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["filetype.controller",{"_index":469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filetype.facade",{"_index":470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filetype.handler",{"_index":472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filetype.service",{"_index":471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filetypemap",{"_index":387,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["fordeclarationgraphblock",{"_index":343,"title":{},"body":{"coverage.html":{}}}],["forindeclarationgraphblock",{"_index":344,"title":{},"body":{"coverage.html":{}}}],["form",{"_index":285,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["forofdeclarationgraphblock",{"_index":345,"title":{},"body":{"coverage.html":{}}}],["forxdeclarationgraphblock",{"_index":346,"title":{},"body":{"coverage.html":{}}}],["fs",{"_index":117,"title":{},"body":{"classes/Exporter.html":{}}}],["function",{"_index":303,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{},"coverage.html":{}}}],["functionblocks",{"_index":87,"title":{},"body":{"classes/Convertor.html":{}}}],["functiondeclaration",{"_index":67,"title":{},"body":{"classes/Convertor.html":{}}}],["functions",{"_index":84,"title":{"miscellaneous/functions.html":{}},"body":{"classes/Convertor.html":{},"miscellaneous/functions.html":{}}}],["g",{"_index":307,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{}}}],["generate",{"_index":18,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["generated",{"_index":102,"title":{},"body":{"classes/Exporter.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{},"miscellaneous/functions.html":{}}}],["generates",{"_index":21,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{}}}],["generator",{"_index":15,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["generator.ts",{"_index":10,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{}}}],["generator.ts:10",{"_index":20,"title":{},"body":{"interfaces/BlockIdGenerator.html":{}}}],["generator.ts:13",{"_index":144,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["generator.ts:15",{"_index":145,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{}}}],["generator/block",{"_index":9,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"coverage.html":{}}}],["generator/incremental",{"_index":133,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{},"coverage.html":{}}}],["generator/uuid",{"_index":300,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{},"coverage.html":{}}}],["getisdotted",{"_index":223,"title":{},"body":{"classes/LineRenderer.html":{}}}],["getlhshead",{"_index":219,"title":{},"body":{"classes/LineRenderer.html":{}}}],["getlinepiece",{"_index":217,"title":{},"body":{"classes/LineRenderer.html":{}}}],["getrhshead",{"_index":221,"title":{},"body":{"classes/LineRenderer.html":{}}}],["getting",{"_index":441,"title":{"index.html":{}},"body":{}}],["graph",{"_index":36,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"miscellaneous/functions.html":{}}}],["graph.render(0",{"_index":123,"title":{},"body":{"classes/Exporter.html":{}}}],["graphblock",{"_index":14,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"interfaces/GraphResult.html":{},"coverage.html":{}}}],["graphparentgraphblock",{"_index":70,"title":{},"body":{"classes/Convertor.html":{},"coverage.html":{}}}],["graphparentgraphblock(this.idgenerator.generate",{"_index":97,"title":{},"body":{"classes/Convertor.html":{}}}],["graphresult",{"_index":64,"title":{"interfaces/GraphResult.html":{}},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"coverage.html":{}}}],["graphresults",{"_index":114,"title":{},"body":{"classes/Exporter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["graphs",{"_index":82,"title":{},"body":{"classes/Convertor.html":{}}}],["graphs.push",{"_index":96,"title":{},"body":{"classes/Convertor.html":{}}}],["handler",{"_index":430,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["head",{"_index":187,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["hexagon",{"_index":290,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["https://mermaid",{"_index":265,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["id",{"_index":8,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{}}}],["identifier",{"_index":311,"title":{},"body":{"coverage.html":{}}}],["idgenerator",{"_index":46,"title":{},"body":{"classes/Convertor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ids",{"_index":59,"title":{},"body":{"classes/Convertor.html":{},"classes/IncrementalBlockIdGenerator.html":{}}}],["ifelsedeclarationgraphblock",{"_index":352,"title":{},"body":{"coverage.html":{}}}],["implementation",{"_index":134,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["implements",{"_index":139,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["import",{"_index":65,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["includefile",{"_index":380,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["includefile(analyzedclass",{"_index":432,"title":{},"body":{"miscellaneous/functions.html":{}}}],["incrementalblockidgenerator",{"_index":132,"title":{"classes/IncrementalBlockIdGenerator.html":{}},"body":{"classes/IncrementalBlockIdGenerator.html":{},"coverage.html":{}}}],["incrementation",{"_index":136,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"classes/UuidBlockIdGenerator.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["initialize",{"_index":107,"title":{},"body":{"classes/Exporter.html":{}}}],["injectable",{"_index":423,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["instance",{"_index":50,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/LineRenderer.html":{}}}],["interface",{"_index":0,"title":{"interfaces/BlockIdGenerator.html":{},"interfaces/GraphResult.html":{}},"body":{"interfaces/BlockIdGenerator.html":{},"interfaces/GraphResult.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"interfaces/GraphResult.html":{},"overview.html":{}}}],["isdotted",{"_index":175,"title":{},"body":{"classes/LineRenderer.html":{}}}],["iterates",{"_index":61,"title":{},"body":{"classes/Convertor.html":{}}}],["js.github.io/mermaid/#/flowchart?id=a",{"_index":274,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["js.github.io/mermaid/#/flowchart?id=node",{"_index":266,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["js.github.io/mermaid/#/flowchart?id=parallelogram",{"_index":291,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["js.github.io/mermaid/#/flowchart?id=trapezoid",{"_index":295,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["js/mermaid",{"_index":401,"title":{},"body":{"dependencies.html":{}}}],["json.parse",{"_index":457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["left",{"_index":180,"title":{},"body":{"classes/LineRenderer.html":{}}}],["length",{"_index":190,"title":{},"body":{"classes/LineRenderer.html":{}}}],["lhshead",{"_index":173,"title":{},"body":{"classes/LineRenderer.html":{}}}],["lhsid",{"_index":179,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line",{"_index":152,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["line_head",{"_index":184,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["line_head.arrow",{"_index":252,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line_head.cross",{"_index":253,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line_head.none",{"_index":185,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line_head.point",{"_index":255,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line_style",{"_index":191,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["line_style.dotted",{"_index":259,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line_style.normal",{"_index":192,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line_width",{"_index":195,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["line_width.normal",{"_index":196,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line_width.thick",{"_index":248,"title":{},"body":{"classes/LineRenderer.html":{}}}],["linear",{"_index":135,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{}}}],["linepiece",{"_index":172,"title":{},"body":{"classes/LineRenderer.html":{}}}],["linerenderer",{"_index":147,"title":{"classes/LineRenderer.html":{}},"body":{"classes/LineRenderer.html":{},"coverage.html":{}}}],["link",{"_index":76,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["list.graph",{"_index":375,"title":{},"body":{"coverage.html":{}}}],["matching",{"_index":28,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["mermaid",{"_index":400,"title":{},"body":{"dependencies.html":{}}}],["mermaid.js",{"_index":264,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["method",{"_index":13,"title":{},"body":{"interfaces/BlockIdGenerator.html":{}}}],["methodcallgraphblock",{"_index":355,"title":{},"body":{"coverage.html":{}}}],["methods",{"_index":17,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["miscellaneous",{"_index":416,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mmd",{"_index":121,"title":{},"body":{"classes/Exporter.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["mmd/src/app/block",{"_index":7,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{}}}],["mmd/src/app/convertor.ts",{"_index":32,"title":{},"body":{"classes/Convertor.html":{},"coverage.html":{}}}],["mmd/src/app/convertor.ts:21",{"_index":47,"title":{},"body":{"classes/Convertor.html":{}}}],["mmd/src/app/convertor.ts:36",{"_index":60,"title":{},"body":{"classes/Convertor.html":{}}}],["mmd/src/app/exporter.ts",{"_index":100,"title":{},"body":{"classes/Exporter.html":{},"coverage.html":{}}}],["mmd/src/app/exporter.ts:10",{"_index":106,"title":{},"body":{"classes/Exporter.html":{}}}],["mmd/src/app/exporter.ts:24",{"_index":112,"title":{},"body":{"classes/Exporter.html":{}}}],["mmd/src/app/graph",{"_index":128,"title":{},"body":{"interfaces/GraphResult.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mmd/src/index.ts",{"_index":392,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mmdpath",{"_index":118,"title":{},"body":{"classes/Exporter.html":{}}}],["modules",{"_index":444,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["morph",{"_index":69,"title":{},"body":{"classes/Convertor.html":{},"interfaces/GraphResult.html":{},"dependencies.html":{}}}],["name",{"_index":52,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"miscellaneous/functions.html":{}}}],["namedblockdeclarationgraphblock",{"_index":71,"title":{},"body":{"classes/Convertor.html":{},"coverage.html":{}}}],["new",{"_index":49,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/LineRenderer.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["node",{"_index":181,"title":{},"body":{"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{}}}],["nodes",{"_index":155,"title":{},"body":{"classes/LineRenderer.html":{}}}],["none",{"_index":226,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["normal",{"_index":230,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["number",{"_index":140,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{}}}],["o",{"_index":256,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["one",{"_index":131,"title":{},"body":{"interfaces/GraphResult.html":{}}}],["optional",{"_index":54,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":202,"title":{},"body":{"classes/LineRenderer.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["output",{"_index":104,"title":{},"body":{"classes/Exporter.html":{}}}],["outputrootpath",{"_index":108,"title":{},"body":{"classes/Exporter.html":{}}}],["overview",{"_index":445,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":305,"title":{"dependencies.html":{}},"body":{"classes/UuidBlockIdGenerator.html":{}}}],["package.json",{"_index":459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../include",{"_index":419,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["packages/.../index.ts",{"_index":449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../line",{"_index":421,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["packages/.../shape",{"_index":422,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["packages/ast",{"_index":6,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["parallelblock",{"_index":94,"title":{},"body":{"classes/Convertor.html":{}}}],["parallelblockdeclarationgraphblock",{"_index":72,"title":{},"body":{"classes/Convertor.html":{},"coverage.html":{}}}],["parallelblockdeclarationgraphblock(this.idgenerator.generate",{"_index":95,"title":{},"body":{"classes/Convertor.html":{}}}],["paralleogram",{"_index":292,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["paralleogram_alt",{"_index":294,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["param",{"_index":77,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{}}}],["parameters",{"_index":51,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"miscellaneous/functions.html":{}}}],["parent.graph",{"_index":350,"title":{},"body":{"coverage.html":{}}}],["parentclassesblock",{"_index":93,"title":{},"body":{"classes/Convertor.html":{}}}],["parentfunctionsblock",{"_index":91,"title":{},"body":{"classes/Convertor.html":{}}}],["parser",{"_index":74,"title":{},"body":{"classes/Convertor.html":{}}}],["parser/include",{"_index":378,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["parser/parser.ts",{"_index":388,"title":{},"body":{"coverage.html":{}}}],["path",{"_index":109,"title":{},"body":{"classes/Exporter.html":{},"dependencies.html":{}}}],["path.resolve(sourcefile.getdirectorypath",{"_index":119,"title":{},"body":{"classes/Exporter.html":{}}}],["point",{"_index":228,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["private",{"_index":38,"title":{},"body":{"classes/Convertor.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{}}}],["process",{"_index":57,"title":{},"body":{"classes/Convertor.html":{}}}],["process.cwd",{"_index":451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["program.opts",{"_index":454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":394,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["project(tsmorphoptions",{"_index":455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projectoptions",{"_index":456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properties",{"_index":37,"title":{},"body":{"classes/Convertor.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{}}}],["protected",{"_index":162,"title":{},"body":{"classes/LineRenderer.html":{}}}],["public",{"_index":41,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{}}}],["query_handler",{"_index":426,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["queryhandler",{"_index":465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["randomuuid",{"_index":302,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{}}}],["randomuuid().replace",{"_index":306,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{}}}],["readfilesync(path.resolve(__dirname",{"_index":458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["readonly",{"_index":39,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{}}}],["record",{"_index":460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["render",{"_index":164,"title":{},"body":{"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{}}}],["render(text",{"_index":271,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["renderer",{"_index":151,"title":{},"body":{"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{}}}],["renderer.ts",{"_index":149,"title":{},"body":{"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["renderer.ts:100",{"_index":216,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:110",{"_index":212,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:120",{"_index":214,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:130",{"_index":210,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:138",{"_index":201,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:167",{"_index":218,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:173",{"_index":220,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:186",{"_index":222,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:199",{"_index":200,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:203",{"_index":224,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:45",{"_index":183,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:49",{"_index":186,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:53",{"_index":199,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:57",{"_index":193,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:61",{"_index":197,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:63",{"_index":270,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["renderer.ts:65",{"_index":178,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:71",{"_index":273,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["renderer.ts:80",{"_index":204,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:90",{"_index":208,"title":{},"body":{"classes/LineRenderer.html":{}}}],["repeat",{"_index":247,"title":{},"body":{"classes/LineRenderer.html":{}}}],["repeat(repeat",{"_index":249,"title":{},"body":{"classes/LineRenderer.html":{}}}],["repeat(this._linelength",{"_index":257,"title":{},"body":{"classes/LineRenderer.html":{}}}],["representing",{"_index":130,"title":{},"body":{"interfaces/GraphResult.html":{}}}],["represents",{"_index":150,"title":{},"body":{"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{}}}],["resolvedecoratortype",{"_index":382,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["resolvedecoratortype(decorators",{"_index":437,"title":{},"body":{"miscellaneous/functions.html":{}}}],["resolvefiletype",{"_index":384,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["resolvefiletype(analyzedclass",{"_index":440,"title":{},"body":{"miscellaneous/functions.html":{}}}],["responsible",{"_index":33,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{}}}],["result",{"_index":75,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"classes/LineRenderer.html":{}}}],["result.ts",{"_index":129,"title":{},"body":{"interfaces/GraphResult.html":{},"coverage.html":{}}}],["results",{"_index":27,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":98,"title":{},"body":{"classes/Convertor.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["returndeclarationgraphblock",{"_index":363,"title":{},"body":{"coverage.html":{}}}],["returns",{"_index":22,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"classes/UuidBlockIdGenerator.html":{},"miscellaneous/functions.html":{}}}],["rhombus",{"_index":289,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["rhshead",{"_index":174,"title":{},"body":{"classes/LineRenderer.html":{}}}],["rhsid",{"_index":177,"title":{},"body":{"classes/LineRenderer.html":{}}}],["right",{"_index":182,"title":{},"body":{"classes/LineRenderer.html":{}}}],["root",{"_index":110,"title":{},"body":{"classes/Exporter.html":{}}}],["round",{"_index":275,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["round_edges",{"_index":277,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["service",{"_index":429,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["set",{"_index":205,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setconnectiondescription",{"_index":165,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setconnectiondescription(value",{"_index":203,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlhshead",{"_index":166,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlhshead(value",{"_index":207,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlinelength",{"_index":167,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlinelength(value",{"_index":209,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlinestyle",{"_index":168,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlinestyle(value",{"_index":211,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlinewidth",{"_index":169,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlinewidth(value",{"_index":213,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setrhshead",{"_index":170,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setrhshead(value",{"_index":215,"title":{},"body":{"classes/LineRenderer.html":{}}}],["shape",{"_index":272,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["shape.valueof().replace(shaperenderer.text_placeholder",{"_index":298,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["shaped",{"_index":280,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["shaperenderer",{"_index":260,"title":{"classes/ShapeRenderer.html":{}},"body":{"classes/ShapeRenderer.html":{},"coverage.html":{}}}],["shapes",{"_index":263,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["shared",{"_index":137,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{}}}],["sharp_edges",{"_index":278,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["side",{"_index":188,"title":{},"body":{"classes/LineRenderer.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["sourcefile",{"_index":45,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{}}}],["sourcefile.getbasenamewithoutextension",{"_index":120,"title":{},"body":{"classes/Exporter.html":{}}}],["sourcefile.getclasses",{"_index":86,"title":{},"body":{"classes/Convertor.html":{}}}],["sourcefile.getfunctions",{"_index":85,"title":{},"body":{"classes/Convertor.html":{}}}],["sourcefiles",{"_index":55,"title":{},"body":{"classes/Convertor.html":{}}}],["stadium",{"_index":279,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["stadium_shaped",{"_index":281,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["started",{"_index":442,"title":{"index.html":{}},"body":{}}],["statements",{"_index":312,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":267,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["string",{"_index":24,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Exporter.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["style",{"_index":194,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["subroutine",{"_index":282,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["supported",{"_index":262,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["switch",{"_index":250,"title":{},"body":{"classes/LineRenderer.html":{}}}],["table",{"_index":398,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":397,"title":{},"body":{"coverage.html":{}}}],["text",{"_index":269,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["text_placeholder",{"_index":268,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["textgraphblock",{"_index":365,"title":{},"body":{"coverage.html":{}}}],["thick",{"_index":232,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["this._connectiondescription",{"_index":233,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this._lhshead",{"_index":234,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this._linelength",{"_index":238,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this._linestyle",{"_index":236,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this._linewidth",{"_index":237,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this._rhshead",{"_index":235,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.codeparser",{"_index":79,"title":{},"body":{"classes/Convertor.html":{}}}],["this.codeparser.processclasses(classes",{"_index":90,"title":{},"body":{"classes/Convertor.html":{}}}],["this.codeparser.processfunctions(functions",{"_index":88,"title":{},"body":{"classes/Convertor.html":{}}}],["this.counter",{"_index":146,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{}}}],["this.dot",{"_index":243,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.idgenerator.generate",{"_index":92,"title":{},"body":{"classes/Convertor.html":{}}}],["this.isdotted",{"_index":242,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.lhshead",{"_index":240,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.lhsid",{"_index":239,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.linepiece",{"_index":241,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.rhshead",{"_index":245,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.rhsid",{"_index":246,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.sourcefiles",{"_index":83,"title":{},"body":{"classes/Convertor.html":{}}}],["through",{"_index":62,"title":{},"body":{"classes/Convertor.html":{}}}],["throwdeclarationgraphblock",{"_index":367,"title":{},"body":{"coverage.html":{}}}],["tmplinelength",{"_index":244,"title":{},"body":{"classes/LineRenderer.html":{}}}],["trapezoid",{"_index":296,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["trapezoid_alt",{"_index":297,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["trycatchdeclarationgraphblock",{"_index":370,"title":{},"body":{"coverage.html":{}}}],["ts",{"_index":68,"title":{},"body":{"classes/Convertor.html":{},"interfaces/GraphResult.html":{},"dependencies.html":{}}}],["tslib",{"_index":414,"title":{},"body":{"dependencies.html":{}}}],["tsmorphoptions",{"_index":395,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["two",{"_index":154,"title":{},"body":{"classes/LineRenderer.html":{}}}],["type",{"_index":53,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":439,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unique",{"_index":25,"title":{},"body":{"interfaces/BlockIdGenerator.html":{}}}],["utf",{"_index":126,"title":{},"body":{"classes/Exporter.html":{},"miscellaneous/variables.html":{}}}],["uuidblockidgenerator",{"_index":299,"title":{"classes/UuidBlockIdGenerator.html":{}},"body":{"classes/UuidBlockIdGenerator.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["value",{"_index":142,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":385,"title":{},"body":{"coverage.html":{}}}],["variabledeclarationgraphblock",{"_index":377,"title":{},"body":{"coverage.html":{}}}],["variabledeclarationlistgraphblock",{"_index":376,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":448,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":396,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":115,"title":{},"body":{"classes/Exporter.html":{}}}],["whether",{"_index":435,"title":{},"body":{"miscellaneous/functions.html":{}}}],["width",{"_index":198,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["writefilesync",{"_index":116,"title":{},"body":{"classes/Exporter.html":{}}}],["writefilesync(mmdpath",{"_index":124,"title":{},"body":{"classes/Exporter.html":{}}}],["x",{"_index":254,"title":{},"body":{"classes/LineRenderer.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/BlockIdGenerator.html":{"url":"interfaces/BlockIdGenerator.html","title":"interface - BlockIdGenerator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BlockIdGenerator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/block-id-generator/block-id-generator.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface describing method for GraphBlock ID generator\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        generate\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generate\n                        \n                    \n                \n            \n            \n                \ngenerate()\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/block-id-generator/block-id-generator.ts:10\n                \n            \n\n\n            \n                \n                    Generates ID.\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Unique ID.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface BlockIdGenerator {\n  /**\n   * Generates ID.\n   *\n   * @returns {string} Unique ID.\n   */\n  generate(): string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Convertor.html":{"url":"classes/Convertor.html","title":"class - Convertor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Convertor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/convertor.ts\n        \n\n\n            \n                Description\n            \n            \n                Class responsible for converting defined source files to graph.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                codeParser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                convert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sourceFiles: SourceFile[], idGenerator: BlockIdGenerator)\n                    \n                \n                        \n                            \n                                Defined in packages/ast-to-mmd/src/app/convertor.ts:21\n                            \n                        \n\n                \n                    \n                            Creates new instance of Convertor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sourceFiles\n                                                  \n                                                        \n                                                                    SourceFile[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                []SourceFile Array of source files to process.\n\n                                                        \n                                                \n                                                \n                                                        idGenerator\n                                                  \n                                                        \n                                                                        BlockIdGenerator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                BlockIdGenerator Generator of block IDs.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        codeParser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CodeParser\n\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/convertor.ts:21\n                        \n                    \n\n            \n                \n                    Instance of CodeParser\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        convert\n                        \n                    \n                \n            \n            \n                \n                    \n                    convert()\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/convertor.ts:36\n                \n            \n\n\n            \n                \n                    Iterates through source files and generates graph for each file.\n\n\n                    \n                        Returns :         GraphResult[]\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ClassDeclaration, FunctionDeclaration, SourceFile } from 'ts-morph';\n\nimport { BlockIdGenerator } from './block-id-generator';\nimport {\n  GraphBlock,\n  GraphParentGraphBlock,\n  NamedBlockDeclarationGraphBlock,\n  ParallelBlockDeclarationGraphBlock,\n} from './graph-blocks';\nimport { CodeParser } from './graph-parser';\nimport { GraphResult } from './graph-result';\n\n/**\n * Class responsible for converting defined source files to graph.\n */\nexport class Convertor {\n\n  /**\n   * Instance of {@link CodeParser}\n   */\n  private readonly codeParser: CodeParser;\n\n  /**\n   * Creates new instance of {@link Convertor}.\n   *\n   * @param sourceFiles {@link SourceFile[]} Array of source files to process.\n   * @param idGenerator {@link BlockIdGenerator} Generator of block IDs.\n   */\n  constructor(private readonly sourceFiles: SourceFile[], private readonly idGenerator: BlockIdGenerator) {\n    this.codeParser = new CodeParser(idGenerator);\n  }\n\n  /**\n   * Iterates through source files and generates graph for each file.\n   */\n  public convert(): GraphResult[] {\n    const graphs: GraphResult[] = [];\n    for (const sourceFile of this.sourceFiles) {\n      const functions: FunctionDeclaration[] = sourceFile.getFunctions();\n      const classes: ClassDeclaration[] = sourceFile.getClasses();\n\n      const functionBlocks: GraphBlock = this.codeParser.processFunctions(functions);\n      const classBlocks: GraphBlock = this.codeParser.processClasses(classes);\n\n      const parentFunctionsBlock: GraphBlock = new NamedBlockDeclarationGraphBlock(\n        this.idGenerator.generate(),\n        [functionBlocks],\n        'Functions'\n      );\n      const parentClassesBlock: GraphBlock = new NamedBlockDeclarationGraphBlock(\n        this.idGenerator.generate(),\n        [classBlocks],\n        'Classes'\n      );\n      const parallelBlock: GraphBlock = new ParallelBlockDeclarationGraphBlock(this.idGenerator.generate(), [\n        parentFunctionsBlock,\n        parentClassesBlock,\n      ]);\n\n      graphs.push({\n        sourceFile,\n        graph: new GraphParentGraphBlock(this.idGenerator.generate(), parallelBlock),\n      });\n    }\n\n    return graphs;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Exporter.html":{"url":"classes/Exporter.html","title":"class - Exporter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Exporter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/exporter.ts\n        \n\n\n            \n                Description\n            \n            \n                Class responsible for exporting generated graph to correct output.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                export\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(outputRootPath: string)\n                    \n                \n                        \n                            \n                                Defined in packages/ast-to-mmd/src/app/exporter.ts:10\n                            \n                        \n\n                \n                    \n                            Initialize new instance of Exporter.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        outputRootPath\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Path to root of output path.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        export\n                        \n                    \n                \n            \n            \n                \n                    \n                    export(graphResults: GraphResult[])\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/exporter.ts:24\n                \n            \n\n\n            \n                \n                    Exports graph results to defined output path.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    graphResults\n                                    \n                                                GraphResult[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        []GraphResult Graph results for export.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { writeFileSync } from 'fs';\nimport * as path from 'path';\n\nimport { GraphResult } from './graph-result';\n\n\n/**\n * Class responsible for exporting generated graph to correct output.\n */\nexport class Exporter {\n\n  /**\n   * Initialize new instance of {@link Exporter}.\n   *\n   * @param outputRootPath {string} Path to root of output path.\n   */\n  constructor(private readonly outputRootPath: string) {}\n\n  /**\n   * Exports graph results to defined output path.\n   *\n   * @param graphResults {@link GraphResult[]} Graph results for export.\n   */\n  public export(graphResults: GraphResult[]): void {\n\n    for (const {graph, sourceFile} of graphResults) {\n      const mmdPath = path.resolve(sourceFile.getDirectoryPath(), sourceFile.getBaseNameWithoutExtension()) + '.mmd';\n      const fileContent = graph.render(0);\n      writeFileSync(mmdPath, fileContent, { encoding: 'utf-8' });\n    }\n\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphResult.html":{"url":"interfaces/GraphResult.html","title":"interface - GraphResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GraphResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/graph-result.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing one Graph result\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            graph\n                                        \n                                \n                                \n                                        \n                                            sourceFile\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        graph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        graph:         GraphBlock\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GraphBlock\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceFile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sourceFile:     SourceFile\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SourceFile\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SourceFile } from 'ts-morph';\n\nimport { GraphBlock } from './graph-blocks';\n\n/**\n * Interface representing one Graph result\n */\nexport interface GraphResult {\n  sourceFile: SourceFile;\n  graph: GraphBlock;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IncrementalBlockIdGenerator.html":{"url":"classes/IncrementalBlockIdGenerator.html","title":"class - IncrementalBlockIdGenerator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IncrementalBlockIdGenerator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/block-id-generator/incremental-block-id-generator.ts\n        \n\n\n            \n                Description\n            \n            \n                Implementation of BlockIdGenerator\nThe ID is generated by linear incrementation of shared counter.\n\n            \n\n\n            \n                Implements\n            \n            \n                            BlockIdGenerator\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                counter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        counter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/block-id-generator/incremental-block-id-generator.ts:13\n                        \n                    \n\n            \n                \n                    Counter of generated IDs\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generate\n                        \n                    \n                \n            \n            \n                \ngenerate()\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/block-id-generator/incremental-block-id-generator.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BlockIdGenerator } from './block-id-generator';\n\n/**\n * Implementation of {@link BlockIdGenerator}\n *\n *\n * The ID is generated by linear incrementation of shared counter.\n */\nexport class IncrementalBlockIdGenerator implements BlockIdGenerator {\n  /**\n   * Counter of generated IDs\n   */\n  private counter = 0;\n\n  generate(): string {\n    return `${this.counter++}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LineRenderer.html":{"url":"classes/LineRenderer.html","title":"class - LineRenderer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LineRenderer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts\n        \n\n\n            \n                Description\n            \n            \n                Class represents renderer of line between two nodes.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _connectionDescription\n                            \n                            \n                                    Private\n                                _lhsHead\n                            \n                            \n                                    Private\n                                _lineLength\n                            \n                            \n                                    Private\n                                _lineStyle\n                            \n                            \n                                    Private\n                                _lineWidth\n                            \n                            \n                                    Private\n                                _rhsHead\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                dot\n                            \n                            \n                                render\n                            \n                            \n                                setConnectionDescription\n                            \n                            \n                                setLhsHead\n                            \n                            \n                                setLineLength\n                            \n                            \n                                setLineStyle\n                            \n                            \n                                setLineWidth\n                            \n                            \n                                setRhsHead\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    linePiece\n                                \n                                \n                                    lhsHead\n                                \n                                \n                                    rhsHead\n                                \n                                \n                                    isDotted\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(lhsId: string, rhsId: string)\n                    \n                \n                        \n                            \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:65\n                            \n                        \n\n                \n                    \n                            Creates new instance of the LineRenderer.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        lhsId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ID of left node.\n\n                                                        \n                                                \n                                                \n                                                        rhsId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ID of right node.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _connectionDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:45\n                        \n                    \n\n            \n                \n                    Optional description on the line.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _lhsHead\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LINE_HEAD\n\n                    \n                \n                \n                    \n                        Default value : LINE_HEAD.NONE\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:49\n                        \n                    \n\n            \n                \n                    Type of head on left side of the line.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _lineLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:65\n                        \n                    \n\n            \n                \n                    Length of the line.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _lineStyle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LINE_STYLE\n\n                    \n                \n                \n                    \n                        Default value : LINE_STYLE.NORMAL\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:57\n                        \n                    \n\n            \n                \n                    LINE_STYLE Style of the line.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _lineWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LINE_WIDTH\n\n                    \n                \n                \n                    \n                        Default value : LINE_WIDTH.NORMAL\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:61\n                        \n                    \n\n            \n                \n                    LINE_WIDTH Width of the line.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _rhsHead\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LINE_HEAD\n\n                    \n                \n                \n                    \n                        Default value : LINE_HEAD.NONE\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:53\n                        \n                    \n\n            \n                \n                    Type of head on right side of the line.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        dot\n                        \n                    \n                \n            \n            \n                \n                    \n                    dot()\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:199\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        render\n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:138\n                \n            \n\n\n            \n                \n                    Render line with defined options.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setConnectionDescription\n                        \n                    \n                \n            \n            \n                \nsetConnectionDescription(value: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:80\n                \n            \n\n\n            \n                \n                    Set connection description on the line.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Connection description\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LineRenderer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLhsHead\n                        \n                    \n                \n            \n            \n                \nsetLhsHead(value: LINE_HEAD)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:90\n                \n            \n\n\n            \n                \n                    Set type of head on left side the line.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                LINE_HEAD\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        LINE_HEAD Type of head.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LineRenderer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLineLength\n                        \n                    \n                \n            \n            \n                \nsetLineLength(value: number)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:130\n                \n            \n\n\n            \n                \n                    Set length of the line.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Length of the line.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LineRenderer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLineStyle\n                        \n                    \n                \n            \n            \n                \nsetLineStyle(value: LINE_STYLE)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:110\n                \n            \n\n\n            \n                \n                    Set style of the line.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                LINE_STYLE\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        LINE_STYLE Style of the line.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LineRenderer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLineWidth\n                        \n                    \n                \n            \n            \n                \nsetLineWidth(value: LINE_WIDTH)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:120\n                \n            \n\n\n            \n                \n                    Set width of the line.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                LINE_WIDTH\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        LINE_WIDTH Width of the line.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LineRenderer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRhsHead\n                        \n                    \n                \n            \n            \n                \nsetRhsHead(value: LINE_HEAD)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:100\n                \n            \n\n\n            \n                \n                    Set type of head on right side the line.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                LINE_HEAD\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        LINE_HEAD Type of head.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LineRenderer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        linePiece\n                    \n                \n\n                \n                    \n                        getlinePiece()\n                    \n                \n                            \n                                \n                                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:167\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        lhsHead\n                    \n                \n\n                \n                    \n                        getlhsHead()\n                    \n                \n                            \n                                \n                                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:173\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        rhsHead\n                    \n                \n\n                \n                    \n                        getrhsHead()\n                    \n                \n                            \n                                \n                                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:186\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isDotted\n                    \n                \n\n                \n                    \n                        getisDotted()\n                    \n                \n                            \n                                \n                                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:203\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        export enum LINE_HEAD {\n  NONE,\n  ARROW,\n  POINT,\n  CROSS,\n}\n\n/**\n * Style of the line.\n *\n * - NORMAL: ---\n * - DOTTED: ...\n */\nexport enum LINE_STYLE {\n  NORMAL,\n  DOTTED,\n}\n\n/**\n * Width of the line.\n *\n * - NORMAL:  ---\n * - THICK: ===\n */\nexport enum LINE_WIDTH {\n  NORMAL,\n  THICK,\n}\n\n/**\n * Class represents renderer of line between two nodes.\n */\nexport class LineRenderer {\n  /**\n   * Optional description on the line.\n   */\n  private _connectionDescription?: string;\n  /**\n   * Type of head on left side of the line.\n   */\n  private _lhsHead: LINE_HEAD = LINE_HEAD.NONE;\n  /**\n   * Type of head on right side of the line.\n   */\n  private _rhsHead: LINE_HEAD = LINE_HEAD.NONE;\n  /**\n   * {@link LINE_STYLE} Style of the line.\n   */\n  private _lineStyle: LINE_STYLE = LINE_STYLE.NORMAL;\n  /**\n   * {@link LINE_WIDTH} Width of the line.\n   */\n  private _lineWidth: LINE_WIDTH = LINE_WIDTH.NORMAL;\n  /**\n   * Length of the line.\n   */\n  private _lineLength = 1;\n\n  /**\n   * Creates new instance of the {@link LineRenderer}.\n   *\n   * @param lhsId {string} ID of left node.\n   * @param rhsId {string} ID of right node.\n   */\n  constructor(private readonly lhsId: string, private readonly rhsId: string) {}\n\n  /**\n   * Set connection description on the line.\n   *\n   * @param value {string} Connection description\n   */\n  setConnectionDescription(value: string): LineRenderer {\n    this._connectionDescription = value;\n    return this;\n  }\n\n  /**\n   * Set type of head on left side the line.\n   *\n   * @param value {@link LINE_HEAD} Type of head.\n   */\n  setLhsHead(value: LINE_HEAD): LineRenderer {\n    this._lhsHead = value;\n    return this;\n  }\n\n  /**\n   * Set type of head on right side the line.\n   *\n   * @param value {@link LINE_HEAD} Type of head.\n   */\n  setRhsHead(value: LINE_HEAD): LineRenderer {\n    this._rhsHead = value;\n    return this;\n  }\n\n  /**\n   * Set style of the line.\n   *\n   * @param value {@link LINE_STYLE} Style of the line.\n   */\n  setLineStyle(value: LINE_STYLE): LineRenderer {\n    this._lineStyle = value;\n    return this;\n  }\n\n  /**\n   * Set width of the line.\n   *\n   * @param value {@link LINE_WIDTH} Width of the line.\n   */\n  setLineWidth(value: LINE_WIDTH): LineRenderer {\n    this._lineWidth = value;\n    return this;\n  }\n\n  /**\n   * Set length of the line.\n   *\n   * @param value {number} Length of the line.\n   */\n  setLineLength(value: number): LineRenderer {\n    this._lineLength = value;\n    return this;\n  }\n\n  /**\n   * Render line with defined options.\n   */\n  render(): string {\n    let result = `${this.lhsId} `;\n\n    result += this.lhsHead;\n    result += this.linePiece;\n    if (this.isDotted) result += this.dot();\n\n    if (this._connectionDescription) {\n      if (this.isDotted) {\n        result += ` ${this._connectionDescription} `;\n      } else {\n        result += `${this.linePiece} ${this._connectionDescription} ${this.linePiece}`;\n      }\n    } else {\n      const tmpLineLength = this._lineLength;\n      this._lineLength = 1;\n      result += this.linePiece;\n      this._lineLength = tmpLineLength;\n    }\n\n    if (this.isDotted) result += this.dot();\n    result += this.linePiece;\n    result += this.rhsHead;\n\n    result += ` ${this.rhsId}`;\n\n    return result;\n  }\n\n  protected get linePiece(): string {\n    let repeat = this._lineLength;\n    if (this.isDotted) repeat = 1;\n    return (this._lineWidth === LINE_WIDTH.THICK ? '=' : '-').repeat(repeat);\n  }\n\n  protected get lhsHead(): string {\n    switch (this._lhsHead) {\n      case LINE_HEAD.ARROW:\n        return '';\n      case LINE_HEAD.CROSS:\n        return 'x';\n      case LINE_HEAD.POINT:\n        return 'o';\n      default:\n        return '';\n    }\n  }\n\n  protected dot(): string {\n    return '.'.repeat(this._lineLength);\n  }\n\n  protected get isDotted(): boolean {\n    return this._lineStyle === LINE_STYLE.DOTTED;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShapeRenderer.html":{"url":"classes/ShapeRenderer.html","title":"class - ShapeRenderer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShapeRenderer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/graph-blocks/renderer/shape-renderer.ts\n        \n\n\n            \n                Description\n            \n            \n                Class represents renderer of supported shapes by Mermaid.js\nhttps://mermaid-js.github.io/mermaid/#/flowchart?id=node-shapes\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                TEXT_PLACEHOLDER\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        TEXT_PLACEHOLDER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '$TEXT$'\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/shape-renderer.ts:63\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        render\n                        \n                    \n                \n            \n            \n                \nrender(text: string, shape: Shape)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/shape-renderer.ts:71\n                \n            \n\n\n            \n                \n                    Render defined shape with text.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Text in the shape.\n\n                                    \n                                \n                                \n                                    shape\n                                    \n                                                Shape\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Shape Type of the shape.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export enum Shape {\n  DEFAULT = '$TEXT$',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-node-with-round-edges}\n   */\n  ROUND_EDGES = '($TEXT$)',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-node-with-text}\n   */\n  SHARP_EDGES = '[$TEXT$]',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-stadium-shaped-node}\n   */\n  STADIUM_SHAPED = '([$TEXT$])',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-node-in-a-subroutine-shape}\n   */\n  SUBROUTINE = '[[$TEXT$]]',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-node-in-a-cylindrical-shape}\n   */\n  CYLINDER = '[($TEXT$)]',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-node-in-the-form-of-a-circle}\n   */\n  CIRCLE = '(($TEXT$))',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-node-in-an-asymmetric-shape}\n   */\n  ASYMETRIC_RIGHT = '>$TEXT$]',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-node-rhombus}\n   */\n  RHOMBUS = '{$TEXT$}',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-hexagon-node}\n   */\n  HEXAGON = '{{$TEXT$}}',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=parallelogram}\n   */\n  PARALLEOGRAM = '[/$TEXT$/]',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=parallelogram-alt}\n   */\n  PARALLEOGRAM_ALT = '[\\\\$TEXT$\\\\]',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=trapezoid}\n   */\n  TRAPEZOID = '[/$TEXT$\\\\]',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=trapezoid-alt}\n   */\n  TRAPEZOID_ALT = '[\\\\$TEXT$/]',\n}\n\n/**\n * Class represents renderer of supported shapes by Mermaid.js\n *\n * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=node-shapes}\n */\nexport class ShapeRenderer {\n  private static readonly TEXT_PLACEHOLDER = '$TEXT$';\n\n  /**\n   * Render defined shape with text.\n   *\n   * @param text {string} Text in the shape.\n   * @param shape {@link Shape} Type of the shape.\n   */\n  render(text: string, shape: Shape): string {\n    return shape.valueOf().replace(ShapeRenderer.TEXT_PLACEHOLDER, `\"${text}\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UuidBlockIdGenerator.html":{"url":"classes/UuidBlockIdGenerator.html","title":"class - UuidBlockIdGenerator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UuidBlockIdGenerator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/block-id-generator/uuid-block-id-generator.ts\n        \n\n\n            \n                Description\n            \n            \n                Implementation of BlockIdGenerator\nThe ID is generated by calling randomUUID function from 'crypto'\npackage\n\n            \n\n\n            \n                Implements\n            \n            \n                            BlockIdGenerator\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generate\n                        \n                    \n                \n            \n            \n                \ngenerate()\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/block-id-generator/uuid-block-id-generator.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { randomUUID } from 'crypto';\n\nimport { BlockIdGenerator } from './block-id-generator';\n\n/**\n * Implementation of {@link BlockIdGenerator}\n *\n *\n * The ID is generated by calling {@link randomUUID} function from 'crypto'\n * package\n */\nexport class UuidBlockIdGenerator implements BlockIdGenerator {\n  generate(): string {\n    return randomUUID().replace(/-/g, '_');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                packages/ast-to-mmd/src/app/block-id-generator/block-id-generator.ts\n            \n            interface\n            BlockIdGenerator\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/block-id-generator/incremental-block-id-generator.ts\n            \n            class\n            IncrementalBlockIdGenerator\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/block-id-generator/uuid-block-id-generator.ts\n            \n            class\n            UuidBlockIdGenerator\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/convertor.ts\n            \n            class\n            Convertor\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/exporter.ts\n            \n            class\n            Exporter\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/base-exit-declaration.graph-block.ts\n            \n            class\n            BaseExitDeclarationGraphBlock\n            \n                86 %\n                (20/23)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/base-for-declaration.graph-block.ts\n            \n            class\n            BaseForDeclarationGraphBlock\n            \n                58 %\n                (18/31)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/binary-expression-declaration.graph-block.ts\n            \n            class\n            BinaryExpressionDeclarationGraphBlock\n            \n                82 %\n                (19/23)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/block-declaration.graph-block.ts\n            \n            class\n            BlockDeclarationGraphBlock\n            \n                72 %\n                (18/25)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/empty.graph-block.ts\n            \n            class\n            EmptyGraphBlock\n            \n                82 %\n                (19/23)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/for-declaration.graph-block.ts\n            \n            class\n            ForDeclarationGraphBlock\n            \n                58 %\n                (18/31)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/for-in-declaration.graph-block.ts\n            \n            class\n            ForInDeclarationGraphBlock\n            \n                58 %\n                (18/31)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/for-of-declaration.graph-block.ts\n            \n            class\n            ForOfDeclarationGraphBlock\n            \n                58 %\n                (18/31)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/for-x-declaration.graph-block.ts\n            \n            class\n            ForXDeclarationGraphBlock\n            \n                58 %\n                (18/31)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/graph-block.ts\n            \n            class\n            GraphBlock\n            \n                95 %\n                (22/23)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/graph-parent.graph-block.ts\n            \n            class\n            GraphParentGraphBlock\n            \n                72 %\n                (18/25)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/if-else-declaration.graph-block.ts\n            \n            class\n            IfElseDeclarationGraphBlock\n            \n                58 %\n                (18/31)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/method-call.graph-block.ts\n            \n            class\n            MethodCallGraphBlock\n            \n                82 %\n                (19/23)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/named-block-declaration.graph-block.ts\n            \n            class\n            NamedBlockDeclarationGraphBlock\n            \n                69 %\n                (18/26)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/parallel-block-declaration.graph-block.ts\n            \n            class\n            ParallelBlockDeclarationGraphBlock\n            \n                72 %\n                (18/25)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts\n            \n            class\n            LineRenderer\n            \n                93 %\n                (15/16)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/renderer/shape-renderer.ts\n            \n            class\n            ShapeRenderer\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/return-declaration.graph-block.ts\n            \n            class\n            ReturnDeclarationGraphBlock\n            \n                82 %\n                (19/23)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/text.graph-block.ts\n            \n            class\n            TextGraphBlock\n            \n                82 %\n                (19/23)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/throw-declaration.graph-block.ts\n            \n            class\n            ThrowDeclarationGraphBlock\n            \n                82 %\n                (19/23)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/try-catch-declaration.graph-block.ts\n            \n            class\n            TryCatchDeclarationGraphBlock\n            \n                51 %\n                (19/37)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/variable-declaration-list.graph-block.ts\n            \n            class\n            VariableDeclarationListGraphBlock\n            \n                82 %\n                (19/23)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/variable-declaration.graph-block.ts\n            \n            class\n            VariableDeclarationGraphBlock\n            \n                82 %\n                (19/23)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-parser/include-file.ts\n            \n            function\n            includeFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-parser/include-file.ts\n            \n            function\n            resolveDecoratorType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-parser/include-file.ts\n            \n            function\n            resolveFileType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-parser/include-file.ts\n            \n            variable\n            decoratorTypeMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-parser/include-file.ts\n            \n            variable\n            fileTypeMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-parser/parser.ts\n            \n            class\n            CodeParser\n            \n                100 %\n                (24/24)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-result.ts\n            \n            interface\n            GraphResult\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            convertor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            cwd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            exporter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            graphResults\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            idGenerator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            options\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            project\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            tsMorphOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            version\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @mermaid-js/mermaid-cli : ^8.13.10\n        \n            chalk : ^5.0.0\n        \n            clear : ^0.1.0\n        \n            commander : ^9.0.0\n        \n            figlet : ^1.5.2\n        \n            path : ^0.12.7\n        \n            ts-morph : ^13.0.3\n        \n            tslib : ^2.0.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DecoratorType   (packages/.../include-file.ts)\n                        \n                        \n                            FileType   (packages/.../include-file.ts)\n                        \n                        \n                            LINE_HEAD   (packages/.../line-renderer.ts)\n                        \n                        \n                            LINE_STYLE   (packages/.../line-renderer.ts)\n                        \n                        \n                            LINE_WIDTH   (packages/.../line-renderer.ts)\n                        \n                        \n                            Shape   (packages/.../shape-renderer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/ast-to-mmd/src/app/graph-parser/include-file.ts\n    \n        \n            \n                \n                    \n                        \n                        DecoratorType\n                    \n                \n                        \n                            \n                                 INJECTABLE\n                            \n                        \n                        \n                            \n                                 CONTROLLER\n                            \n                        \n                        \n                            \n                                 COMMAND_HANDLER\n                            \n                        \n                        \n                            \n                                 QUERY_HANDLER\n                            \n                        \n                        \n                            \n                                 EVENT_HANDLER\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        FileType\n                    \n                \n                        \n                            \n                                 CONTROLLER\n                            \n                        \n                        \n                            \n                                 FACADE\n                            \n                        \n                        \n                            \n                                 SERVICE\n                            \n                        \n                        \n                            \n                                 HANDLER\n                            \n                        \n            \n        \n\n    packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts\n    \n        \n            \n                \n                    \n                        \n                        LINE_HEAD\n                    \n                \n                    \n                        \n                            Style of head of the line.\n\nNONE: ---\nARROR: -->\nPOINT: --O\nCROSS: --X\n\n\n                        \n                    \n                        \n                            \n                                 NONE\n                            \n                        \n                        \n                            \n                                 ARROW\n                            \n                        \n                        \n                            \n                                 POINT\n                            \n                        \n                        \n                            \n                                 CROSS\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        LINE_STYLE\n                    \n                \n                    \n                        \n                            Style of the line.\n\nNORMAL: ---\nDOTTED: ...\n\n\n                        \n                    \n                        \n                            \n                                 NORMAL\n                            \n                        \n                        \n                            \n                                 DOTTED\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        LINE_WIDTH\n                    \n                \n                    \n                        \n                            Width of the line.\n\nNORMAL:  ---\nTHICK: ===\n\n\n                        \n                    \n                        \n                            \n                                 NORMAL\n                            \n                        \n                        \n                            \n                                 THICK\n                            \n                        \n            \n        \n\n    packages/ast-to-mmd/src/app/graph-blocks/renderer/shape-renderer.ts\n    \n        \n            \n                \n                    \n                        \n                        Shape\n                    \n                \n                        \n                            \n                                 DEFAULT\n                            \n                        \n                        \n                            \n                                Value : $TEXT$\n                            \n                        \n                        \n                            \n                                 ROUND_EDGES\n                            \n                        \n                        \n                            \n                                Value : ($TEXT$)\n                            \n                        \n                        \n                            \n                                 SHARP_EDGES\n                            \n                        \n                        \n                            \n                                Value : [$TEXT$]\n                            \n                        \n                        \n                            \n                                 STADIUM_SHAPED\n                            \n                        \n                        \n                            \n                                Value : ([$TEXT$])\n                            \n                        \n                        \n                            \n                                 SUBROUTINE\n                            \n                        \n                        \n                            \n                                Value : [[$TEXT$]]\n                            \n                        \n                        \n                            \n                                 CYLINDER\n                            \n                        \n                        \n                            \n                                Value : [($TEXT$)]\n                            \n                        \n                        \n                            \n                                 CIRCLE\n                            \n                        \n                        \n                            \n                                Value : (($TEXT$))\n                            \n                        \n                        \n                            \n                                 ASYMETRIC_RIGHT\n                            \n                        \n                        \n                            \n                                Value : >$TEXT$]\n                            \n                        \n                        \n                            \n                                 RHOMBUS\n                            \n                        \n                        \n                            \n                                Value : {$TEXT$}\n                            \n                        \n                        \n                            \n                                 HEXAGON\n                            \n                        \n                        \n                            \n                                Value : {{$TEXT$}}\n                            \n                        \n                        \n                            \n                                 PARALLEOGRAM\n                            \n                        \n                        \n                            \n                                Value : [/$TEXT$/]\n                            \n                        \n                        \n                            \n                                 PARALLEOGRAM_ALT\n                            \n                        \n                        \n                            \n                                Value : [\\$TEXT$\\]\n                            \n                        \n                        \n                            \n                                 TRAPEZOID\n                            \n                        \n                        \n                            \n                                Value : [/$TEXT$\\]\n                            \n                        \n                        \n                            \n                                 TRAPEZOID_ALT\n                            \n                        \n                        \n                            \n                                Value : [\\$TEXT$/]\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            includeFile   (packages/.../include-file.ts)\n                        \n                        \n                            resolveDecoratorType   (packages/.../include-file.ts)\n                        \n                        \n                            resolveFileType   (packages/.../include-file.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/ast-to-mmd/src/app/graph-parser/include-file.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        includeFile\n                        \n                    \n                \n            \n            \n                \nincludeFile(analyzedClass: ClassDeclaration)\n                \n            \n\n\n\n\n            \n                \n                    Based on the analyzed class is defined,\nwhether the MMD graph is generated or not.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    analyzedClass\n                                    \n                                            ClassDeclaration\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Analyzed class\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolveDecoratorType\n                        \n                    \n                \n            \n            \n                \nresolveDecoratorType(decorators)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    decorators\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DecoratorType | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolveFileType\n                        \n                    \n                \n            \n            \n                \nresolveFileType(analyzedClass: ClassDeclaration)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    analyzedClass\n                                    \n                                            ClassDeclaration\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FileType | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAST-to-MMD\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    28 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            convertor   (packages/.../index.ts)\n                        \n                        \n                            cwd   (packages/.../index.ts)\n                        \n                        \n                            decoratorTypeMap   (packages/.../include-file.ts)\n                        \n                        \n                            exporter   (packages/.../index.ts)\n                        \n                        \n                            fileTypeMap   (packages/.../include-file.ts)\n                        \n                        \n                            graphResults   (packages/.../index.ts)\n                        \n                        \n                            idGenerator   (packages/.../index.ts)\n                        \n                        \n                            options   (packages/.../index.ts)\n                        \n                        \n                            project   (packages/.../index.ts)\n                        \n                        \n                            tsMorphOptions   (packages/.../index.ts)\n                        \n                        \n                            version   (packages/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/ast-to-mmd/src/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        convertor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Convertor(project.getSourceFiles(), idGenerator)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cwd\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.cwd()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exporter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Exporter(options['output'])\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        graphResults\n                        \n                    \n                \n            \n                \n                    \n                        Default value : convertor.convert()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        idGenerator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new UuidBlockIdGenerator()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Default value : program.opts()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        project\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Project(tsMorphOptions)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tsMorphOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProjectOptions\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Default value : JSON.parse(\n  readFileSync(path.resolve(__dirname, '../../../../', 'package.json'), { encoding: 'utf-8' })\n).version\n                    \n                \n\n\n        \n    \n\n    packages/ast-to-mmd/src/app/graph-parser/include-file.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        decoratorTypeMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Record\n\n                    \n                \n                \n                    \n                        Default value : {\n  Injectable: DecoratorType.INJECTABLE,\n  Controller: DecoratorType.CONTROLLER,\n  CommandHandler: DecoratorType.COMMAND_HANDLER,\n  QueryHandler: DecoratorType.QUERY_HANDLER,\n  EventHandler: DecoratorType.EVENT_HANDLER,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileTypeMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Record\n\n                    \n                \n                \n                    \n                        Default value : {\n  Controller: FileType.CONTROLLER,\n  Facade: FileType.FACADE,\n  Service: FileType.SERVICE,\n  Handler: FileType.HANDLER,\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
