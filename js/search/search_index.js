var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/BlockIdGenerator.html",[0,1.088,1,1.239]],["body/interfaces/BlockIdGenerator.html",[0,1.712,1,1.95,2,2.059,3,0.805,4,0.805,5,0.693,6,0.401,7,2.562,8,2.407,9,3.539,10,2.059,11,0.693,12,3.527,13,3.527,14,1.376,15,2.059,16,0.322,17,1.153,18,3.394,19,0.805,20,3.527,21,3.539,22,1.001,23,0.05,24,2.123,25,4.388,26,0.805,27,0.04,28,0.04]],["title/classes/Convertor.html",[29,0.134,30,1.627]],["body/classes/Convertor.html",[1,1.974,3,0.466,4,1.049,5,0.707,6,0.363,8,0.908,11,0.594,14,1.733,15,2.1,16,0.187,17,0.794,19,0.968,21,2.438,22,0.466,23,0.051,26,0.466,27,0.028,28,0.028,29,0.173,30,2.321,31,1.082,32,1.648,33,2.438,34,3.024,35,4.443,36,1.842,37,1.344,38,2.019,39,2.154,40,3.806,41,2.443,42,3.976,43,1.193,44,2.044,45,3.205,46,2.7,47,3.024,48,2.438,49,2.334,50,2.7,51,0.701,52,0.701,53,0.506,54,0.701,55,3.598,56,3.024,57,3.024,58,1.827,59,2.438,60,2.044,61,3.024,62,3.024,63,3.024,64,2.019,65,1.454,66,2.438,67,3.024,68,1.388,69,1.388,70,1.648,71,2.902,72,1.648,73,1.038,74,2.044,75,1.193,76,1.195,77,1.535,78,1.388,79,2.044,80,2.044,81,3.273,82,2.438,83,2.044,84,2.053,85,2.044,86,2.044,87,3.024,88,2.044,89,3.024,90,2.044,91,3.024,92,3.024,93,3.024,94,3.024,95,2.044,96,2.044,97,2.044,98,0.797]],["title/classes/Exporter.html",[29,0.134,99,1.627]],["body/classes/Exporter.html",[3,0.565,4,0.565,5,0.788,6,0.366,11,0.788,16,0.226,17,0.912,19,0.992,22,0.565,23,0.051,24,1.931,26,1.044,27,0.043,28,0.032,29,0.193,31,0.745,33,2.801,36,1.971,39,1.258,41,2.722,43,1.446,45,1.682,49,1.763,50,2.358,51,1.19,52,1.19,53,0.581,54,1.19,64,2.408,65,1.374,75,1.446,76,1.044,77,1.763,78,1.682,81,2.722,82,1.998,99,2.537,100,1.998,101,3.473,102,2.027,103,3.473,104,4.744,105,2.477,106,2.477,107,3.473,108,4.01,109,4.009,110,3.473,111,3.473,112,2.477,113,3.473,114,2.722,115,3.473,116,2.477,117,2.477,118,2.477,119,2.477,120,3.473,121,2.477,122,2.477,123,1.682,124,2.477,125,2.477,126,3.473,127,2.477,128,2.477,129,1.998,130,1.998,131,1.998,132,2.477,133,2.477]],["title/interfaces/GraphResult.html",[0,1.088,64,1.415]],["body/interfaces/GraphResult.html",[0,1.852,2,2.031,3,0.794,4,0.794,5,0.684,6,0.318,11,0.684,14,1.941,16,0.318,23,0.05,26,0.794,27,0.04,28,0.04,36,2.068,37,1.934,45,3.638,53,0.729,64,2.209,65,1.491,68,2.363,69,2.363,73,1.767,75,2.54,134,1.193,135,2.806,136,3.509,137,3.509]],["title/classes/IncrementalBlockIdGenerator.html",[29,0.134,138,1.893]],["body/classes/IncrementalBlockIdGenerator.html",[1,2.171,3,0.682,4,0.682,5,0.588,6,0.404,7,2.579,8,2.336,10,1.745,11,0.588,15,1.745,16,0.273,17,1.037,18,3.191,19,0.901,22,0.682,23,0.051,24,1.754,26,0.682,27,0.036,28,0.036,29,0.144,31,0.899,37,1.754,38,2.243,53,0.501,58,2.386,59,3.183,65,1.025,76,0.899,98,1.166,102,2.743,138,2.68,139,3.563,140,2.304,141,3.947,142,3.947,143,3.947,144,5.117,145,2.304,146,2.411,147,1.518,148,1.518,149,3.183,150,2.411,151,2.99,152,2.99]],["title/classes/LineRenderer.html",[29,0.134,153,1.627]],["body/classes/LineRenderer.html",[3,0.212,4,0.212,5,0.183,6,0.42,8,1.116,11,0.86,16,0.085,17,0.421,19,1.06,22,0.8,23,0.052,24,2.044,26,0.647,27,0.015,28,0.015,29,0.101,31,0.279,37,0.712,38,2.31,39,0.814,43,0.543,48,1.292,49,0.814,50,1.088,51,1.137,52,1.137,53,0.809,54,1.347,75,2.358,76,1.054,77,1.862,78,0.631,81,0.631,98,1.678,134,1.576,137,1.292,146,2.285,147,1.685,148,2.436,153,2.656,154,2.685,155,0.472,156,1.292,157,1.292,158,4.087,159,1.603,160,1.603,161,1.603,162,2.112,163,2.112,164,2.112,165,2.112,166,2.112,167,2.112,168,3.098,169,2.512,170,2.498,171,1.603,172,1.603,173,1.603,174,1.603,175,1.603,176,1.603,177,1.603,178,2.112,179,2.112,180,1.603,181,2.112,182,0.93,183,2.512,184,1.603,185,2.112,186,3.098,187,2.026,188,3.098,189,0.93,190,3.469,191,2.512,192,0.93,193,3.258,194,3.507,195,2.512,196,3.098,197,3.071,198,1.603,199,0.93,200,2.677,201,3.071,202,1.603,203,0.93,204,2.677,205,0.93,206,0.93,207,0.93,208,1.088,209,1.603,210,2.834,211,0.93,212,4.04,213,2.512,214,2.512,215,1.292,216,1.603,217,1.704,218,1.603,219,1.603,220,0.93,221,1.603,222,0.93,223,1.603,224,0.93,225,1.603,226,0.93,227,1.603,228,0.93,229,0.93,230,0.93,231,0.93,232,0.93,233,0.93,234,0.93,235,0.93,236,0.93,237,1.704,238,0.75,239,0.75,240,0.75,241,0.75,242,2.026,243,1.292,244,1.292,245,0.936,246,3.098,247,0.93,248,1.603,249,0.93,250,1.603,251,1.603,252,2.834,253,0.93,254,0.93,255,2.834,256,2.512,257,1.603,258,1.603,259,0.93,260,0.93,261,1.603,262,0.93,263,0.93,264,0.93,265,2.112,266,0.93,267,0.93,268,0.631,269,0.93,270,0.75,271,0.93,272,0.93,273,0.75,274,0.75,275,0.93]],["title/classes/OfKindSiblingCondition.html",[29,0.134,276,1.893]],["body/classes/OfKindSiblingCondition.html",[3,0.65,4,0.65,5,0.56,6,0.421,11,0.56,14,1.799,16,0.26,17,1.004,19,0.985,22,0.65,23,0.051,26,0.65,27,0.035,28,0.035,29,0.137,31,0.857,36,1.112,37,1.699,38,2.191,39,2.191,43,1.664,51,1.31,52,1.31,53,0.722,54,1.31,58,1.447,65,1.479,73,1.447,76,1.149,98,1.112,140,2.232,145,2.232,245,2.232,276,2.596,277,3.718,278,3.718,279,1.935,280,2.441,281,3.824,282,3.535,283,4.315,284,2.596,285,2.851,286,3.084,287,3.824,288,3.084,289,2.851,290,2.299,291,2.851,292,2.299,293,2.851,294,2.851,295,2.851,296,2.851,297,2.851]],["title/classes/PositiveSiblingCondition.html",[29,0.134,298,1.893]],["body/classes/PositiveSiblingCondition.html",[3,0.751,4,0.751,5,0.647,6,0.384,11,0.647,14,1.902,16,0.301,17,1.104,19,0.751,22,0.751,23,0.051,26,0.751,27,0.038,28,0.038,29,0.158,31,0.99,36,1.285,41,3.142,51,1.128,52,1.128,53,0.551,54,1.128,65,1.44,73,1.672,76,0.99,98,1.285,140,2.453,145,2.453,215,2.655,245,2.453,279,2.236,280,2.557,284,2.853,286,2.655,292,2.655,298,2.853,299,3.389,300,4.202,301,3.389,302,4.202,303,4.202,304,4.202,305,3.293]],["title/classes/ShapeRenderer.html",[29,0.134,306,1.893]],["body/classes/ShapeRenderer.html",[3,0.453,4,0.453,5,0.39,6,0.323,11,0.582,16,0.181,17,0.777,19,0.894,22,0.453,23,0.052,24,2.024,26,0.675,27,0.027,28,0.027,29,0.17,31,0.597,37,1.315,38,1.796,39,1.796,51,0.68,52,0.68,53,0.656,54,0.68,76,1.547,77,1.502,98,0.775,134,1.212,147,1.502,148,1.008,155,1.008,156,2.386,157,2.386,170,3.161,187,3.857,237,1.601,306,2.009,307,2.402,308,2.959,309,3.92,310,2.959,311,5.146,312,2.959,313,3.537,314,3.537,315,4.335,316,1.985,317,2.959,318,4.252,319,1.985,320,4.783,321,1.985,322,1.985,323,1.601,324,1.601,325,1.985,326,1.985,327,1.601,328,2.386,329,1.985,330,1.601,331,1.985,332,2.386,333,1.985,334,1.601,335,2.386,336,2.386,337,2.959,338,1.601,339,2.959,340,1.601,341,2.959,342,1.601,343,1.601,344,1.985]],["title/interfaces/SiblingCondition.html",[0,1.088,280,1.415]],["body/interfaces/SiblingCondition.html",[0,1.772,2,1.846,3,0.722,4,0.722,5,0.622,6,0.374,11,0.805,14,1.988,16,0.289,17,1.075,19,1.036,22,0.722,23,0.05,26,0.722,27,0.037,28,0.037,36,1.234,51,1.084,52,1.084,53,0.529,54,1.084,65,1.084,73,1.606,76,0.951,77,1.606,136,3.302,245,2.39,280,2.079,284,2.78,288,3.302,290,4.11,301,3.873,345,2.55,346,4.095,347,4.095,348,4.095,349,3.163,350,3.302,351,4.095,352,4.095,353,3.302,354,4.802,355,4.095]],["title/classes/UuidBlockIdGenerator.html",[29,0.134,356,1.627]],["body/classes/UuidBlockIdGenerator.html",[1,2.219,3,0.731,4,0.731,5,0.629,6,0.377,7,2.409,8,2.311,10,1.869,11,0.629,15,1.869,16,0.293,17,1.084,18,3.276,19,0.731,22,0.731,23,0.051,24,1.834,26,0.731,27,0.038,28,0.038,29,0.154,31,0.962,58,2.319,65,1.414,76,1.241,98,1.249,102,2.409,140,2.409,145,2.409,150,2.582,356,2.409,357,3.328,358,4.127,359,4.567,360,2.802,361,4.567,362,3.328,363,3.202,364,3.202,365,3.202]],["title/coverage.html",[366,3.038]],["body/coverage.html",[0,1.145,1,0.656,5,0.29,6,0.501,7,1.713,8,1.733,9,1.19,10,1.713,14,0.576,23,0.05,27,0.021,28,0.021,29,0.255,30,1.374,32,1.19,40,1.19,46,1.002,49,0.749,53,0.247,58,1.7,64,0.749,70,1.19,71,1.19,72,1.19,99,1.374,100,1.19,114,1.002,134,1.823,135,1.19,138,1.002,139,1.19,149,3.871,153,0.861,154,0.861,155,1.195,208,1.002,268,1.002,276,1.002,277,1.19,278,1.19,279,1.598,280,0.749,298,1.002,299,1.19,306,1.002,307,1.002,345,1.19,356,0.861,357,1.19,360,1.993,366,1.19,367,1.476,368,1.476,369,1.476,370,3.899,371,2.353,372,2.353,373,2.353,374,2.353,375,2.353,376,1.002,377,4.665,378,1.19,379,4.8,380,1.476,381,1.476,382,1.476,383,1.476,384,2.353,385,1.476,386,2.353,387,1.476,388,1.476,389,3.659,390,3.659,391,1.476,392,4.906,393,5.123,394,1.476,395,1.476,396,1.476,397,1.476,398,1.476,399,1.476,400,4.489,401,4.489,402,1.476,403,1.476,404,2.935,405,2.935,406,1.476,407,1.476,408,1.476,409,1.476,410,1.476,411,1.476,412,3.349,413,1.476,414,1.476,415,1.476,416,1.476,417,2.353,418,2.353,419,1.476,420,1.476,421,1.476,422,1.476,423,1.476,424,1.476,425,1.476,426,1.476,427,1.476,428,1.476,429,1.476,430,1.476,431,1.476,432,1.476,433,1.476,434,1.476,435,1.476,436,1.476,437,1.476,438,1.476,439,1.476,440,1.476,441,1.476,442,1.476,443,1.476,444,2.353,445,1.476,446,1.476,447,1.476,448,2.136,449,2.136,450,1.19,451,1.476,452,1.19,453,1.19,454,1.19,455,1.19,456,1.476,457,1.476,458,1.476,459,1.476,460,3.531,461,1.19,462,1.19,463,1.19,464,1.19,465,1.476,466,1.476]],["title/dependencies.html",[362,1.893,467,2.696]],["body/dependencies.html",[23,0.051,27,0.043,28,0.043,68,2.646,69,2.646,109,3.143,467,3.143,468,3.897,469,3.897,470,3.897,471,3.897,472,3.897,473,3.897,474,3.897,475,3.897,476,3.897,477,3.897,478,3.897,479,3.897,480,3.897,481,3.897,482,3.897,483,3.897]],["title/miscellaneous/enumerations.html",[484,0.804,485,2.696]],["body/miscellaneous/enumerations.html",[6,0.408,16,0.241,23,0.05,27,0.033,28,0.033,134,1.42,147,1.337,148,2.714,154,1.538,155,2.455,158,3.341,190,2.922,193,2.124,197,2.922,200,2.922,201,2.922,204,2.124,238,2.922,239,2.124,240,2.922,241,2.922,242,3.599,243,2.922,244,2.922,268,1.788,270,2.124,282,2.46,307,1.788,315,4.311,318,2.922,323,2.124,324,2.124,327,2.124,328,2.124,330,2.124,332,2.124,334,2.124,335,2.124,336,2.124,338,2.124,340,2.124,342,2.124,343,2.124,376,1.788,448,1.538,449,2.418,484,0.903,485,2.124,486,2.124,487,2.922,488,2.46,489,2.922,490,3.341,491,2.634,492,2.634,493,2.634,494,2.634,495,2.634,496,2.634,497,2.634,498,2.634,499,2.634,500,2.634,501,2.634,502,2.634,503,2.634,504,2.634,505,2.634,506,2.634,507,2.634,508,2.634,509,2.634,510,2.634,511,2.124,512,2.922,513,2.634,514,2.634,515,2.634,516,2.124,517,2.124,518,2.124,519,2.634]],["title/miscellaneous/functions.html",[84,2.269,484,0.804]],["body/miscellaneous/functions.html",[6,0.314,11,0.675,16,0.314,19,0.784,22,0.985,23,0.049,27,0.039,28,0.039,29,0.207,36,1.34,51,1.617,52,1.617,53,0.723,54,1.617,66,3.993,84,2.332,102,2.004,123,2.332,134,1.177,350,2.769,353,2.769,448,2.004,449,2.89,450,3.48,452,3.48,453,3.48,484,1.177,487,2.769,488,3.204,489,2.769,520,3.434,521,4.316,522,4.316,523,3.434,524,3.434,525,4.316,526,3.434]],["title/index.html",[16,0.214,527,2.347,528,2.347]],["body/index.html",[23,0.045,27,0.045,28,0.045,123,2.932,529,4.318]],["title/modules.html",[530,3.038]],["body/modules.html",[23,0.045,27,0.045,28,0.045,530,3.497]],["title/overview.html",[531,3.038]],["body/overview.html",[2,2.489,23,0.045,27,0.045,28,0.045,31,1.282,531,3.439,532,4.265,533,4.265]],["title/miscellaneous/typealiases.html",[484,0.804,534,3.343]],["body/miscellaneous/typealiases.html",[6,0.373,16,0.373,23,0.044,27,0.044,28,0.044,53,0.683,134,1.399,153,2.382,154,2.382,155,2.433,217,3.291,273,3.291,274,3.865,360,2.771,484,1.399,490,3.291,535,4.081]],["title/miscellaneous/variables.html",[484,0.804,536,2.696]],["body/miscellaneous/variables.html",[6,0.383,16,0.246,23,0.051,27,0.034,28,0.034,30,2.149,46,2.847,49,2.288,53,0.754,99,2.149,114,2.5,129,2.174,130,2.174,131,2.174,134,0.924,147,2.689,148,2.689,208,2.5,282,1.83,356,1.573,376,1.83,378,2.969,448,1.573,449,2.448,454,2.969,455,2.969,460,2.174,461,2.969,462,2.969,463,2.969,464,3.381,484,0.924,486,2.174,488,2.5,511,2.174,512,2.969,516,2.174,517,2.174,518,2.174,536,2.174,537,5.146,538,2.695,539,2.695,540,2.695,541,2.695,542,2.695,543,2.695,544,2.695,545,2.695,546,2.695,547,2.695,548,2.695,549,2.695,550,2.695,551,3.682,552,2.695,553,2.695,554,2.695,555,2.695,556,2.695,557,2.695,558,2.695,559,2.695,560,2.695,561,2.695,562,2.695,563,2.695]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":149,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{},"coverage.html":{}}}],["0.1.0",{"_index":475,"title":{},"body":{"dependencies.html":{}}}],["0.12.7",{"_index":480,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":379,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":195,"title":{},"body":{"classes/LineRenderer.html":{}}}],["1.5.2",{"_index":479,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":451,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":375,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":459,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":381,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":370,"title":{},"body":{"coverage.html":{}}}],["13.0.3",{"_index":481,"title":{},"body":{"dependencies.html":{}}}],["15/16",{"_index":432,"title":{},"body":{"coverage.html":{}}}],["2.0.0",{"_index":483,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":371,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":373,"title":{},"body":{"coverage.html":{}}}],["23/31",{"_index":405,"title":{},"body":{"coverage.html":{}}}],["23/32",{"_index":430,"title":{},"body":{"coverage.html":{}}}],["23/37",{"_index":390,"title":{},"body":{"coverage.html":{}}}],["23/38",{"_index":424,"title":{},"body":{"coverage.html":{}}}],["24/29",{"_index":401,"title":{},"body":{"coverage.html":{}}}],["24/43",{"_index":443,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":380,"title":{},"body":{"coverage.html":{}}}],["25/29",{"_index":396,"title":{},"body":{"coverage.html":{}}}],["26/26",{"_index":457,"title":{},"body":{"coverage.html":{}}}],["27/29",{"_index":419,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":533,"title":{},"body":{"overview.html":{}}}],["3/3",{"_index":383,"title":{},"body":{"coverage.html":{}}}],["32",{"_index":532,"title":{},"body":{"overview.html":{}}}],["33",{"_index":458,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":382,"title":{},"body":{"coverage.html":{}}}],["5.0.0",{"_index":473,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":374,"title":{},"body":{"coverage.html":{}}}],["55",{"_index":442,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":423,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":389,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":372,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":429,"title":{},"body":{"coverage.html":{}}}],["74",{"_index":404,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":131,"title":{},"body":{"classes/Exporter.html":{},"miscellaneous/variables.html":{}}}],["8.13.10",{"_index":471,"title":{},"body":{"dependencies.html":{}}}],["82",{"_index":400,"title":{},"body":{"coverage.html":{}}}],["86",{"_index":395,"title":{},"body":{"coverage.html":{}}}],["9.0.0",{"_index":477,"title":{},"body":{"dependencies.html":{}}}],["93",{"_index":418,"title":{},"body":{"coverage.html":{}}}],["_",{"_index":365,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{}}}],["_blockkinds",{"_index":283,"title":{},"body":{"classes/OfKindSiblingCondition.html":{}}}],["_connectiondescription",{"_index":162,"title":{},"body":{"classes/LineRenderer.html":{}}}],["_lhshead",{"_index":163,"title":{},"body":{"classes/LineRenderer.html":{}}}],["_linelength",{"_index":164,"title":{},"body":{"classes/LineRenderer.html":{}}}],["_linestyle",{"_index":165,"title":{},"body":{"classes/LineRenderer.html":{}}}],["_linewidth",{"_index":166,"title":{},"body":{"classes/LineRenderer.html":{}}}],["_rhshead",{"_index":167,"title":{},"body":{"classes/LineRenderer.html":{}}}],["_sibling",{"_index":305,"title":{},"body":{"classes/PositiveSiblingCondition.html":{}}}],["accessors",{"_index":177,"title":{},"body":{"classes/LineRenderer.html":{}}}],["aliases",{"_index":535,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alt",{"_index":339,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["always",{"_index":302,"title":{},"body":{"classes/PositiveSiblingCondition.html":{}}}],["analyzed",{"_index":521,"title":{},"body":{"miscellaneous/functions.html":{}}}],["analyzedclass",{"_index":522,"title":{},"body":{"miscellaneous/functions.html":{}}}],["append",{"_index":210,"title":{},"body":{"classes/LineRenderer.html":{}}}],["appended",{"_index":216,"title":{},"body":{"classes/LineRenderer.html":{}}}],["array",{"_index":56,"title":{},"body":{"classes/Convertor.html":{}}}],["arror",{"_index":519,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["arrow",{"_index":239,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["ast",{"_index":529,"title":{},"body":{"index.html":{}}}],["asymetric_right",{"_index":334,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["asymmetric",{"_index":333,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["basecycledeclarationgraphblock",{"_index":388,"title":{},"body":{"coverage.html":{}}}],["based",{"_index":350,"title":{},"body":{"interfaces/SiblingCondition.html":{},"miscellaneous/functions.html":{}}}],["baseexitdeclarationgraphblock",{"_index":394,"title":{},"body":{"coverage.html":{}}}],["between",{"_index":159,"title":{},"body":{"classes/LineRenderer.html":{}}}],["binary_expression_declaration",{"_index":492,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["binaryexpressiondeclarationgraphblock",{"_index":399,"title":{},"body":{"coverage.html":{}}}],["block",{"_index":58,"title":{},"body":{"classes/Convertor.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/OfKindSiblingCondition.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{}}}],["block.kind",{"_index":291,"title":{},"body":{"classes/OfKindSiblingCondition.html":{}}}],["block.ts",{"_index":393,"title":{},"body":{"coverage.html":{}}}],["block_declaration",{"_index":493,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["blockdeclarationgraphblock",{"_index":403,"title":{},"body":{"coverage.html":{}}}],["blockidgenerator",{"_index":1,"title":{"interfaces/BlockIdGenerator.html":{}},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{}}}],["blockkind",{"_index":282,"title":{},"body":{"classes/OfKindSiblingCondition.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["blockkind.for_declaration",{"_index":548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blockkind.for_in_declaration",{"_index":549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blockkind.for_of_declaration",{"_index":550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blockkinds",{"_index":287,"title":{},"body":{"classes/OfKindSiblingCondition.html":{}}}],["blocks",{"_index":73,"title":{},"body":{"classes/Convertor.html":{},"interfaces/GraphResult.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"interfaces/SiblingCondition.html":{}}}],["blocks/base",{"_index":384,"title":{},"body":{"coverage.html":{}}}],["blocks/binary",{"_index":397,"title":{},"body":{"coverage.html":{}}}],["blocks/block",{"_index":402,"title":{},"body":{"coverage.html":{}}}],["blocks/break",{"_index":406,"title":{},"body":{"coverage.html":{}}}],["blocks/continue",{"_index":408,"title":{},"body":{"coverage.html":{}}}],["blocks/empty.graph",{"_index":410,"title":{},"body":{"coverage.html":{}}}],["blocks/for",{"_index":412,"title":{},"body":{"coverage.html":{}}}],["blocks/graph",{"_index":417,"title":{},"body":{"coverage.html":{}}}],["blocks/if",{"_index":421,"title":{},"body":{"coverage.html":{}}}],["blocks/method",{"_index":425,"title":{},"body":{"coverage.html":{}}}],["blocks/named",{"_index":428,"title":{},"body":{"coverage.html":{}}}],["blocks/parallel",{"_index":431,"title":{},"body":{"coverage.html":{}}}],["blocks/renderer/line",{"_index":154,"title":{},"body":{"classes/LineRenderer.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["blocks/renderer/shape",{"_index":307,"title":{},"body":{"classes/ShapeRenderer.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["blocks/return",{"_index":433,"title":{},"body":{"coverage.html":{}}}],["blocks/text.graph",{"_index":435,"title":{},"body":{"coverage.html":{}}}],["blocks/throw",{"_index":437,"title":{},"body":{"coverage.html":{}}}],["blocks/try",{"_index":439,"title":{},"body":{"coverage.html":{}}}],["blocks/variable",{"_index":444,"title":{},"body":{"coverage.html":{}}}],["boolean",{"_index":245,"title":{},"body":{"classes/LineRenderer.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"interfaces/SiblingCondition.html":{}}}],["break_declaration",{"_index":494,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["breakdeclarationgraphblock",{"_index":407,"title":{},"body":{"coverage.html":{}}}],["builder",{"_index":275,"title":{},"body":{"classes/LineRenderer.html":{}}}],["call.graph",{"_index":426,"title":{},"body":{"coverage.html":{}}}],["calling",{"_index":358,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{}}}],["case",{"_index":265,"title":{},"body":{"classes/LineRenderer.html":{}}}],["catch",{"_index":440,"title":{},"body":{"coverage.html":{}}}],["chalk",{"_index":472,"title":{},"body":{"dependencies.html":{}}}],["checked",{"_index":352,"title":{},"body":{"interfaces/SiblingCondition.html":{}}}],["checks",{"_index":281,"title":{},"body":{"classes/OfKindSiblingCondition.html":{}}}],["child",{"_index":348,"title":{},"body":{"interfaces/SiblingCondition.html":{}}}],["circle",{"_index":332,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["class",{"_index":29,"title":{"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"classes/UuidBlockIdGenerator.html":{}},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["classblocks",{"_index":89,"title":{},"body":{"classes/Convertor.html":{}}}],["classdeclaration",{"_index":66,"title":{},"body":{"classes/Convertor.html":{},"miscellaneous/functions.html":{}}}],["classes",{"_index":31,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"classes/UuidBlockIdGenerator.html":{},"overview.html":{}}}],["clear",{"_index":474,"title":{},"body":{"dependencies.html":{}}}],["cli",{"_index":470,"title":{},"body":{"dependencies.html":{}}}],["codeparser",{"_index":40,"title":{},"body":{"classes/Convertor.html":{},"coverage.html":{}}}],["codeparser(idgenerator",{"_index":80,"title":{},"body":{"classes/Convertor.html":{}}}],["command_handler",{"_index":513,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["commander",{"_index":476,"title":{},"body":{"dependencies.html":{}}}],["commandhandler",{"_index":554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["condition",{"_index":301,"title":{},"body":{"classes/PositiveSiblingCondition.html":{},"interfaces/SiblingCondition.html":{}}}],["condition.ts",{"_index":279,"title":{},"body":{"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"coverage.html":{}}}],["condition.ts:10",{"_index":286,"title":{},"body":{"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{}}}],["condition.ts:16",{"_index":289,"title":{},"body":{"classes/OfKindSiblingCondition.html":{}}}],["connection",{"_index":213,"title":{},"body":{"classes/LineRenderer.html":{}}}],["console.log('\\tgraph",{"_index":132,"title":{},"body":{"classes/Exporter.html":{}}}],["console.log(`found",{"_index":118,"title":{},"body":{"classes/Exporter.html":{}}}],["console.log(`writing",{"_index":124,"title":{},"body":{"classes/Exporter.html":{}}}],["const",{"_index":81,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/LineRenderer.html":{}}}],["constructor",{"_index":43,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/LineRenderer.html":{},"classes/OfKindSiblingCondition.html":{}}}],["constructor(...blockkinds",{"_index":293,"title":{},"body":{"classes/OfKindSiblingCondition.html":{}}}],["constructor(blockkinds",{"_index":285,"title":{},"body":{"classes/OfKindSiblingCondition.html":{}}}],["constructor(lhsid",{"_index":182,"title":{},"body":{"classes/LineRenderer.html":{}}}],["constructor(outputrootpath",{"_index":105,"title":{},"body":{"classes/Exporter.html":{}}}],["constructor(private",{"_index":78,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/LineRenderer.html":{}}}],["constructor(sourcefiles",{"_index":44,"title":{},"body":{"classes/Convertor.html":{}}}],["content",{"_index":125,"title":{},"body":{"classes/Exporter.html":{}}}],["continue_declaration",{"_index":495,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["continuedeclarationgraphblock",{"_index":409,"title":{},"body":{"coverage.html":{}}}],["controller",{"_index":512,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["convert",{"_index":42,"title":{},"body":{"classes/Convertor.html":{}}}],["converting",{"_index":34,"title":{},"body":{"classes/Convertor.html":{}}}],["convertor",{"_index":30,"title":{"classes/Convertor.html":{}},"body":{"classes/Convertor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["convertor(project.getsourcefiles",{"_index":538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["convertor.convert",{"_index":541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["correct",{"_index":103,"title":{},"body":{"classes/Exporter.html":{}}}],["counter",{"_index":144,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{}}}],["coverage",{"_index":366,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creates",{"_index":48,"title":{},"body":{"classes/Convertor.html":{},"classes/LineRenderer.html":{}}}],["cross",{"_index":241,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["crypto",{"_index":361,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{}}}],["cwd",{"_index":461,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cycle",{"_index":385,"title":{},"body":{"coverage.html":{}}}],["cycle_block_kind",{"_index":378,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cylinder",{"_index":330,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["cylindrical",{"_index":329,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["declaration",{"_index":386,"title":{},"body":{"coverage.html":{}}}],["declaration.graph",{"_index":392,"title":{},"body":{"coverage.html":{}}}],["decorators",{"_index":524,"title":{},"body":{"miscellaneous/functions.html":{}}}],["decoratortype",{"_index":487,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["decoratortype.command_handler",{"_index":555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decoratortype.controller",{"_index":553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decoratortype.event_handler",{"_index":559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decoratortype.injectable",{"_index":552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decoratortype.query_handler",{"_index":557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decoratortypemap",{"_index":454,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["default",{"_index":147,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":19,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/UuidBlockIdGenerator.html":{},"miscellaneous/functions.html":{}}}],["dependencies",{"_index":467,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["describing",{"_index":12,"title":{},"body":{"interfaces/BlockIdGenerator.html":{}}}],["description",{"_index":11,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/UuidBlockIdGenerator.html":{},"miscellaneous/functions.html":{}}}],["documentation",{"_index":367,"title":{},"body":{"coverage.html":{}}}],["dot",{"_index":169,"title":{},"body":{"classes/LineRenderer.html":{}}}],["dotted",{"_index":243,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["each",{"_index":63,"title":{},"body":{"classes/Convertor.html":{}}}],["edges",{"_index":322,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["empty_declaration",{"_index":496,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["emptygraphblock",{"_index":411,"title":{},"body":{"coverage.html":{}}}],["encoding",{"_index":129,"title":{},"body":{"classes/Exporter.html":{},"miscellaneous/variables.html":{}}}],["enum",{"_index":237,"title":{},"body":{"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{}}}],["enumerations",{"_index":485,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["event_handler",{"_index":515,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["eventhandler",{"_index":558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["existing",{"_index":217,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/typealiases.html":{}}}],["exit",{"_index":391,"title":{},"body":{"coverage.html":{}}}],["export",{"_index":26,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["export(graphresults",{"_index":111,"title":{},"body":{"classes/Exporter.html":{}}}],["exporter",{"_index":99,"title":{"classes/Exporter.html":{}},"body":{"classes/Exporter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["exporter(options['output",{"_index":540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exporting",{"_index":101,"title":{},"body":{"classes/Exporter.html":{}}}],["exports",{"_index":113,"title":{},"body":{"classes/Exporter.html":{}}}],["expression",{"_index":398,"title":{},"body":{"coverage.html":{}}}],["facade",{"_index":516,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":214,"title":{},"body":{"classes/LineRenderer.html":{}}}],["figlet",{"_index":478,"title":{},"body":{"dependencies.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{}}}],["file.ts",{"_index":449,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["filecontent",{"_index":126,"title":{},"body":{"classes/Exporter.html":{}}}],["files",{"_index":35,"title":{},"body":{"classes/Convertor.html":{}}}],["filetype",{"_index":489,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["filetype.controller",{"_index":560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filetype.facade",{"_index":561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filetype.handler",{"_index":563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filetype.service",{"_index":562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filetypemap",{"_index":455,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["for_declaration",{"_index":497,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["for_in_declaration",{"_index":498,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["for_of_declaration",{"_index":499,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fordeclarationgraphblock",{"_index":413,"title":{},"body":{"coverage.html":{}}}],["forindeclarationgraphblock",{"_index":414,"title":{},"body":{"coverage.html":{}}}],["form",{"_index":331,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["forofdeclarationgraphblock",{"_index":415,"title":{},"body":{"coverage.html":{}}}],["forxdeclarationgraphblock",{"_index":416,"title":{},"body":{"coverage.html":{}}}],["fs",{"_index":117,"title":{},"body":{"classes/Exporter.html":{}}}],["function",{"_index":360,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functionblocks",{"_index":87,"title":{},"body":{"classes/Convertor.html":{}}}],["functiondeclaration",{"_index":67,"title":{},"body":{"classes/Convertor.html":{}}}],["functions",{"_index":84,"title":{"miscellaneous/functions.html":{}},"body":{"classes/Convertor.html":{},"miscellaneous/functions.html":{}}}],["g",{"_index":364,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{}}}],["generate",{"_index":18,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["generated",{"_index":102,"title":{},"body":{"classes/Exporter.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{},"miscellaneous/functions.html":{}}}],["generates",{"_index":21,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{}}}],["generator",{"_index":15,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["generator.ts",{"_index":10,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{}}}],["generator.ts:10",{"_index":20,"title":{},"body":{"interfaces/BlockIdGenerator.html":{}}}],["generator.ts:13",{"_index":150,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["generator.ts:15",{"_index":151,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{}}}],["generator/block",{"_index":9,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"coverage.html":{}}}],["generator/incremental",{"_index":139,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{},"coverage.html":{}}}],["generator/uuid",{"_index":357,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{},"coverage.html":{}}}],["getisdotted",{"_index":235,"title":{},"body":{"classes/LineRenderer.html":{}}}],["getlhshead",{"_index":231,"title":{},"body":{"classes/LineRenderer.html":{}}}],["getlinepiece",{"_index":229,"title":{},"body":{"classes/LineRenderer.html":{}}}],["getrhshead",{"_index":233,"title":{},"body":{"classes/LineRenderer.html":{}}}],["getting",{"_index":527,"title":{"index.html":{}},"body":{}}],["graph",{"_index":36,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"interfaces/SiblingCondition.html":{},"miscellaneous/functions.html":{}}}],["graph.block.ts",{"_index":387,"title":{},"body":{"coverage.html":{}}}],["graph.render(0",{"_index":127,"title":{},"body":{"classes/Exporter.html":{}}}],["graphblock",{"_index":14,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"interfaces/GraphResult.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"interfaces/SiblingCondition.html":{},"coverage.html":{}}}],["graphparentgraphblock",{"_index":70,"title":{},"body":{"classes/Convertor.html":{},"coverage.html":{}}}],["graphparentgraphblock(this.idgenerator.generate",{"_index":97,"title":{},"body":{"classes/Convertor.html":{}}}],["graphresult",{"_index":64,"title":{"interfaces/GraphResult.html":{}},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"coverage.html":{}}}],["graphresults",{"_index":114,"title":{},"body":{"classes/Exporter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["graphresults.length",{"_index":119,"title":{},"body":{"classes/Exporter.html":{}}}],["graphs",{"_index":82,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{}}}],["graphs.push",{"_index":96,"title":{},"body":{"classes/Convertor.html":{}}}],["handler",{"_index":518,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["head",{"_index":193,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["hexagon",{"_index":336,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["https://mermaid",{"_index":311,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["id",{"_index":8,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{}}}],["identifier",{"_index":368,"title":{},"body":{"coverage.html":{}}}],["idgenerator",{"_index":46,"title":{},"body":{"classes/Convertor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ids",{"_index":59,"title":{},"body":{"classes/Convertor.html":{},"classes/IncrementalBlockIdGenerator.html":{}}}],["if_else_declaration",{"_index":501,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ifelsedeclarationgraphblock",{"_index":422,"title":{},"body":{"coverage.html":{}}}],["implementation",{"_index":140,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["implements",{"_index":145,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["import",{"_index":65,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"interfaces/SiblingCondition.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["includefile",{"_index":450,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["includefile(analyzedclass",{"_index":520,"title":{},"body":{"miscellaneous/functions.html":{}}}],["incrementalblockidgenerator",{"_index":138,"title":{"classes/IncrementalBlockIdGenerator.html":{}},"body":{"classes/IncrementalBlockIdGenerator.html":{},"coverage.html":{}}}],["incrementation",{"_index":142,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/UuidBlockIdGenerator.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["initialize",{"_index":107,"title":{},"body":{"classes/Exporter.html":{}}}],["injectable",{"_index":511,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["instance",{"_index":50,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/LineRenderer.html":{}}}],["interface",{"_index":0,"title":{"interfaces/BlockIdGenerator.html":{},"interfaces/GraphResult.html":{},"interfaces/SiblingCondition.html":{}},"body":{"interfaces/BlockIdGenerator.html":{},"interfaces/GraphResult.html":{},"interfaces/SiblingCondition.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"interfaces/GraphResult.html":{},"interfaces/SiblingCondition.html":{},"overview.html":{}}}],["isdotted",{"_index":181,"title":{},"body":{"classes/LineRenderer.html":{}}}],["isvalid",{"_index":284,"title":{},"body":{"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"interfaces/SiblingCondition.html":{}}}],["isvalid(_sibling",{"_index":304,"title":{},"body":{"classes/PositiveSiblingCondition.html":{}}}],["isvalid(sibling",{"_index":288,"title":{},"body":{"classes/OfKindSiblingCondition.html":{},"interfaces/SiblingCondition.html":{}}}],["iterates",{"_index":61,"title":{},"body":{"classes/Convertor.html":{}}}],["js.github.io/mermaid/#/flowchart?id=a",{"_index":320,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["js.github.io/mermaid/#/flowchart?id=node",{"_index":312,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["js.github.io/mermaid/#/flowchart?id=parallelogram",{"_index":337,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["js.github.io/mermaid/#/flowchart?id=trapezoid",{"_index":341,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["js/mermaid",{"_index":469,"title":{},"body":{"dependencies.html":{}}}],["json.parse",{"_index":545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kind.sibling",{"_index":278,"title":{},"body":{"classes/OfKindSiblingCondition.html":{},"coverage.html":{}}}],["left",{"_index":186,"title":{},"body":{"classes/LineRenderer.html":{}}}],["length",{"_index":196,"title":{},"body":{"classes/LineRenderer.html":{}}}],["lhshead",{"_index":179,"title":{},"body":{"classes/LineRenderer.html":{}}}],["lhsid",{"_index":185,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line",{"_index":158,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["line_head",{"_index":190,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["line_head.arrow",{"_index":266,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line_head.cross",{"_index":267,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line_head.none",{"_index":191,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line_head.point",{"_index":269,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line_style",{"_index":197,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["line_style.dotted",{"_index":272,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line_style.normal",{"_index":198,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line_width",{"_index":201,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["line_width.normal",{"_index":202,"title":{},"body":{"classes/LineRenderer.html":{}}}],["line_width.thick",{"_index":262,"title":{},"body":{"classes/LineRenderer.html":{}}}],["linear",{"_index":141,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{}}}],["linepiece",{"_index":178,"title":{},"body":{"classes/LineRenderer.html":{}}}],["linerenderer",{"_index":153,"title":{"classes/LineRenderer.html":{}},"body":{"classes/LineRenderer.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["linerenderermodifier",{"_index":274,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/typealiases.html":{}}}],["link",{"_index":76,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["list.graph",{"_index":445,"title":{},"body":{"coverage.html":{}}}],["matching",{"_index":28,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mermaid",{"_index":468,"title":{},"body":{"dependencies.html":{}}}],["mermaid.js",{"_index":310,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["met",{"_index":303,"title":{},"body":{"classes/PositiveSiblingCondition.html":{}}}],["method",{"_index":13,"title":{},"body":{"interfaces/BlockIdGenerator.html":{}}}],["method_call_declaration",{"_index":502,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["methodcallgraphblock",{"_index":427,"title":{},"body":{"coverage.html":{}}}],["methods",{"_index":17,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["miscellaneous",{"_index":484,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mmd",{"_index":123,"title":{},"body":{"classes/Exporter.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["mmd/src/app/block",{"_index":7,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{}}}],["mmd/src/app/block.kind.ts",{"_index":376,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mmd/src/app/conditions/impl/of",{"_index":277,"title":{},"body":{"classes/OfKindSiblingCondition.html":{},"coverage.html":{}}}],["mmd/src/app/conditions/impl/positive.sibling",{"_index":299,"title":{},"body":{"classes/PositiveSiblingCondition.html":{},"coverage.html":{}}}],["mmd/src/app/conditions/sibling.condition.ts",{"_index":345,"title":{},"body":{"interfaces/SiblingCondition.html":{},"coverage.html":{}}}],["mmd/src/app/conditions/sibling.condition.ts:13",{"_index":349,"title":{},"body":{"interfaces/SiblingCondition.html":{}}}],["mmd/src/app/convertor.ts",{"_index":32,"title":{},"body":{"classes/Convertor.html":{},"coverage.html":{}}}],["mmd/src/app/convertor.ts:21",{"_index":47,"title":{},"body":{"classes/Convertor.html":{}}}],["mmd/src/app/convertor.ts:36",{"_index":60,"title":{},"body":{"classes/Convertor.html":{}}}],["mmd/src/app/exporter.ts",{"_index":100,"title":{},"body":{"classes/Exporter.html":{},"coverage.html":{}}}],["mmd/src/app/exporter.ts:10",{"_index":106,"title":{},"body":{"classes/Exporter.html":{}}}],["mmd/src/app/exporter.ts:24",{"_index":112,"title":{},"body":{"classes/Exporter.html":{}}}],["mmd/src/app/graph",{"_index":134,"title":{},"body":{"interfaces/GraphResult.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mmd/src/index.ts",{"_index":460,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mmdpath",{"_index":120,"title":{},"body":{"classes/Exporter.html":{}}}],["modifier",{"_index":273,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/typealiases.html":{}}}],["modules",{"_index":530,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["morph",{"_index":69,"title":{},"body":{"classes/Convertor.html":{},"interfaces/GraphResult.html":{},"dependencies.html":{}}}],["name",{"_index":52,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/LineRenderer.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"miscellaneous/functions.html":{}}}],["named_block_declaration",{"_index":503,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["namedblockdeclarationgraphblock",{"_index":71,"title":{},"body":{"classes/Convertor.html":{},"coverage.html":{}}}],["new",{"_index":49,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/LineRenderer.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["node",{"_index":187,"title":{},"body":{"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{}}}],["nodes",{"_index":161,"title":{},"body":{"classes/LineRenderer.html":{}}}],["none",{"_index":238,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["normal",{"_index":242,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["number",{"_index":146,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{}}}],["o",{"_index":270,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["ofkindsiblingcondition",{"_index":276,"title":{"classes/OfKindSiblingCondition.html":{}},"body":{"classes/OfKindSiblingCondition.html":{},"coverage.html":{}}}],["one",{"_index":137,"title":{},"body":{"interfaces/GraphResult.html":{},"classes/LineRenderer.html":{}}}],["optional",{"_index":54,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/LineRenderer.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":208,"title":{},"body":{"classes/LineRenderer.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["otherwise",{"_index":218,"title":{},"body":{"classes/LineRenderer.html":{}}}],["output",{"_index":104,"title":{},"body":{"classes/Exporter.html":{}}}],["outputrootpath",{"_index":108,"title":{},"body":{"classes/Exporter.html":{}}}],["overview",{"_index":531,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":362,"title":{"dependencies.html":{}},"body":{"classes/UuidBlockIdGenerator.html":{}}}],["package.json",{"_index":547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../block.kind.ts",{"_index":486,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["packages/.../include",{"_index":488,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["packages/.../index.ts",{"_index":537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../line",{"_index":490,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["packages/.../shape",{"_index":491,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["packages/ast",{"_index":6,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["parallel_block_declaration",{"_index":504,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["parallelblock",{"_index":94,"title":{},"body":{"classes/Convertor.html":{}}}],["parallelblockdeclarationgraphblock",{"_index":72,"title":{},"body":{"classes/Convertor.html":{},"coverage.html":{}}}],["parallelblockdeclarationgraphblock(this.idgenerator.generate",{"_index":95,"title":{},"body":{"classes/Convertor.html":{}}}],["paralleogram",{"_index":338,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["paralleogram_alt",{"_index":340,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["param",{"_index":77,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{}}}],["parameters",{"_index":51,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/LineRenderer.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"miscellaneous/functions.html":{}}}],["parent.graph",{"_index":420,"title":{},"body":{"coverage.html":{}}}],["parent_declaration",{"_index":500,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["parentclassesblock",{"_index":93,"title":{},"body":{"classes/Convertor.html":{}}}],["parentfunctionsblock",{"_index":91,"title":{},"body":{"classes/Convertor.html":{}}}],["parser",{"_index":74,"title":{},"body":{"classes/Convertor.html":{}}}],["parser/include",{"_index":448,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["parser/parser.ts",{"_index":456,"title":{},"body":{"coverage.html":{}}}],["path",{"_index":109,"title":{},"body":{"classes/Exporter.html":{},"dependencies.html":{}}}],["path.resolve(sourcefile.getdirectorypath",{"_index":121,"title":{},"body":{"classes/Exporter.html":{}}}],["point",{"_index":240,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["positive",{"_index":300,"title":{},"body":{"classes/PositiveSiblingCondition.html":{}}}],["positivesiblingcondition",{"_index":298,"title":{"classes/PositiveSiblingCondition.html":{}},"body":{"classes/PositiveSiblingCondition.html":{},"coverage.html":{}}}],["private",{"_index":38,"title":{},"body":{"classes/Convertor.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/OfKindSiblingCondition.html":{},"classes/ShapeRenderer.html":{}}}],["process",{"_index":57,"title":{},"body":{"classes/Convertor.html":{}}}],["process.cwd",{"_index":539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["program.opts",{"_index":542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":462,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["project(tsmorphoptions",{"_index":543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projectoptions",{"_index":544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properties",{"_index":37,"title":{},"body":{"classes/Convertor.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/OfKindSiblingCondition.html":{},"classes/ShapeRenderer.html":{}}}],["protected",{"_index":168,"title":{},"body":{"classes/LineRenderer.html":{}}}],["public",{"_index":41,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/PositiveSiblingCondition.html":{}}}],["query_handler",{"_index":514,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["queryhandler",{"_index":556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["randomuuid",{"_index":359,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{}}}],["randomuuid().replace",{"_index":363,"title":{},"body":{"classes/UuidBlockIdGenerator.html":{}}}],["readfilesync(path.resolve(__dirname",{"_index":546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["readonly",{"_index":39,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/LineRenderer.html":{},"classes/OfKindSiblingCondition.html":{},"classes/ShapeRenderer.html":{}}}],["record",{"_index":551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["render",{"_index":170,"title":{},"body":{"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{}}}],["render(text",{"_index":317,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["rendered",{"_index":133,"title":{},"body":{"classes/Exporter.html":{}}}],["renderer",{"_index":157,"title":{},"body":{"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{}}}],["renderer.ts",{"_index":155,"title":{},"body":{"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["renderer.ts:106",{"_index":228,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:116",{"_index":224,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:126",{"_index":226,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:136",{"_index":222,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:144",{"_index":207,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:173",{"_index":230,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:179",{"_index":232,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:192",{"_index":234,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:205",{"_index":206,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:209",{"_index":236,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:45",{"_index":189,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:49",{"_index":192,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:53",{"_index":205,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:57",{"_index":199,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:61",{"_index":203,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:63",{"_index":316,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["renderer.ts:65",{"_index":184,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:71",{"_index":319,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["renderer.ts:81",{"_index":211,"title":{},"body":{"classes/LineRenderer.html":{}}}],["renderer.ts:96",{"_index":220,"title":{},"body":{"classes/LineRenderer.html":{}}}],["repeat",{"_index":261,"title":{},"body":{"classes/LineRenderer.html":{}}}],["repeat(repeat",{"_index":263,"title":{},"body":{"classes/LineRenderer.html":{}}}],["repeat(this._linelength",{"_index":271,"title":{},"body":{"classes/LineRenderer.html":{}}}],["representing",{"_index":136,"title":{},"body":{"interfaces/GraphResult.html":{},"interfaces/SiblingCondition.html":{}}}],["represents",{"_index":156,"title":{},"body":{"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{}}}],["resolvedecoratortype",{"_index":452,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["resolvedecoratortype(decorators",{"_index":523,"title":{},"body":{"miscellaneous/functions.html":{}}}],["resolvefiletype",{"_index":453,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["resolvefiletype(analyzedclass",{"_index":526,"title":{},"body":{"miscellaneous/functions.html":{}}}],["resolving",{"_index":346,"title":{},"body":{"interfaces/SiblingCondition.html":{}}}],["responsible",{"_index":33,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{}}}],["result",{"_index":75,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"classes/LineRenderer.html":{}}}],["result.ts",{"_index":135,"title":{},"body":{"interfaces/GraphResult.html":{},"coverage.html":{}}}],["results",{"_index":27,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/UuidBlockIdGenerator.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":98,"title":{},"body":{"classes/Convertor.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["return_declaration",{"_index":505,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["returndeclarationgraphblock",{"_index":434,"title":{},"body":{"coverage.html":{}}}],["returns",{"_index":22,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/UuidBlockIdGenerator.html":{},"miscellaneous/functions.html":{}}}],["rhombus",{"_index":335,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["rhshead",{"_index":180,"title":{},"body":{"classes/LineRenderer.html":{}}}],["rhsid",{"_index":183,"title":{},"body":{"classes/LineRenderer.html":{}}}],["right",{"_index":188,"title":{},"body":{"classes/LineRenderer.html":{}}}],["root",{"_index":110,"title":{},"body":{"classes/Exporter.html":{}}}],["round",{"_index":321,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["round_edges",{"_index":323,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["service",{"_index":517,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["set",{"_index":212,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setconnectiondescription",{"_index":171,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setconnectiondescription(value",{"_index":209,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlhshead",{"_index":172,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlhshead(value",{"_index":219,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlinelength",{"_index":173,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlinelength(value",{"_index":221,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlinestyle",{"_index":174,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlinestyle(value",{"_index":223,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlinewidth",{"_index":175,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setlinewidth(value",{"_index":225,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setrhshead",{"_index":176,"title":{},"body":{"classes/LineRenderer.html":{}}}],["setrhshead(value",{"_index":227,"title":{},"body":{"classes/LineRenderer.html":{}}}],["shape",{"_index":318,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["shape.valueof().replace(shaperenderer.text_placeholder",{"_index":344,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["shaped",{"_index":326,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["shaperenderer",{"_index":306,"title":{"classes/ShapeRenderer.html":{}},"body":{"classes/ShapeRenderer.html":{},"coverage.html":{}}}],["shapes",{"_index":309,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["shared",{"_index":143,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{}}}],["sharp_edges",{"_index":324,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["sibling",{"_index":290,"title":{},"body":{"classes/OfKindSiblingCondition.html":{},"interfaces/SiblingCondition.html":{}}}],["sibling.blockkind);//sibling.blockkind",{"_index":296,"title":{},"body":{"classes/OfKindSiblingCondition.html":{}}}],["sibling.condition",{"_index":292,"title":{},"body":{"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{}}}],["siblingcondition",{"_index":280,"title":{"interfaces/SiblingCondition.html":{}},"body":{"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"interfaces/SiblingCondition.html":{},"coverage.html":{}}}],["siblings",{"_index":347,"title":{},"body":{"interfaces/SiblingCondition.html":{}}}],["side",{"_index":194,"title":{},"body":{"classes/LineRenderer.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["sourcefile",{"_index":45,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{}}}],["sourcefile.getbasenamewithoutextension",{"_index":122,"title":{},"body":{"classes/Exporter.html":{}}}],["sourcefile.getclasses",{"_index":86,"title":{},"body":{"classes/Convertor.html":{}}}],["sourcefile.getfunctions",{"_index":85,"title":{},"body":{"classes/Convertor.html":{}}}],["sourcefiles",{"_index":55,"title":{},"body":{"classes/Convertor.html":{}}}],["stadium",{"_index":325,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["stadium_shaped",{"_index":327,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["started",{"_index":528,"title":{"index.html":{}},"body":{}}],["statements",{"_index":369,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":313,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["string",{"_index":24,"title":{},"body":{"interfaces/BlockIdGenerator.html":{},"classes/Exporter.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"classes/UuidBlockIdGenerator.html":{}}}],["style",{"_index":200,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["subroutine",{"_index":328,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["supported",{"_index":308,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["switch",{"_index":264,"title":{},"body":{"classes/LineRenderer.html":{}}}],["table",{"_index":466,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":465,"title":{},"body":{"coverage.html":{}}}],["tested",{"_index":354,"title":{},"body":{"interfaces/SiblingCondition.html":{}}}],["text",{"_index":315,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["text_declaration",{"_index":506,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["text_placeholder",{"_index":314,"title":{},"body":{"classes/ShapeRenderer.html":{}}}],["textgraphblock",{"_index":436,"title":{},"body":{"coverage.html":{}}}],["thick",{"_index":244,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["this._blockkinds",{"_index":294,"title":{},"body":{"classes/OfKindSiblingCondition.html":{}}}],["this._blockkinds.some((block",{"_index":295,"title":{},"body":{"classes/OfKindSiblingCondition.html":{}}}],["this._connectiondescription",{"_index":246,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this._connectiondescription}${value",{"_index":247,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this._lhshead",{"_index":248,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this._linelength",{"_index":252,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this._linestyle",{"_index":250,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this._linewidth",{"_index":251,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this._rhshead",{"_index":249,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.blockkind",{"_index":297,"title":{},"body":{"classes/OfKindSiblingCondition.html":{}}}],["this.codeparser",{"_index":79,"title":{},"body":{"classes/Convertor.html":{}}}],["this.codeparser.processclasses(classes",{"_index":90,"title":{},"body":{"classes/Convertor.html":{}}}],["this.codeparser.processfunctions(functions",{"_index":88,"title":{},"body":{"classes/Convertor.html":{}}}],["this.counter",{"_index":152,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{}}}],["this.dot",{"_index":257,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.idgenerator.generate",{"_index":92,"title":{},"body":{"classes/Convertor.html":{}}}],["this.isdotted",{"_index":256,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.lhshead",{"_index":254,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.lhsid",{"_index":253,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.linepiece",{"_index":255,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.rhshead",{"_index":259,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.rhsid",{"_index":260,"title":{},"body":{"classes/LineRenderer.html":{}}}],["this.sourcefiles",{"_index":83,"title":{},"body":{"classes/Convertor.html":{}}}],["through",{"_index":62,"title":{},"body":{"classes/Convertor.html":{}}}],["throw_declaration",{"_index":507,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["throwdeclarationgraphblock",{"_index":438,"title":{},"body":{"coverage.html":{}}}],["tmplinelength",{"_index":258,"title":{},"body":{"classes/LineRenderer.html":{}}}],["trapezoid",{"_index":342,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["trapezoid_alt",{"_index":343,"title":{},"body":{"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["true",{"_index":215,"title":{},"body":{"classes/LineRenderer.html":{},"classes/PositiveSiblingCondition.html":{}}}],["try_catch_declaration",{"_index":508,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["trycatchdeclarationgraphblock",{"_index":441,"title":{},"body":{"coverage.html":{}}}],["ts",{"_index":68,"title":{},"body":{"classes/Convertor.html":{},"interfaces/GraphResult.html":{},"dependencies.html":{}}}],["tslib",{"_index":482,"title":{},"body":{"dependencies.html":{}}}],["tsmorphoptions",{"_index":463,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["two",{"_index":160,"title":{},"body":{"classes/LineRenderer.html":{}}}],["type",{"_index":53,"title":{},"body":{"classes/Convertor.html":{},"classes/Exporter.html":{},"interfaces/GraphResult.html":{},"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/OfKindSiblingCondition.html":{},"classes/PositiveSiblingCondition.html":{},"classes/ShapeRenderer.html":{},"interfaces/SiblingCondition.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":534,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["undefined",{"_index":525,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unique",{"_index":25,"title":{},"body":{"interfaces/BlockIdGenerator.html":{}}}],["used",{"_index":351,"title":{},"body":{"interfaces/SiblingCondition.html":{}}}],["utf",{"_index":130,"title":{},"body":{"classes/Exporter.html":{},"miscellaneous/variables.html":{}}}],["uuidblockidgenerator",{"_index":356,"title":{"classes/UuidBlockIdGenerator.html":{}},"body":{"classes/UuidBlockIdGenerator.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["valid",{"_index":355,"title":{},"body":{"interfaces/SiblingCondition.html":{}}}],["value",{"_index":148,"title":{},"body":{"classes/IncrementalBlockIdGenerator.html":{},"classes/LineRenderer.html":{},"classes/ShapeRenderer.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":377,"title":{},"body":{"coverage.html":{}}}],["variable_declaration",{"_index":509,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["variable_list_declaration",{"_index":510,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["variabledeclarationgraphblock",{"_index":447,"title":{},"body":{"coverage.html":{}}}],["variabledeclarationlistgraphblock",{"_index":446,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":536,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":464,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":115,"title":{},"body":{"classes/Exporter.html":{}}}],["whether",{"_index":353,"title":{},"body":{"interfaces/SiblingCondition.html":{},"miscellaneous/functions.html":{}}}],["width",{"_index":204,"title":{},"body":{"classes/LineRenderer.html":{},"miscellaneous/enumerations.html":{}}}],["writefilesync",{"_index":116,"title":{},"body":{"classes/Exporter.html":{}}}],["writefilesync(mmdpath",{"_index":128,"title":{},"body":{"classes/Exporter.html":{}}}],["x",{"_index":268,"title":{},"body":{"classes/LineRenderer.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/BlockIdGenerator.html":{"url":"interfaces/BlockIdGenerator.html","title":"interface - BlockIdGenerator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BlockIdGenerator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/block-id-generator/block-id-generator.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface describing method for GraphBlock ID generator\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        generate\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generate\n                        \n                    \n                \n            \n            \n                \ngenerate()\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/block-id-generator/block-id-generator.ts:10\n                \n            \n\n\n            \n                \n                    Generates ID.\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Unique ID.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface BlockIdGenerator {\n  /**\n   * Generates ID.\n   *\n   * @returns {string} Unique ID.\n   */\n  generate(): string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Convertor.html":{"url":"classes/Convertor.html","title":"class - Convertor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Convertor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/convertor.ts\n        \n\n\n            \n                Description\n            \n            \n                Class responsible for converting defined source files to graph.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                codeParser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                convert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sourceFiles: SourceFile[], idGenerator: BlockIdGenerator)\n                    \n                \n                        \n                            \n                                Defined in packages/ast-to-mmd/src/app/convertor.ts:21\n                            \n                        \n\n                \n                    \n                            Creates new instance of Convertor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sourceFiles\n                                                  \n                                                        \n                                                                    SourceFile[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                []SourceFile Array of source files to process.\n\n                                                        \n                                                \n                                                \n                                                        idGenerator\n                                                  \n                                                        \n                                                                        BlockIdGenerator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                BlockIdGenerator Generator of block IDs.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        codeParser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CodeParser\n\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/convertor.ts:21\n                        \n                    \n\n            \n                \n                    Instance of CodeParser\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        convert\n                        \n                    \n                \n            \n            \n                \n                    \n                    convert()\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/convertor.ts:36\n                \n            \n\n\n            \n                \n                    Iterates through source files and generates graph for each file.\n\n\n                    \n                        Returns :         GraphResult[]\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ClassDeclaration, FunctionDeclaration, SourceFile } from 'ts-morph';\n\nimport { BlockIdGenerator } from './block-id-generator';\nimport {\n  GraphBlock,\n  GraphParentGraphBlock,\n  NamedBlockDeclarationGraphBlock,\n  ParallelBlockDeclarationGraphBlock,\n} from './graph-blocks';\nimport { CodeParser } from './graph-parser';\nimport { GraphResult } from './graph-result';\n\n/**\n * Class responsible for converting defined source files to graph.\n */\nexport class Convertor {\n\n  /**\n   * Instance of {@link CodeParser}\n   */\n  private readonly codeParser: CodeParser;\n\n  /**\n   * Creates new instance of {@link Convertor}.\n   *\n   * @param sourceFiles {@link SourceFile[]} Array of source files to process.\n   * @param idGenerator {@link BlockIdGenerator} Generator of block IDs.\n   */\n  constructor(private readonly sourceFiles: SourceFile[], private readonly idGenerator: BlockIdGenerator) {\n    this.codeParser = new CodeParser(idGenerator);\n  }\n\n  /**\n   * Iterates through source files and generates graph for each file.\n   */\n  public convert(): GraphResult[] {\n    const graphs: GraphResult[] = [];\n    for (const sourceFile of this.sourceFiles) {\n      const functions: FunctionDeclaration[] = sourceFile.getFunctions();\n      const classes: ClassDeclaration[] = sourceFile.getClasses();\n\n      const functionBlocks: GraphBlock = this.codeParser.processFunctions(functions);\n      const classBlocks: GraphBlock = this.codeParser.processClasses(classes);\n\n      const parentFunctionsBlock: GraphBlock = new NamedBlockDeclarationGraphBlock(\n        this.idGenerator.generate(),\n        [functionBlocks],\n        'Functions'\n      );\n      const parentClassesBlock: GraphBlock = new NamedBlockDeclarationGraphBlock(\n        this.idGenerator.generate(),\n        [classBlocks],\n        'Classes'\n      );\n      const parallelBlock: GraphBlock = new ParallelBlockDeclarationGraphBlock(this.idGenerator.generate(), [\n        parentFunctionsBlock,\n        parentClassesBlock,\n      ]);\n\n      graphs.push({\n        sourceFile,\n        graph: new GraphParentGraphBlock(this.idGenerator.generate(), parallelBlock),\n      });\n    }\n\n    return graphs;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Exporter.html":{"url":"classes/Exporter.html","title":"class - Exporter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Exporter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/exporter.ts\n        \n\n\n            \n                Description\n            \n            \n                Class responsible for exporting generated graph to correct output.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                export\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(outputRootPath: string)\n                    \n                \n                        \n                            \n                                Defined in packages/ast-to-mmd/src/app/exporter.ts:10\n                            \n                        \n\n                \n                    \n                            Initialize new instance of Exporter.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        outputRootPath\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Path to root of output path.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        export\n                        \n                    \n                \n            \n            \n                \n                    \n                    export(graphResults: GraphResult[])\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/exporter.ts:24\n                \n            \n\n\n            \n                \n                    Exports graph results to defined output path.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    graphResults\n                                    \n                                                GraphResult[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        []GraphResult Graph results for export.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { writeFileSync } from 'fs';\nimport * as path from 'path';\n\nimport { GraphResult } from './graph-result';\n\n\n/**\n * Class responsible for exporting generated graph to correct output.\n */\nexport class Exporter {\n\n  /**\n   * Initialize new instance of {@link Exporter}.\n   *\n   * @param outputRootPath {string} Path to root of output path.\n   */\n  constructor(private readonly outputRootPath: string) {}\n\n  /**\n   * Exports graph results to defined output path.\n   *\n   * @param graphResults {@link GraphResult[]} Graph results for export.\n   */\n  public export(graphResults: GraphResult[]): void {\n    console.log(`Found: ${graphResults.length} graphs.`);\n\n    for (const {graph, sourceFile} of graphResults) {\n      const mmdPath = path.resolve(sourceFile.getDirectoryPath(), sourceFile.getBaseNameWithoutExtension()) + '.mmd';\n      console.log(`Writing content with graph into the file: ${mmdPath}.`);\n      const fileContent = graph.render(0);\n      writeFileSync(mmdPath, fileContent, { encoding: 'utf-8' });\n      console.log('\\tGraph rendered into the file.');\n    }\n\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphResult.html":{"url":"interfaces/GraphResult.html","title":"interface - GraphResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GraphResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/graph-result.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing one Graph result\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            graph\n                                        \n                                \n                                \n                                        \n                                            sourceFile\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        graph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        graph:         GraphBlock\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GraphBlock\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceFile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sourceFile:     SourceFile\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SourceFile\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SourceFile } from 'ts-morph';\n\nimport { GraphBlock } from './graph-blocks';\n\n/**\n * Interface representing one Graph result\n */\nexport interface GraphResult {\n  sourceFile: SourceFile;\n  graph: GraphBlock;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IncrementalBlockIdGenerator.html":{"url":"classes/IncrementalBlockIdGenerator.html","title":"class - IncrementalBlockIdGenerator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IncrementalBlockIdGenerator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/block-id-generator/incremental-block-id-generator.ts\n        \n\n\n            \n                Description\n            \n            \n                Implementation of BlockIdGenerator\nThe ID is generated by linear incrementation of shared counter.\n\n            \n\n\n            \n                Implements\n            \n            \n                            BlockIdGenerator\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                counter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        counter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/block-id-generator/incremental-block-id-generator.ts:13\n                        \n                    \n\n            \n                \n                    Counter of generated IDs\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generate\n                        \n                    \n                \n            \n            \n                \ngenerate()\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/block-id-generator/incremental-block-id-generator.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BlockIdGenerator } from './block-id-generator';\n\n/**\n * Implementation of {@link BlockIdGenerator}\n *\n *\n * The ID is generated by linear incrementation of shared counter.\n */\nexport class IncrementalBlockIdGenerator implements BlockIdGenerator {\n  /**\n   * Counter of generated IDs\n   */\n  private counter = 0;\n\n  generate(): string {\n    return `${this.counter++}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LineRenderer.html":{"url":"classes/LineRenderer.html","title":"class - LineRenderer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LineRenderer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts\n        \n\n\n            \n                Description\n            \n            \n                Class represents renderer of line between two nodes.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _connectionDescription\n                            \n                            \n                                    Private\n                                _lhsHead\n                            \n                            \n                                    Private\n                                _lineLength\n                            \n                            \n                                    Private\n                                _lineStyle\n                            \n                            \n                                    Private\n                                _lineWidth\n                            \n                            \n                                    Private\n                                _rhsHead\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                dot\n                            \n                            \n                                render\n                            \n                            \n                                setConnectionDescription\n                            \n                            \n                                setLhsHead\n                            \n                            \n                                setLineLength\n                            \n                            \n                                setLineStyle\n                            \n                            \n                                setLineWidth\n                            \n                            \n                                setRhsHead\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    linePiece\n                                \n                                \n                                    lhsHead\n                                \n                                \n                                    rhsHead\n                                \n                                \n                                    isDotted\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(lhsId: string, rhsId: string)\n                    \n                \n                        \n                            \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:65\n                            \n                        \n\n                \n                    \n                            Creates new instance of the LineRenderer.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        lhsId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ID of left node.\n\n                                                        \n                                                \n                                                \n                                                        rhsId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ID of right node.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _connectionDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:45\n                        \n                    \n\n            \n                \n                    Optional description on the line.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _lhsHead\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LINE_HEAD\n\n                    \n                \n                \n                    \n                        Default value : LINE_HEAD.NONE\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:49\n                        \n                    \n\n            \n                \n                    Type of head on left side of the line.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _lineLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:65\n                        \n                    \n\n            \n                \n                    Length of the line.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _lineStyle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LINE_STYLE\n\n                    \n                \n                \n                    \n                        Default value : LINE_STYLE.NORMAL\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:57\n                        \n                    \n\n            \n                \n                    LINE_STYLE Style of the line.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _lineWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LINE_WIDTH\n\n                    \n                \n                \n                    \n                        Default value : LINE_WIDTH.NORMAL\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:61\n                        \n                    \n\n            \n                \n                    LINE_WIDTH Width of the line.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _rhsHead\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LINE_HEAD\n\n                    \n                \n                \n                    \n                        Default value : LINE_HEAD.NONE\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:53\n                        \n                    \n\n            \n                \n                    Type of head on right side of the line.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        dot\n                        \n                    \n                \n            \n            \n                \n                    \n                    dot()\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:205\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        render\n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:144\n                \n            \n\n\n            \n                \n                    Render line with defined options.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setConnectionDescription\n                        \n                    \n                \n            \n            \n                \nsetConnectionDescription(value: string, append)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:81\n                \n            \n\n\n            \n                \n                    Set connection description on the line.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Connection description.\n\n                                    \n                                \n                                \n                                    append\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        True, when description should be appended to existing one, False otherwise.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LineRenderer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLhsHead\n                        \n                    \n                \n            \n            \n                \nsetLhsHead(value: LINE_HEAD)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:96\n                \n            \n\n\n            \n                \n                    Set type of head on left side the line.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                LINE_HEAD\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        LINE_HEAD Type of head.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LineRenderer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLineLength\n                        \n                    \n                \n            \n            \n                \nsetLineLength(value: number)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:136\n                \n            \n\n\n            \n                \n                    Set length of the line.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Length of the line.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LineRenderer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLineStyle\n                        \n                    \n                \n            \n            \n                \nsetLineStyle(value: LINE_STYLE)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:116\n                \n            \n\n\n            \n                \n                    Set style of the line.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                LINE_STYLE\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        LINE_STYLE Style of the line.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LineRenderer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLineWidth\n                        \n                    \n                \n            \n            \n                \nsetLineWidth(value: LINE_WIDTH)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:126\n                \n            \n\n\n            \n                \n                    Set width of the line.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                LINE_WIDTH\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        LINE_WIDTH Width of the line.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LineRenderer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRhsHead\n                        \n                    \n                \n            \n            \n                \nsetRhsHead(value: LINE_HEAD)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:106\n                \n            \n\n\n            \n                \n                    Set type of head on right side the line.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                LINE_HEAD\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        LINE_HEAD Type of head.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LineRenderer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        linePiece\n                    \n                \n\n                \n                    \n                        getlinePiece()\n                    \n                \n                            \n                                \n                                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:173\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        lhsHead\n                    \n                \n\n                \n                    \n                        getlhsHead()\n                    \n                \n                            \n                                \n                                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:179\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        rhsHead\n                    \n                \n\n                \n                    \n                        getrhsHead()\n                    \n                \n                            \n                                \n                                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:192\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isDotted\n                    \n                \n\n                \n                    \n                        getisDotted()\n                    \n                \n                            \n                                \n                                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts:209\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        export enum LINE_HEAD {\n  NONE,\n  ARROW,\n  POINT,\n  CROSS,\n}\n\n/**\n * Style of the line.\n *\n * - NORMAL: ---\n * - DOTTED: ...\n */\nexport enum LINE_STYLE {\n  NORMAL,\n  DOTTED,\n}\n\n/**\n * Width of the line.\n *\n * - NORMAL:  ---\n * - THICK: ===\n */\nexport enum LINE_WIDTH {\n  NORMAL,\n  THICK,\n}\n\n/**\n * Class represents renderer of line between two nodes.\n */\nexport class LineRenderer {\n  /**\n   * Optional description on the line.\n   */\n  private _connectionDescription?: string;\n  /**\n   * Type of head on left side of the line.\n   */\n  private _lhsHead: LINE_HEAD = LINE_HEAD.NONE;\n  /**\n   * Type of head on right side of the line.\n   */\n  private _rhsHead: LINE_HEAD = LINE_HEAD.NONE;\n  /**\n   * {@link LINE_STYLE} Style of the line.\n   */\n  private _lineStyle: LINE_STYLE = LINE_STYLE.NORMAL;\n  /**\n   * {@link LINE_WIDTH} Width of the line.\n   */\n  private _lineWidth: LINE_WIDTH = LINE_WIDTH.NORMAL;\n  /**\n   * Length of the line.\n   */\n  private _lineLength = 1;\n\n  /**\n   * Creates new instance of the {@link LineRenderer}.\n   *\n   * @param lhsId {string} ID of left node.\n   * @param rhsId {string} ID of right node.\n   */\n  constructor(private readonly lhsId: string, private readonly rhsId: string) {}\n\n  /**\n   * Set connection description on the line.\n   *\n   * @param value {string} Connection description.\n   * @param append {boolean} True, when description should be appended to existing one, False otherwise.\n   */\n  setConnectionDescription(value: string, append = false): LineRenderer {\n    if (!this._connectionDescription) {\n      this._connectionDescription = value;\n      return this;\n    }\n\n    this._connectionDescription = append ? `${this._connectionDescription}${value}` : value;\n    return this;\n  }\n\n  /**\n   * Set type of head on left side the line.\n   *\n   * @param value {@link LINE_HEAD} Type of head.\n   */\n  setLhsHead(value: LINE_HEAD): LineRenderer {\n    this._lhsHead = value;\n    return this;\n  }\n\n  /**\n   * Set type of head on right side the line.\n   *\n   * @param value {@link LINE_HEAD} Type of head.\n   */\n  setRhsHead(value: LINE_HEAD): LineRenderer {\n    this._rhsHead = value;\n    return this;\n  }\n\n  /**\n   * Set style of the line.\n   *\n   * @param value {@link LINE_STYLE} Style of the line.\n   */\n  setLineStyle(value: LINE_STYLE): LineRenderer {\n    this._lineStyle = value;\n    return this;\n  }\n\n  /**\n   * Set width of the line.\n   *\n   * @param value {@link LINE_WIDTH} Width of the line.\n   */\n  setLineWidth(value: LINE_WIDTH): LineRenderer {\n    this._lineWidth = value;\n    return this;\n  }\n\n  /**\n   * Set length of the line.\n   *\n   * @param value {number} Length of the line.\n   */\n  setLineLength(value: number): LineRenderer {\n    this._lineLength = value;\n    return this;\n  }\n\n  /**\n   * Render line with defined options.\n   */\n  render(): string {\n    let result = `${this.lhsId} `;\n\n    result += this.lhsHead;\n    result += this.linePiece;\n    if (this.isDotted) result += this.dot();\n\n    if (this._connectionDescription) {\n      if (this.isDotted) {\n        result += ` ${this._connectionDescription} `;\n      } else {\n        result += `${this.linePiece} ${this._connectionDescription} ${this.linePiece}`;\n      }\n    } else {\n      const tmpLineLength = this._lineLength;\n      this._lineLength = 1;\n      result += this.linePiece;\n      this._lineLength = tmpLineLength;\n    }\n\n    if (this.isDotted) result += this.dot();\n    result += this.linePiece;\n    result += this.rhsHead;\n\n    result += ` ${this.rhsId}`;\n\n    return result;\n  }\n\n  protected get linePiece(): string {\n    let repeat = this._lineLength;\n    if (this.isDotted) repeat = 1;\n    return (this._lineWidth === LINE_WIDTH.THICK ? '=' : '-').repeat(repeat);\n  }\n\n  protected get lhsHead(): string {\n    switch (this._lhsHead) {\n      case LINE_HEAD.ARROW:\n        return '';\n      case LINE_HEAD.CROSS:\n        return 'x';\n      case LINE_HEAD.POINT:\n        return 'o';\n      default:\n        return '';\n    }\n  }\n\n  protected dot(): string {\n    return '.'.repeat(this._lineLength);\n  }\n\n  protected get isDotted(): boolean {\n    return this._lineStyle === LINE_STYLE.DOTTED;\n  }\n}\n\n/**\n * Modifier of existing {@link LineRenderer}\n */\nexport type LineRendererModifier = (builder: LineRenderer) => LineRenderer;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OfKindSiblingCondition.html":{"url":"classes/OfKindSiblingCondition.html","title":"class - OfKindSiblingCondition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OfKindSiblingCondition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/conditions/impl/of-kind.sibling-condition.ts\n        \n\n\n            \n                Description\n            \n            \n                Implementation of SiblingCondition which checks BlockKind.\n\n            \n\n\n            \n                Implements\n            \n            \n                            SiblingCondition\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _blockKinds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isValid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(blockKinds: BlockKind[])\n                    \n                \n                        \n                            \n                                Defined in packages/ast-to-mmd/src/app/conditions/impl/of-kind.sibling-condition.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        blockKinds\n                                                  \n                                                        \n                                                                        BlockKind[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _blockKinds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BlockKind[]\n\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/conditions/impl/of-kind.sibling-condition.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isValid\n                        \n                    \n                \n            \n            \n                \nisValid(sibling: GraphBlock)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/conditions/impl/of-kind.sibling-condition.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sibling\n                                    \n                                                GraphBlock\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BlockKind } from '../../block.kind';\nimport { GraphBlock } from '../../graph-blocks';\nimport { SiblingCondition } from '../sibling.condition';\n\n/**\n * Implementation of {@link SiblingCondition} which checks {@link BlockKind}.\n */\nexport class OfKindSiblingCondition implements SiblingCondition {\n\n  private readonly _blockKinds: BlockKind[];\n\n  constructor(...blockKinds: BlockKind[]) {\n    this._blockKinds = blockKinds;\n  }\n\n  isValid(sibling: GraphBlock): boolean {\n    return this._blockKinds.some((block: BlockKind) => block === sibling.blockKind);//sibling.blockKind === this.blockKind;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PositiveSiblingCondition.html":{"url":"classes/PositiveSiblingCondition.html","title":"class - PositiveSiblingCondition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PositiveSiblingCondition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/conditions/impl/positive.sibling-condition.ts\n        \n\n\n            \n                Description\n            \n            \n                Positive implementation of SiblingCondition.\nThe condition is always met.\n\n            \n\n\n            \n                Implements\n            \n            \n                            SiblingCondition\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isValid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isValid\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValid(_sibling: GraphBlock)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/conditions/impl/positive.sibling-condition.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _sibling\n                                    \n                                                GraphBlock\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { GraphBlock } from '../../graph-blocks';\nimport { SiblingCondition } from '../sibling.condition';\n\n/**\n * Positive implementation of {@link SiblingCondition}.\n * The condition is always met.\n */\nexport class PositiveSiblingCondition implements SiblingCondition {\n\n  public isValid(_sibling: GraphBlock): boolean {\n    return true;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShapeRenderer.html":{"url":"classes/ShapeRenderer.html","title":"class - ShapeRenderer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShapeRenderer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/graph-blocks/renderer/shape-renderer.ts\n        \n\n\n            \n                Description\n            \n            \n                Class represents renderer of supported shapes by Mermaid.js\nhttps://mermaid-js.github.io/mermaid/#/flowchart?id=node-shapes\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                TEXT_PLACEHOLDER\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        TEXT_PLACEHOLDER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '$TEXT$'\n                    \n                \n                    \n                        \n                                Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/shape-renderer.ts:63\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        render\n                        \n                    \n                \n            \n            \n                \nrender(text: string, shape: Shape)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/graph-blocks/renderer/shape-renderer.ts:71\n                \n            \n\n\n            \n                \n                    Render defined shape with text.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Text in the shape.\n\n                                    \n                                \n                                \n                                    shape\n                                    \n                                                Shape\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Shape Type of the shape.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export enum Shape {\n  DEFAULT = '$TEXT$',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-node-with-round-edges}\n   */\n  ROUND_EDGES = '($TEXT$)',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-node-with-text}\n   */\n  SHARP_EDGES = '[$TEXT$]',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-stadium-shaped-node}\n   */\n  STADIUM_SHAPED = '([$TEXT$])',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-node-in-a-subroutine-shape}\n   */\n  SUBROUTINE = '[[$TEXT$]]',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-node-in-a-cylindrical-shape}\n   */\n  CYLINDER = '[($TEXT$)]',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-node-in-the-form-of-a-circle}\n   */\n  CIRCLE = '(($TEXT$))',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-node-in-an-asymmetric-shape}\n   */\n  ASYMETRIC_RIGHT = '>$TEXT$]',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-node-rhombus}\n   */\n  RHOMBUS = '{$TEXT$}',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=a-hexagon-node}\n   */\n  HEXAGON = '{{$TEXT$}}',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=parallelogram}\n   */\n  PARALLEOGRAM = '[/$TEXT$/]',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=parallelogram-alt}\n   */\n  PARALLEOGRAM_ALT = '[\\\\$TEXT$\\\\]',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=trapezoid}\n   */\n  TRAPEZOID = '[/$TEXT$\\\\]',\n  /**\n   * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=trapezoid-alt}\n   */\n  TRAPEZOID_ALT = '[\\\\$TEXT$/]',\n}\n\n/**\n * Class represents renderer of supported shapes by Mermaid.js\n *\n * {@link https://mermaid-js.github.io/mermaid/#/flowchart?id=node-shapes}\n */\nexport class ShapeRenderer {\n  private static readonly TEXT_PLACEHOLDER = '$TEXT$';\n\n  /**\n   * Render defined shape with text.\n   *\n   * @param text {string} Text in the shape.\n   * @param shape {@link Shape} Type of the shape.\n   */\n  render(text: string, shape: Shape): string {\n    return shape.valueOf().replace(ShapeRenderer.TEXT_PLACEHOLDER, `\"${text}\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SiblingCondition.html":{"url":"interfaces/SiblingCondition.html","title":"interface - SiblingCondition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SiblingCondition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/conditions/sibling.condition.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing condition for resolving siblings of defined child;\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        isValid\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isValid\n                        \n                    \n                \n            \n            \n                \nisValid(sibling: GraphBlock)\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/conditions/sibling.condition.ts:13\n                \n            \n\n\n            \n                \n                    Based on used condition is checked whether the tested sibling is valid or not.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sibling\n                                    \n                                                GraphBlock\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        GraphBlock Tested sibling.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { GraphBlock } from '../graph-blocks';\n\n/**\n * Interface representing condition for resolving siblings of defined child;\n */\nexport interface SiblingCondition {\n\n  /**\n   * Based on used condition is checked whether the tested sibling is valid or not.\n   *\n   * @param sibling {@link GraphBlock} Tested sibling.\n   */\n  isValid(sibling: GraphBlock): boolean;\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UuidBlockIdGenerator.html":{"url":"classes/UuidBlockIdGenerator.html","title":"class - UuidBlockIdGenerator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UuidBlockIdGenerator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ast-to-mmd/src/app/block-id-generator/uuid-block-id-generator.ts\n        \n\n\n            \n                Description\n            \n            \n                Implementation of BlockIdGenerator\nThe ID is generated by calling randomUUID function from 'crypto'\npackage\n\n            \n\n\n            \n                Implements\n            \n            \n                            BlockIdGenerator\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generate\n                        \n                    \n                \n            \n            \n                \ngenerate()\n                \n            \n\n\n            \n                \n                    Defined in packages/ast-to-mmd/src/app/block-id-generator/uuid-block-id-generator.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { randomUUID } from 'crypto';\n\nimport { BlockIdGenerator } from './block-id-generator';\n\n/**\n * Implementation of {@link BlockIdGenerator}\n *\n *\n * The ID is generated by calling {@link randomUUID} function from 'crypto'\n * package\n */\nexport class UuidBlockIdGenerator implements BlockIdGenerator {\n  generate(): string {\n    return randomUUID().replace(/-/g, '_');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                packages/ast-to-mmd/src/app/block-id-generator/block-id-generator.ts\n            \n            interface\n            BlockIdGenerator\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/block-id-generator/incremental-block-id-generator.ts\n            \n            class\n            IncrementalBlockIdGenerator\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/block-id-generator/uuid-block-id-generator.ts\n            \n            class\n            UuidBlockIdGenerator\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/block.kind.ts\n            \n            variable\n            CYCLE_BLOCK_KIND\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/conditions/impl/of-kind.sibling-condition.ts\n            \n            class\n            OfKindSiblingCondition\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/conditions/impl/positive.sibling-condition.ts\n            \n            class\n            PositiveSiblingCondition\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/conditions/sibling.condition.ts\n            \n            interface\n            SiblingCondition\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/convertor.ts\n            \n            class\n            Convertor\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/exporter.ts\n            \n            class\n            Exporter\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/base-cycle-declaration-graph.block.ts\n            \n            class\n            BaseCycleDeclarationGraphBlock\n            \n                62 %\n                (23/37)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/base-exit-declaration.graph-block.ts\n            \n            class\n            BaseExitDeclarationGraphBlock\n            \n                86 %\n                (25/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/binary-expression-declaration.graph-block.ts\n            \n            class\n            BinaryExpressionDeclarationGraphBlock\n            \n                82 %\n                (24/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/block-declaration.graph-block.ts\n            \n            class\n            BlockDeclarationGraphBlock\n            \n                74 %\n                (23/31)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/break-declaration.graph-block.ts\n            \n            class\n            BreakDeclarationGraphBlock\n            \n                82 %\n                (24/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/continue-declaration.graph-block.ts\n            \n            class\n            ContinueDeclarationGraphBlock\n            \n                82 %\n                (24/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/empty.graph-block.ts\n            \n            class\n            EmptyGraphBlock\n            \n                82 %\n                (24/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/for-declaration.graph-block.ts\n            \n            class\n            ForDeclarationGraphBlock\n            \n                62 %\n                (23/37)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/for-in-declaration.graph-block.ts\n            \n            class\n            ForInDeclarationGraphBlock\n            \n                62 %\n                (23/37)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/for-of-declaration.graph-block.ts\n            \n            class\n            ForOfDeclarationGraphBlock\n            \n                62 %\n                (23/37)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/for-x-declaration.graph-block.ts\n            \n            class\n            ForXDeclarationGraphBlock\n            \n                62 %\n                (23/37)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/graph-block.ts\n            \n            class\n            GraphBlock\n            \n                93 %\n                (27/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/graph-parent.graph-block.ts\n            \n            class\n            GraphParentGraphBlock\n            \n                74 %\n                (23/31)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/if-else-declaration.graph-block.ts\n            \n            class\n            IfElseDeclarationGraphBlock\n            \n                60 %\n                (23/38)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/method-call.graph-block.ts\n            \n            class\n            MethodCallGraphBlock\n            \n                82 %\n                (24/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/named-block-declaration.graph-block.ts\n            \n            class\n            NamedBlockDeclarationGraphBlock\n            \n                71 %\n                (23/32)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/parallel-block-declaration.graph-block.ts\n            \n            class\n            ParallelBlockDeclarationGraphBlock\n            \n                74 %\n                (23/31)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts\n            \n            class\n            LineRenderer\n            \n                93 %\n                (15/16)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/renderer/shape-renderer.ts\n            \n            class\n            ShapeRenderer\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/return-declaration.graph-block.ts\n            \n            class\n            ReturnDeclarationGraphBlock\n            \n                82 %\n                (24/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/text.graph-block.ts\n            \n            class\n            TextGraphBlock\n            \n                82 %\n                (24/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/throw-declaration.graph-block.ts\n            \n            class\n            ThrowDeclarationGraphBlock\n            \n                82 %\n                (24/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/try-catch-declaration.graph-block.ts\n            \n            class\n            TryCatchDeclarationGraphBlock\n            \n                55 %\n                (24/43)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/variable-declaration-list.graph-block.ts\n            \n            class\n            VariableDeclarationListGraphBlock\n            \n                82 %\n                (24/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-blocks/variable-declaration.graph-block.ts\n            \n            class\n            VariableDeclarationGraphBlock\n            \n                82 %\n                (24/29)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-parser/include-file.ts\n            \n            function\n            includeFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-parser/include-file.ts\n            \n            function\n            resolveDecoratorType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-parser/include-file.ts\n            \n            function\n            resolveFileType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-parser/include-file.ts\n            \n            variable\n            decoratorTypeMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-parser/include-file.ts\n            \n            variable\n            fileTypeMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-parser/parser.ts\n            \n            class\n            CodeParser\n            \n                100 %\n                (26/26)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/app/graph-result.ts\n            \n            interface\n            GraphResult\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            convertor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            cwd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            exporter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            graphResults\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            idGenerator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            options\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            project\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            tsMorphOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ast-to-mmd/src/index.ts\n            \n            variable\n            version\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @mermaid-js/mermaid-cli : ^8.13.10\n        \n            chalk : ^5.0.0\n        \n            clear : ^0.1.0\n        \n            commander : ^9.0.0\n        \n            figlet : ^1.5.2\n        \n            path : ^0.12.7\n        \n            ts-morph : ^13.0.3\n        \n            tslib : ^2.0.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BlockKind   (packages/.../block.kind.ts)\n                        \n                        \n                            DecoratorType   (packages/.../include-file.ts)\n                        \n                        \n                            FileType   (packages/.../include-file.ts)\n                        \n                        \n                            LINE_HEAD   (packages/.../line-renderer.ts)\n                        \n                        \n                            LINE_STYLE   (packages/.../line-renderer.ts)\n                        \n                        \n                            LINE_WIDTH   (packages/.../line-renderer.ts)\n                        \n                        \n                            Shape   (packages/.../shape-renderer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/ast-to-mmd/src/app/block.kind.ts\n    \n        \n            \n                \n                    \n                        \n                        BlockKind\n                    \n                \n                        \n                            \n                                 BINARY_EXPRESSION_DECLARATION\n                            \n                        \n                        \n                            \n                                 BLOCK_DECLARATION\n                            \n                        \n                        \n                            \n                                 BREAK_DECLARATION\n                            \n                        \n                        \n                            \n                                 CONTINUE_DECLARATION\n                            \n                        \n                        \n                            \n                                 EMPTY_DECLARATION\n                            \n                        \n                        \n                            \n                                 FOR_DECLARATION\n                            \n                        \n                        \n                            \n                                 FOR_IN_DECLARATION\n                            \n                        \n                        \n                            \n                                 FOR_OF_DECLARATION\n                            \n                        \n                        \n                            \n                                 PARENT_DECLARATION\n                            \n                        \n                        \n                            \n                                 IF_ELSE_DECLARATION\n                            \n                        \n                        \n                            \n                                 METHOD_CALL_DECLARATION\n                            \n                        \n                        \n                            \n                                 NAMED_BLOCK_DECLARATION\n                            \n                        \n                        \n                            \n                                 PARALLEL_BLOCK_DECLARATION\n                            \n                        \n                        \n                            \n                                 RETURN_DECLARATION\n                            \n                        \n                        \n                            \n                                 TEXT_DECLARATION\n                            \n                        \n                        \n                            \n                                 THROW_DECLARATION\n                            \n                        \n                        \n                            \n                                 TRY_CATCH_DECLARATION\n                            \n                        \n                        \n                            \n                                 VARIABLE_DECLARATION\n                            \n                        \n                        \n                            \n                                 VARIABLE_LIST_DECLARATION\n                            \n                        \n            \n        \n\n    packages/ast-to-mmd/src/app/graph-parser/include-file.ts\n    \n        \n            \n                \n                    \n                        \n                        DecoratorType\n                    \n                \n                        \n                            \n                                 INJECTABLE\n                            \n                        \n                        \n                            \n                                 CONTROLLER\n                            \n                        \n                        \n                            \n                                 COMMAND_HANDLER\n                            \n                        \n                        \n                            \n                                 QUERY_HANDLER\n                            \n                        \n                        \n                            \n                                 EVENT_HANDLER\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        FileType\n                    \n                \n                        \n                            \n                                 CONTROLLER\n                            \n                        \n                        \n                            \n                                 FACADE\n                            \n                        \n                        \n                            \n                                 SERVICE\n                            \n                        \n                        \n                            \n                                 HANDLER\n                            \n                        \n            \n        \n\n    packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts\n    \n        \n            \n                \n                    \n                        \n                        LINE_HEAD\n                    \n                \n                    \n                        \n                            Style of head of the line.\n\nNONE: ---\nARROR: -->\nPOINT: --O\nCROSS: --X\n\n\n                        \n                    \n                        \n                            \n                                 NONE\n                            \n                        \n                        \n                            \n                                 ARROW\n                            \n                        \n                        \n                            \n                                 POINT\n                            \n                        \n                        \n                            \n                                 CROSS\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        LINE_STYLE\n                    \n                \n                    \n                        \n                            Style of the line.\n\nNORMAL: ---\nDOTTED: ...\n\n\n                        \n                    \n                        \n                            \n                                 NORMAL\n                            \n                        \n                        \n                            \n                                 DOTTED\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        LINE_WIDTH\n                    \n                \n                    \n                        \n                            Width of the line.\n\nNORMAL:  ---\nTHICK: ===\n\n\n                        \n                    \n                        \n                            \n                                 NORMAL\n                            \n                        \n                        \n                            \n                                 THICK\n                            \n                        \n            \n        \n\n    packages/ast-to-mmd/src/app/graph-blocks/renderer/shape-renderer.ts\n    \n        \n            \n                \n                    \n                        \n                        Shape\n                    \n                \n                        \n                            \n                                 DEFAULT\n                            \n                        \n                        \n                            \n                                Value : $TEXT$\n                            \n                        \n                        \n                            \n                                 ROUND_EDGES\n                            \n                        \n                        \n                            \n                                Value : ($TEXT$)\n                            \n                        \n                        \n                            \n                                 SHARP_EDGES\n                            \n                        \n                        \n                            \n                                Value : [$TEXT$]\n                            \n                        \n                        \n                            \n                                 STADIUM_SHAPED\n                            \n                        \n                        \n                            \n                                Value : ([$TEXT$])\n                            \n                        \n                        \n                            \n                                 SUBROUTINE\n                            \n                        \n                        \n                            \n                                Value : [[$TEXT$]]\n                            \n                        \n                        \n                            \n                                 CYLINDER\n                            \n                        \n                        \n                            \n                                Value : [($TEXT$)]\n                            \n                        \n                        \n                            \n                                 CIRCLE\n                            \n                        \n                        \n                            \n                                Value : (($TEXT$))\n                            \n                        \n                        \n                            \n                                 ASYMETRIC_RIGHT\n                            \n                        \n                        \n                            \n                                Value : >$TEXT$]\n                            \n                        \n                        \n                            \n                                 RHOMBUS\n                            \n                        \n                        \n                            \n                                Value : {$TEXT$}\n                            \n                        \n                        \n                            \n                                 HEXAGON\n                            \n                        \n                        \n                            \n                                Value : {{$TEXT$}}\n                            \n                        \n                        \n                            \n                                 PARALLEOGRAM\n                            \n                        \n                        \n                            \n                                Value : [/$TEXT$/]\n                            \n                        \n                        \n                            \n                                 PARALLEOGRAM_ALT\n                            \n                        \n                        \n                            \n                                Value : [\\$TEXT$\\]\n                            \n                        \n                        \n                            \n                                 TRAPEZOID\n                            \n                        \n                        \n                            \n                                Value : [/$TEXT$\\]\n                            \n                        \n                        \n                            \n                                 TRAPEZOID_ALT\n                            \n                        \n                        \n                            \n                                Value : [\\$TEXT$/]\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            includeFile   (packages/.../include-file.ts)\n                        \n                        \n                            resolveDecoratorType   (packages/.../include-file.ts)\n                        \n                        \n                            resolveFileType   (packages/.../include-file.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/ast-to-mmd/src/app/graph-parser/include-file.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        includeFile\n                        \n                    \n                \n            \n            \n                \nincludeFile(analyzedClass: ClassDeclaration)\n                \n            \n\n\n\n\n            \n                \n                    Based on the analyzed class is defined,\nwhether the MMD graph is generated or not.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    analyzedClass\n                                    \n                                            ClassDeclaration\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Analyzed class\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolveDecoratorType\n                        \n                    \n                \n            \n            \n                \nresolveDecoratorType(decorators)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    decorators\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DecoratorType | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolveFileType\n                        \n                    \n                \n            \n            \n                \nresolveFileType(analyzedClass: ClassDeclaration)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    analyzedClass\n                                    \n                                            ClassDeclaration\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FileType | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAST-to-MMD\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    32 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LineRendererModifier   (packages/.../line-renderer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/ast-to-mmd/src/app/graph-blocks/renderer/line-renderer.ts\n    \n    \n        \n            \n                \n                    \n                    LineRendererModifier\n                \n            \n            \n                \n                    Modifier of existing LineRenderer\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            convertor   (packages/.../index.ts)\n                        \n                        \n                            cwd   (packages/.../index.ts)\n                        \n                        \n                            CYCLE_BLOCK_KIND   (packages/.../block.kind.ts)\n                        \n                        \n                            decoratorTypeMap   (packages/.../include-file.ts)\n                        \n                        \n                            exporter   (packages/.../index.ts)\n                        \n                        \n                            fileTypeMap   (packages/.../include-file.ts)\n                        \n                        \n                            graphResults   (packages/.../index.ts)\n                        \n                        \n                            idGenerator   (packages/.../index.ts)\n                        \n                        \n                            options   (packages/.../index.ts)\n                        \n                        \n                            project   (packages/.../index.ts)\n                        \n                        \n                            tsMorphOptions   (packages/.../index.ts)\n                        \n                        \n                            version   (packages/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/ast-to-mmd/src/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        convertor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Convertor(project.getSourceFiles(), idGenerator)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cwd\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.cwd()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exporter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Exporter(options['output'])\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        graphResults\n                        \n                    \n                \n            \n                \n                    \n                        Default value : convertor.convert()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        idGenerator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new UuidBlockIdGenerator()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Default value : program.opts()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        project\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Project(tsMorphOptions)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tsMorphOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProjectOptions\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Default value : JSON.parse(\n  readFileSync(path.resolve(__dirname, '../../../../', 'package.json'), { encoding: 'utf-8' })\n).version\n                    \n                \n\n\n        \n    \n\n    packages/ast-to-mmd/src/app/block.kind.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CYCLE_BLOCK_KIND\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BlockKind[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  BlockKind.FOR_DECLARATION,\n  BlockKind.FOR_IN_DECLARATION,\n  BlockKind.FOR_OF_DECLARATION,\n]\n                    \n                \n\n\n        \n    \n\n    packages/ast-to-mmd/src/app/graph-parser/include-file.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        decoratorTypeMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Record\n\n                    \n                \n                \n                    \n                        Default value : {\n  Injectable: DecoratorType.INJECTABLE,\n  Controller: DecoratorType.CONTROLLER,\n  CommandHandler: DecoratorType.COMMAND_HANDLER,\n  QueryHandler: DecoratorType.QUERY_HANDLER,\n  EventHandler: DecoratorType.EVENT_HANDLER,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileTypeMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Record\n\n                    \n                \n                \n                    \n                        Default value : {\n  Controller: FileType.CONTROLLER,\n  Facade: FileType.FACADE,\n  Service: FileType.SERVICE,\n  Handler: FileType.HANDLER,\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
